//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_Authorization2Theater", "Theater", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.Theater), "Authorization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.Authorization), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_BackupLog2BackupSetting", "BackupSetting", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.BackupSetting), "BackupLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.BackupLog), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_Block2SeatingChart", "SeatingChart", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.SeatingChart), "Block", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.Block), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_BlockPrice2Block", "Block", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.Block), "BlockPrice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.BlockPrice), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_Seat2Block", "Block", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.Block), "Seat", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.Seat), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_BlockPrice2ShowPlan", "ShowPlan", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.ShowPlan), "BlockPrice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.BlockPrice), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_TemplateItem2CommonItem_FK", "CommonItem", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.CommonItem), "TemplateItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.TemplateItem), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_Customer2CustomerType", "CustomerType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.CustomerType), "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.Customer), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_Debt2Customer", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.Customer), "Debt", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.Debt), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_VoucherBatch2Customer", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.Customer), "VoucherBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.VoucherBatch), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_DailyPlan2Theater", "Theater", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.Theater), "DailyPlan", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.DailyPlan), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_ShowPlan2DailyPlan", "DailyPlan", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.DailyPlan), "ShowPlan", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.ShowPlan), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_D_T2D", "Discount", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.Discount), "Discount_Type", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.Discount_Type), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_D_T2DT", "DiscountType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.DiscountType), "Discount_Type", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.Discount_Type), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_ShowPlan2DiscountType", "DiscountType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.DiscountType), "ShowPlan", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.ShowPlan), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_DownloadSetting2Theater", "Theater", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Flamingo.Theater), "DownloadSetting", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.DownloadSetting), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_ShowPlan2FareSetting", "FareSetting", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.FareSetting), "ShowPlan", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.ShowPlan), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_F_F2Film", "Film", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.Film), "Film_FilmMode", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.Film_FilmMode), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_Film_FilmType2Film", "Film", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.Film), "Film_FilmType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.Film_FilmType), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_Film2FilmArea", "FilmArea", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.FilmArea), "Film", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.Film), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_Film2FilmCategory", "FilmCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.FilmCategory), "Film", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.Film), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_ShowPlan2Film", "Film", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.Film), "ShowPlan", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.ShowPlan), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_Ticket2Film", "Film", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.Film), "Ticket", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.Ticket), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_F_F2FilmMode", "FilmMode", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.FilmMode), "Film_FilmMode", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.Film_FilmMode), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_Film_FilmType2FilmType", "FilmType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.FilmType), "Film_FilmType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.Film_FilmType), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_Hall2Theater", "Theater", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.Theater), "Hall", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.Hall), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_SeatingChart2Hall", "Hall", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.Hall), "SeatingChart", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.SeatingChart), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_ShowPlan2Hall", "Hall", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.Hall), "ShowPlan", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.ShowPlan), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_Permission2Module", "Module", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.Module), "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.Permission), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_Ticket2Payment", "Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.Payment), "Ticket", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.Ticket), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_R_P2Permission", "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Flamingo.Permission), "Role_Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.Role_Permission), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_U_P2Permission", "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Flamingo.Permission), "User_Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.User_Permission), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_Template2PrintSetting", "PrintSetting", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.PrintSetting), "Template", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.Template), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_Reservation2SeatStatus", "SeatStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Flamingo.SeatStatus), "Reservation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.Reservation), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_Reservation2TicketType", "TicketType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.TicketType), "Reservation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.Reservation), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_R_P2Role", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Flamingo.Role), "Role_Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.Role_Permission), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_U_P2Role", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.Role), "User_Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.User_Permission), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_U_R2Role", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.Role), "User_Role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.User_Role), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_Seat2SeatingChart", "SeatingChart", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.SeatingChart), "Seat", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.Seat), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_SeatSataus2Seat", "Seat", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.Seat), "SeatStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.SeatStatus), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_SeatStatus2ShowPlan", "ShowPlan", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.ShowPlan), "SeatStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.SeatStatus), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_Ticket2SeatStatus", "SeatStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Flamingo.SeatStatus), "Ticket", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.Ticket), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_ShowPlan2ShowType", "ShowType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.ShowType), "ShowPlan", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.ShowPlan), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_Ticket2ShowPlan", "ShowPlan", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.ShowPlan), "Ticket", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.Ticket), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_Tax2Theater", "Theater", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Flamingo.Theater), "Tax", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.Tax), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_TemplateItem2Template_FK", "Template", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.Template), "TemplateItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.TemplateItem), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_Ticket2Template", "Template", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.Template), "Ticket", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.Ticket), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_TimeSetting2Theater", "Theater", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Flamingo.Theater), "TimeSetting", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.TimeSetting), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_UploadSetting2Theater", "Theater", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Flamingo.Theater), "UploadSetting", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.UploadSetting), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_Ticket2TicketType", "TicketType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.TicketType), "Ticket", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.Ticket), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_Voucher2Ticket", "Ticket", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.Ticket), "Voucher", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.Voucher), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_UploadLog2UploadSetting", "UploadSetting", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Flamingo.UploadSetting), "UploadLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.UploadLog), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_U_P2User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Flamingo.User), "User_Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.User_Permission), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_U_R2User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.User), "User_Role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.User_Role), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_Voucher2VoucherBatch", "VoucherBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.VoucherBatch), "Voucher", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.Voucher), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_VoucherBatch2VoucherSubType", "VoucherSubType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.VoucherSubType), "VoucherBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.VoucherBatch), true)]
[assembly: EdmRelationshipAttribute("FlamingoModel", "FK_VoucherBatch2VoucherType", "VoucherType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Flamingo.VoucherType), "VoucherBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Flamingo.VoucherBatch), true)]

#endregion

namespace Flamingo
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class FlamingoEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“FlamingoEntities”部分中的连接字符串初始化新 FlamingoEntities 对象。
        /// </summary>
        public FlamingoEntities() : base("name=FlamingoEntities", "FlamingoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 FlamingoEntities 对象。
        /// </summary>
        public FlamingoEntities(string connectionString) : base(connectionString, "FlamingoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 FlamingoEntities 对象。
        /// </summary>
        public FlamingoEntities(EntityConnection connection) : base(connection, "FlamingoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Authorization> Authorization
        {
            get
            {
                if ((_Authorization == null))
                {
                    _Authorization = base.CreateObjectSet<Authorization>("Authorization");
                }
                return _Authorization;
            }
        }
        private ObjectSet<Authorization> _Authorization;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<BackupLog> BackupLog
        {
            get
            {
                if ((_BackupLog == null))
                {
                    _BackupLog = base.CreateObjectSet<BackupLog>("BackupLog");
                }
                return _BackupLog;
            }
        }
        private ObjectSet<BackupLog> _BackupLog;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<BackupSetting> BackupSetting
        {
            get
            {
                if ((_BackupSetting == null))
                {
                    _BackupSetting = base.CreateObjectSet<BackupSetting>("BackupSetting");
                }
                return _BackupSetting;
            }
        }
        private ObjectSet<BackupSetting> _BackupSetting;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Block> Block
        {
            get
            {
                if ((_Block == null))
                {
                    _Block = base.CreateObjectSet<Block>("Block");
                }
                return _Block;
            }
        }
        private ObjectSet<Block> _Block;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<BlockPrice> BlockPrice
        {
            get
            {
                if ((_BlockPrice == null))
                {
                    _BlockPrice = base.CreateObjectSet<BlockPrice>("BlockPrice");
                }
                return _BlockPrice;
            }
        }
        private ObjectSet<BlockPrice> _BlockPrice;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<CommonItem> CommonItem
        {
            get
            {
                if ((_CommonItem == null))
                {
                    _CommonItem = base.CreateObjectSet<CommonItem>("CommonItem");
                }
                return _CommonItem;
            }
        }
        private ObjectSet<CommonItem> _CommonItem;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Customer> Customer
        {
            get
            {
                if ((_Customer == null))
                {
                    _Customer = base.CreateObjectSet<Customer>("Customer");
                }
                return _Customer;
            }
        }
        private ObjectSet<Customer> _Customer;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<CustomerType> CustomerType
        {
            get
            {
                if ((_CustomerType == null))
                {
                    _CustomerType = base.CreateObjectSet<CustomerType>("CustomerType");
                }
                return _CustomerType;
            }
        }
        private ObjectSet<CustomerType> _CustomerType;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<DailyPlan> DailyPlan
        {
            get
            {
                if ((_DailyPlan == null))
                {
                    _DailyPlan = base.CreateObjectSet<DailyPlan>("DailyPlan");
                }
                return _DailyPlan;
            }
        }
        private ObjectSet<DailyPlan> _DailyPlan;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Debt> Debt
        {
            get
            {
                if ((_Debt == null))
                {
                    _Debt = base.CreateObjectSet<Debt>("Debt");
                }
                return _Debt;
            }
        }
        private ObjectSet<Debt> _Debt;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Discount> Discount
        {
            get
            {
                if ((_Discount == null))
                {
                    _Discount = base.CreateObjectSet<Discount>("Discount");
                }
                return _Discount;
            }
        }
        private ObjectSet<Discount> _Discount;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Discount_Type> Discount_Type
        {
            get
            {
                if ((_Discount_Type == null))
                {
                    _Discount_Type = base.CreateObjectSet<Discount_Type>("Discount_Type");
                }
                return _Discount_Type;
            }
        }
        private ObjectSet<Discount_Type> _Discount_Type;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<DiscountType> DiscountType
        {
            get
            {
                if ((_DiscountType == null))
                {
                    _DiscountType = base.CreateObjectSet<DiscountType>("DiscountType");
                }
                return _DiscountType;
            }
        }
        private ObjectSet<DiscountType> _DiscountType;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<DownloadSetting> DownloadSetting
        {
            get
            {
                if ((_DownloadSetting == null))
                {
                    _DownloadSetting = base.CreateObjectSet<DownloadSetting>("DownloadSetting");
                }
                return _DownloadSetting;
            }
        }
        private ObjectSet<DownloadSetting> _DownloadSetting;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<FareSetting> FareSetting
        {
            get
            {
                if ((_FareSetting == null))
                {
                    _FareSetting = base.CreateObjectSet<FareSetting>("FareSetting");
                }
                return _FareSetting;
            }
        }
        private ObjectSet<FareSetting> _FareSetting;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Film> Film
        {
            get
            {
                if ((_Film == null))
                {
                    _Film = base.CreateObjectSet<Film>("Film");
                }
                return _Film;
            }
        }
        private ObjectSet<Film> _Film;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Film_FilmMode> Film_FilmMode
        {
            get
            {
                if ((_Film_FilmMode == null))
                {
                    _Film_FilmMode = base.CreateObjectSet<Film_FilmMode>("Film_FilmMode");
                }
                return _Film_FilmMode;
            }
        }
        private ObjectSet<Film_FilmMode> _Film_FilmMode;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Film_FilmType> Film_FilmType
        {
            get
            {
                if ((_Film_FilmType == null))
                {
                    _Film_FilmType = base.CreateObjectSet<Film_FilmType>("Film_FilmType");
                }
                return _Film_FilmType;
            }
        }
        private ObjectSet<Film_FilmType> _Film_FilmType;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<FilmArea> FilmArea
        {
            get
            {
                if ((_FilmArea == null))
                {
                    _FilmArea = base.CreateObjectSet<FilmArea>("FilmArea");
                }
                return _FilmArea;
            }
        }
        private ObjectSet<FilmArea> _FilmArea;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<FilmCategory> FilmCategory
        {
            get
            {
                if ((_FilmCategory == null))
                {
                    _FilmCategory = base.CreateObjectSet<FilmCategory>("FilmCategory");
                }
                return _FilmCategory;
            }
        }
        private ObjectSet<FilmCategory> _FilmCategory;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<FilmMode> FilmMode
        {
            get
            {
                if ((_FilmMode == null))
                {
                    _FilmMode = base.CreateObjectSet<FilmMode>("FilmMode");
                }
                return _FilmMode;
            }
        }
        private ObjectSet<FilmMode> _FilmMode;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<FilmPrices> FilmPrices
        {
            get
            {
                if ((_FilmPrices == null))
                {
                    _FilmPrices = base.CreateObjectSet<FilmPrices>("FilmPrices");
                }
                return _FilmPrices;
            }
        }
        private ObjectSet<FilmPrices> _FilmPrices;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<FilmType> FilmType
        {
            get
            {
                if ((_FilmType == null))
                {
                    _FilmType = base.CreateObjectSet<FilmType>("FilmType");
                }
                return _FilmType;
            }
        }
        private ObjectSet<FilmType> _FilmType;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Hall> Hall
        {
            get
            {
                if ((_Hall == null))
                {
                    _Hall = base.CreateObjectSet<Hall>("Hall");
                }
                return _Hall;
            }
        }
        private ObjectSet<Hall> _Hall;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<HallPrices> HallPrices
        {
            get
            {
                if ((_HallPrices == null))
                {
                    _HallPrices = base.CreateObjectSet<HallPrices>("HallPrices");
                }
                return _HallPrices;
            }
        }
        private ObjectSet<HallPrices> _HallPrices;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Module> Module
        {
            get
            {
                if ((_Module == null))
                {
                    _Module = base.CreateObjectSet<Module>("Module");
                }
                return _Module;
            }
        }
        private ObjectSet<Module> _Module;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<OnlineUserLog> OnlineUserLog
        {
            get
            {
                if ((_OnlineUserLog == null))
                {
                    _OnlineUserLog = base.CreateObjectSet<OnlineUserLog>("OnlineUserLog");
                }
                return _OnlineUserLog;
            }
        }
        private ObjectSet<OnlineUserLog> _OnlineUserLog;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Payment> Payment
        {
            get
            {
                if ((_Payment == null))
                {
                    _Payment = base.CreateObjectSet<Payment>("Payment");
                }
                return _Payment;
            }
        }
        private ObjectSet<Payment> _Payment;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<PeriodPrices> PeriodPrices
        {
            get
            {
                if ((_PeriodPrices == null))
                {
                    _PeriodPrices = base.CreateObjectSet<PeriodPrices>("PeriodPrices");
                }
                return _PeriodPrices;
            }
        }
        private ObjectSet<PeriodPrices> _PeriodPrices;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Permission> Permission
        {
            get
            {
                if ((_Permission == null))
                {
                    _Permission = base.CreateObjectSet<Permission>("Permission");
                }
                return _Permission;
            }
        }
        private ObjectSet<Permission> _Permission;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<PrintSetting> PrintSetting
        {
            get
            {
                if ((_PrintSetting == null))
                {
                    _PrintSetting = base.CreateObjectSet<PrintSetting>("PrintSetting");
                }
                return _PrintSetting;
            }
        }
        private ObjectSet<PrintSetting> _PrintSetting;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Reservation> Reservation
        {
            get
            {
                if ((_Reservation == null))
                {
                    _Reservation = base.CreateObjectSet<Reservation>("Reservation");
                }
                return _Reservation;
            }
        }
        private ObjectSet<Reservation> _Reservation;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Role> Role
        {
            get
            {
                if ((_Role == null))
                {
                    _Role = base.CreateObjectSet<Role>("Role");
                }
                return _Role;
            }
        }
        private ObjectSet<Role> _Role;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Role_Permission> Role_Permission
        {
            get
            {
                if ((_Role_Permission == null))
                {
                    _Role_Permission = base.CreateObjectSet<Role_Permission>("Role_Permission");
                }
                return _Role_Permission;
            }
        }
        private ObjectSet<Role_Permission> _Role_Permission;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Rpt_TicketReport> Rpt_TicketReport
        {
            get
            {
                if ((_Rpt_TicketReport == null))
                {
                    _Rpt_TicketReport = base.CreateObjectSet<Rpt_TicketReport>("Rpt_TicketReport");
                }
                return _Rpt_TicketReport;
            }
        }
        private ObjectSet<Rpt_TicketReport> _Rpt_TicketReport;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Seat> Seat
        {
            get
            {
                if ((_Seat == null))
                {
                    _Seat = base.CreateObjectSet<Seat>("Seat");
                }
                return _Seat;
            }
        }
        private ObjectSet<Seat> _Seat;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<SeatingChart> SeatingChart
        {
            get
            {
                if ((_SeatingChart == null))
                {
                    _SeatingChart = base.CreateObjectSet<SeatingChart>("SeatingChart");
                }
                return _SeatingChart;
            }
        }
        private ObjectSet<SeatingChart> _SeatingChart;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<SeatStatus> SeatStatus
        {
            get
            {
                if ((_SeatStatus == null))
                {
                    _SeatStatus = base.CreateObjectSet<SeatStatus>("SeatStatus");
                }
                return _SeatStatus;
            }
        }
        private ObjectSet<SeatStatus> _SeatStatus;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ShowPlan> ShowPlan
        {
            get
            {
                if ((_ShowPlan == null))
                {
                    _ShowPlan = base.CreateObjectSet<ShowPlan>("ShowPlan");
                }
                return _ShowPlan;
            }
        }
        private ObjectSet<ShowPlan> _ShowPlan;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ShowType> ShowType
        {
            get
            {
                if ((_ShowType == null))
                {
                    _ShowType = base.CreateObjectSet<ShowType>("ShowType");
                }
                return _ShowType;
            }
        }
        private ObjectSet<ShowType> _ShowType;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Tax> Tax
        {
            get
            {
                if ((_Tax == null))
                {
                    _Tax = base.CreateObjectSet<Tax>("Tax");
                }
                return _Tax;
            }
        }
        private ObjectSet<Tax> _Tax;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Template> Template
        {
            get
            {
                if ((_Template == null))
                {
                    _Template = base.CreateObjectSet<Template>("Template");
                }
                return _Template;
            }
        }
        private ObjectSet<Template> _Template;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<TemplateItem> TemplateItem
        {
            get
            {
                if ((_TemplateItem == null))
                {
                    _TemplateItem = base.CreateObjectSet<TemplateItem>("TemplateItem");
                }
                return _TemplateItem;
            }
        }
        private ObjectSet<TemplateItem> _TemplateItem;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Theater> Theater
        {
            get
            {
                if ((_Theater == null))
                {
                    _Theater = base.CreateObjectSet<Theater>("Theater");
                }
                return _Theater;
            }
        }
        private ObjectSet<Theater> _Theater;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<TheaterPrices> TheaterPrices
        {
            get
            {
                if ((_TheaterPrices == null))
                {
                    _TheaterPrices = base.CreateObjectSet<TheaterPrices>("TheaterPrices");
                }
                return _TheaterPrices;
            }
        }
        private ObjectSet<TheaterPrices> _TheaterPrices;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Ticket> Ticket
        {
            get
            {
                if ((_Ticket == null))
                {
                    _Ticket = base.CreateObjectSet<Ticket>("Ticket");
                }
                return _Ticket;
            }
        }
        private ObjectSet<Ticket> _Ticket;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<TicketType> TicketType
        {
            get
            {
                if ((_TicketType == null))
                {
                    _TicketType = base.CreateObjectSet<TicketType>("TicketType");
                }
                return _TicketType;
            }
        }
        private ObjectSet<TicketType> _TicketType;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<TimeSetting> TimeSetting
        {
            get
            {
                if ((_TimeSetting == null))
                {
                    _TimeSetting = base.CreateObjectSet<TimeSetting>("TimeSetting");
                }
                return _TimeSetting;
            }
        }
        private ObjectSet<TimeSetting> _TimeSetting;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UploadLog> UploadLog
        {
            get
            {
                if ((_UploadLog == null))
                {
                    _UploadLog = base.CreateObjectSet<UploadLog>("UploadLog");
                }
                return _UploadLog;
            }
        }
        private ObjectSet<UploadLog> _UploadLog;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UploadSetting> UploadSetting
        {
            get
            {
                if ((_UploadSetting == null))
                {
                    _UploadSetting = base.CreateObjectSet<UploadSetting>("UploadSetting");
                }
                return _UploadSetting;
            }
        }
        private ObjectSet<UploadSetting> _UploadSetting;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<User> User
        {
            get
            {
                if ((_User == null))
                {
                    _User = base.CreateObjectSet<User>("User");
                }
                return _User;
            }
        }
        private ObjectSet<User> _User;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<User_Permission> User_Permission
        {
            get
            {
                if ((_User_Permission == null))
                {
                    _User_Permission = base.CreateObjectSet<User_Permission>("User_Permission");
                }
                return _User_Permission;
            }
        }
        private ObjectSet<User_Permission> _User_Permission;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<User_Role> User_Role
        {
            get
            {
                if ((_User_Role == null))
                {
                    _User_Role = base.CreateObjectSet<User_Role>("User_Role");
                }
                return _User_Role;
            }
        }
        private ObjectSet<User_Role> _User_Role;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserLog> UserLog
        {
            get
            {
                if ((_UserLog == null))
                {
                    _UserLog = base.CreateObjectSet<UserLog>("UserLog");
                }
                return _UserLog;
            }
        }
        private ObjectSet<UserLog> _UserLog;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Voucher> Voucher
        {
            get
            {
                if ((_Voucher == null))
                {
                    _Voucher = base.CreateObjectSet<Voucher>("Voucher");
                }
                return _Voucher;
            }
        }
        private ObjectSet<Voucher> _Voucher;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<VoucherBatch> VoucherBatch
        {
            get
            {
                if ((_VoucherBatch == null))
                {
                    _VoucherBatch = base.CreateObjectSet<VoucherBatch>("VoucherBatch");
                }
                return _VoucherBatch;
            }
        }
        private ObjectSet<VoucherBatch> _VoucherBatch;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<VoucherSubType> VoucherSubType
        {
            get
            {
                if ((_VoucherSubType == null))
                {
                    _VoucherSubType = base.CreateObjectSet<VoucherSubType>("VoucherSubType");
                }
                return _VoucherSubType;
            }
        }
        private ObjectSet<VoucherSubType> _VoucherSubType;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<VoucherType> VoucherType
        {
            get
            {
                if ((_VoucherType == null))
                {
                    _VoucherType = base.CreateObjectSet<VoucherType>("VoucherType");
                }
                return _VoucherType;
            }
        }
        private ObjectSet<VoucherType> _VoucherType;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 Authorization EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToAuthorization(Authorization authorization)
        {
            base.AddObject("Authorization", authorization);
        }
    
        /// <summary>
        /// 用于向 BackupLog EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToBackupLog(BackupLog backupLog)
        {
            base.AddObject("BackupLog", backupLog);
        }
    
        /// <summary>
        /// 用于向 BackupSetting EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToBackupSetting(BackupSetting backupSetting)
        {
            base.AddObject("BackupSetting", backupSetting);
        }
    
        /// <summary>
        /// 用于向 Block EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToBlock(Block block)
        {
            base.AddObject("Block", block);
        }
    
        /// <summary>
        /// 用于向 BlockPrice EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToBlockPrice(BlockPrice blockPrice)
        {
            base.AddObject("BlockPrice", blockPrice);
        }
    
        /// <summary>
        /// 用于向 CommonItem EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCommonItem(CommonItem commonItem)
        {
            base.AddObject("CommonItem", commonItem);
        }
    
        /// <summary>
        /// 用于向 Customer EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCustomer(Customer customer)
        {
            base.AddObject("Customer", customer);
        }
    
        /// <summary>
        /// 用于向 CustomerType EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCustomerType(CustomerType customerType)
        {
            base.AddObject("CustomerType", customerType);
        }
    
        /// <summary>
        /// 用于向 DailyPlan EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToDailyPlan(DailyPlan dailyPlan)
        {
            base.AddObject("DailyPlan", dailyPlan);
        }
    
        /// <summary>
        /// 用于向 Debt EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToDebt(Debt debt)
        {
            base.AddObject("Debt", debt);
        }
    
        /// <summary>
        /// 用于向 Discount EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToDiscount(Discount discount)
        {
            base.AddObject("Discount", discount);
        }
    
        /// <summary>
        /// 用于向 Discount_Type EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToDiscount_Type(Discount_Type discount_Type)
        {
            base.AddObject("Discount_Type", discount_Type);
        }
    
        /// <summary>
        /// 用于向 DiscountType EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToDiscountType(DiscountType discountType)
        {
            base.AddObject("DiscountType", discountType);
        }
    
        /// <summary>
        /// 用于向 DownloadSetting EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToDownloadSetting(DownloadSetting downloadSetting)
        {
            base.AddObject("DownloadSetting", downloadSetting);
        }
    
        /// <summary>
        /// 用于向 FareSetting EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToFareSetting(FareSetting fareSetting)
        {
            base.AddObject("FareSetting", fareSetting);
        }
    
        /// <summary>
        /// 用于向 Film EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToFilm(Film film)
        {
            base.AddObject("Film", film);
        }
    
        /// <summary>
        /// 用于向 Film_FilmMode EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToFilm_FilmMode(Film_FilmMode film_FilmMode)
        {
            base.AddObject("Film_FilmMode", film_FilmMode);
        }
    
        /// <summary>
        /// 用于向 Film_FilmType EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToFilm_FilmType(Film_FilmType film_FilmType)
        {
            base.AddObject("Film_FilmType", film_FilmType);
        }
    
        /// <summary>
        /// 用于向 FilmArea EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToFilmArea(FilmArea filmArea)
        {
            base.AddObject("FilmArea", filmArea);
        }
    
        /// <summary>
        /// 用于向 FilmCategory EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToFilmCategory(FilmCategory filmCategory)
        {
            base.AddObject("FilmCategory", filmCategory);
        }
    
        /// <summary>
        /// 用于向 FilmMode EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToFilmMode(FilmMode filmMode)
        {
            base.AddObject("FilmMode", filmMode);
        }
    
        /// <summary>
        /// 用于向 FilmPrices EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToFilmPrices(FilmPrices filmPrices)
        {
            base.AddObject("FilmPrices", filmPrices);
        }
    
        /// <summary>
        /// 用于向 FilmType EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToFilmType(FilmType filmType)
        {
            base.AddObject("FilmType", filmType);
        }
    
        /// <summary>
        /// 用于向 Hall EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToHall(Hall hall)
        {
            base.AddObject("Hall", hall);
        }
    
        /// <summary>
        /// 用于向 HallPrices EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToHallPrices(HallPrices hallPrices)
        {
            base.AddObject("HallPrices", hallPrices);
        }
    
        /// <summary>
        /// 用于向 Module EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToModule(Module module)
        {
            base.AddObject("Module", module);
        }
    
        /// <summary>
        /// 用于向 OnlineUserLog EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToOnlineUserLog(OnlineUserLog onlineUserLog)
        {
            base.AddObject("OnlineUserLog", onlineUserLog);
        }
    
        /// <summary>
        /// 用于向 Payment EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPayment(Payment payment)
        {
            base.AddObject("Payment", payment);
        }
    
        /// <summary>
        /// 用于向 PeriodPrices EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPeriodPrices(PeriodPrices periodPrices)
        {
            base.AddObject("PeriodPrices", periodPrices);
        }
    
        /// <summary>
        /// 用于向 Permission EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPermission(Permission permission)
        {
            base.AddObject("Permission", permission);
        }
    
        /// <summary>
        /// 用于向 PrintSetting EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPrintSetting(PrintSetting printSetting)
        {
            base.AddObject("PrintSetting", printSetting);
        }
    
        /// <summary>
        /// 用于向 Reservation EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToReservation(Reservation reservation)
        {
            base.AddObject("Reservation", reservation);
        }
    
        /// <summary>
        /// 用于向 Role EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToRole(Role role)
        {
            base.AddObject("Role", role);
        }
    
        /// <summary>
        /// 用于向 Role_Permission EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToRole_Permission(Role_Permission role_Permission)
        {
            base.AddObject("Role_Permission", role_Permission);
        }
    
        /// <summary>
        /// 用于向 Rpt_TicketReport EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToRpt_TicketReport(Rpt_TicketReport rpt_TicketReport)
        {
            base.AddObject("Rpt_TicketReport", rpt_TicketReport);
        }
    
        /// <summary>
        /// 用于向 Seat EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSeat(Seat seat)
        {
            base.AddObject("Seat", seat);
        }
    
        /// <summary>
        /// 用于向 SeatingChart EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSeatingChart(SeatingChart seatingChart)
        {
            base.AddObject("SeatingChart", seatingChart);
        }
    
        /// <summary>
        /// 用于向 SeatStatus EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSeatStatus(SeatStatus seatStatus)
        {
            base.AddObject("SeatStatus", seatStatus);
        }
    
        /// <summary>
        /// 用于向 ShowPlan EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToShowPlan(ShowPlan showPlan)
        {
            base.AddObject("ShowPlan", showPlan);
        }
    
        /// <summary>
        /// 用于向 ShowType EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToShowType(ShowType showType)
        {
            base.AddObject("ShowType", showType);
        }
    
        /// <summary>
        /// 用于向 Tax EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTax(Tax tax)
        {
            base.AddObject("Tax", tax);
        }
    
        /// <summary>
        /// 用于向 Template EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTemplate(Template template)
        {
            base.AddObject("Template", template);
        }
    
        /// <summary>
        /// 用于向 TemplateItem EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTemplateItem(TemplateItem templateItem)
        {
            base.AddObject("TemplateItem", templateItem);
        }
    
        /// <summary>
        /// 用于向 Theater EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTheater(Theater theater)
        {
            base.AddObject("Theater", theater);
        }
    
        /// <summary>
        /// 用于向 TheaterPrices EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTheaterPrices(TheaterPrices theaterPrices)
        {
            base.AddObject("TheaterPrices", theaterPrices);
        }
    
        /// <summary>
        /// 用于向 Ticket EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTicket(Ticket ticket)
        {
            base.AddObject("Ticket", ticket);
        }
    
        /// <summary>
        /// 用于向 TicketType EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTicketType(TicketType ticketType)
        {
            base.AddObject("TicketType", ticketType);
        }
    
        /// <summary>
        /// 用于向 TimeSetting EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTimeSetting(TimeSetting timeSetting)
        {
            base.AddObject("TimeSetting", timeSetting);
        }
    
        /// <summary>
        /// 用于向 UploadLog EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUploadLog(UploadLog uploadLog)
        {
            base.AddObject("UploadLog", uploadLog);
        }
    
        /// <summary>
        /// 用于向 UploadSetting EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUploadSetting(UploadSetting uploadSetting)
        {
            base.AddObject("UploadSetting", uploadSetting);
        }
    
        /// <summary>
        /// 用于向 User EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUser(User user)
        {
            base.AddObject("User", user);
        }
    
        /// <summary>
        /// 用于向 User_Permission EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUser_Permission(User_Permission user_Permission)
        {
            base.AddObject("User_Permission", user_Permission);
        }
    
        /// <summary>
        /// 用于向 User_Role EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUser_Role(User_Role user_Role)
        {
            base.AddObject("User_Role", user_Role);
        }
    
        /// <summary>
        /// 用于向 UserLog EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserLog(UserLog userLog)
        {
            base.AddObject("UserLog", userLog);
        }
    
        /// <summary>
        /// 用于向 Voucher EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToVoucher(Voucher voucher)
        {
            base.AddObject("Voucher", voucher);
        }
    
        /// <summary>
        /// 用于向 VoucherBatch EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToVoucherBatch(VoucherBatch voucherBatch)
        {
            base.AddObject("VoucherBatch", voucherBatch);
        }
    
        /// <summary>
        /// 用于向 VoucherSubType EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToVoucherSubType(VoucherSubType voucherSubType)
        {
            base.AddObject("VoucherSubType", voucherSubType);
        }
    
        /// <summary>
        /// 用于向 VoucherType EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToVoucherType(VoucherType voucherType)
        {
            base.AddObject("VoucherType", voucherType);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="Authorization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Authorization : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Authorization 对象。
        /// </summary>
        /// <param name="authorizationId">AuthorizationId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static Authorization CreateAuthorization(global::System.Int32 authorizationId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            Authorization authorization = new Authorization();
            authorization.AuthorizationId = authorizationId;
            authorization.Created = created;
            authorization.Updated = updated;
            authorization.ActiveFlag = activeFlag;
            return authorization;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AuthorizationId
        {
            get
            {
                return _AuthorizationId;
            }
            set
            {
                if (_AuthorizationId != value)
                {
                    OnAuthorizationIdChanging(value);
                    ReportPropertyChanging("AuthorizationId");
                    _AuthorizationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AuthorizationId");
                    OnAuthorizationIdChanged();
                }
            }
        }
        private global::System.Int32 _AuthorizationId;
        partial void OnAuthorizationIdChanging(global::System.Int32 value);
        partial void OnAuthorizationIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TheaterId
        {
            get
            {
                return _TheaterId;
            }
            set
            {
                OnTheaterIdChanging(value);
                ReportPropertyChanging("TheaterId");
                _TheaterId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TheaterId");
                OnTheaterIdChanged();
            }
        }
        private global::System.String _TheaterId;
        partial void OnTheaterIdChanging(global::System.String value);
        partial void OnTheaterIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpireDate
        {
            get
            {
                return _ExpireDate;
            }
            set
            {
                OnExpireDateChanging(value);
                ReportPropertyChanging("ExpireDate");
                _ExpireDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpireDate");
                OnExpireDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpireDate;
        partial void OnExpireDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpireDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] FeatureFile
        {
            get
            {
                return StructuralObject.GetValidValue(_FeatureFile);
            }
            set
            {
                OnFeatureFileChanging(value);
                ReportPropertyChanging("FeatureFile");
                _FeatureFile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FeatureFile");
                OnFeatureFileChanged();
            }
        }
        private global::System.Byte[] _FeatureFile;
        partial void OnFeatureFileChanging(global::System.Byte[] value);
        partial void OnFeatureFileChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Authorization2Theater", "Theater")]
        public Theater Theater
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theater>("FlamingoModel.FK_Authorization2Theater", "Theater").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theater>("FlamingoModel.FK_Authorization2Theater", "Theater").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Theater> TheaterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theater>("FlamingoModel.FK_Authorization2Theater", "Theater");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Theater>("FlamingoModel.FK_Authorization2Theater", "Theater", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="BackupLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BackupLog : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 BackupLog 对象。
        /// </summary>
        /// <param name="backupLogId">BackupLogId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static BackupLog CreateBackupLog(global::System.Int32 backupLogId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            BackupLog backupLog = new BackupLog();
            backupLog.BackupLogId = backupLogId;
            backupLog.Created = created;
            backupLog.Updated = updated;
            backupLog.ActiveFlag = activeFlag;
            return backupLog;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BackupLogId
        {
            get
            {
                return _BackupLogId;
            }
            set
            {
                if (_BackupLogId != value)
                {
                    OnBackupLogIdChanging(value);
                    ReportPropertyChanging("BackupLogId");
                    _BackupLogId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BackupLogId");
                    OnBackupLogIdChanged();
                }
            }
        }
        private global::System.Int32 _BackupLogId;
        partial void OnBackupLogIdChanging(global::System.Int32 value);
        partial void OnBackupLogIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BackupSettingId
        {
            get
            {
                return _BackupSettingId;
            }
            set
            {
                OnBackupSettingIdChanging(value);
                ReportPropertyChanging("BackupSettingId");
                _BackupSettingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BackupSettingId");
                OnBackupSettingIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BackupSettingId;
        partial void OnBackupSettingIdChanging(Nullable<global::System.Int32> value);
        partial void OnBackupSettingIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BackupDate
        {
            get
            {
                return _BackupDate;
            }
            set
            {
                OnBackupDateChanging(value);
                ReportPropertyChanging("BackupDate");
                _BackupDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BackupDate");
                OnBackupDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BackupDate;
        partial void OnBackupDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBackupDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Result
        {
            get
            {
                return _Result;
            }
            set
            {
                OnResultChanging(value);
                ReportPropertyChanging("Result");
                _Result = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Result");
                OnResultChanged();
            }
        }
        private Nullable<global::System.Boolean> _Result;
        partial void OnResultChanging(Nullable<global::System.Boolean> value);
        partial void OnResultChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_BackupLog2BackupSetting", "BackupSetting")]
        public BackupSetting BackupSetting
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BackupSetting>("FlamingoModel.FK_BackupLog2BackupSetting", "BackupSetting").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BackupSetting>("FlamingoModel.FK_BackupLog2BackupSetting", "BackupSetting").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BackupSetting> BackupSettingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BackupSetting>("FlamingoModel.FK_BackupLog2BackupSetting", "BackupSetting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BackupSetting>("FlamingoModel.FK_BackupLog2BackupSetting", "BackupSetting", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="BackupSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BackupSetting : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 BackupSetting 对象。
        /// </summary>
        /// <param name="backupSettingId">BackupSettingId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static BackupSetting CreateBackupSetting(global::System.Int32 backupSettingId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            BackupSetting backupSetting = new BackupSetting();
            backupSetting.BackupSettingId = backupSettingId;
            backupSetting.Created = created;
            backupSetting.Updated = updated;
            backupSetting.ActiveFlag = activeFlag;
            return backupSetting;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BackupSettingId
        {
            get
            {
                return _BackupSettingId;
            }
            set
            {
                if (_BackupSettingId != value)
                {
                    OnBackupSettingIdChanging(value);
                    ReportPropertyChanging("BackupSettingId");
                    _BackupSettingId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BackupSettingId");
                    OnBackupSettingIdChanged();
                }
            }
        }
        private global::System.Int32 _BackupSettingId;
        partial void OnBackupSettingIdChanging(global::System.Int32 value);
        partial void OnBackupSettingIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BackupMethod
        {
            get
            {
                return _BackupMethod;
            }
            set
            {
                OnBackupMethodChanging(value);
                ReportPropertyChanging("BackupMethod");
                _BackupMethod = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BackupMethod");
                OnBackupMethodChanged();
            }
        }
        private global::System.String _BackupMethod;
        partial void OnBackupMethodChanging(global::System.String value);
        partial void OnBackupMethodChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> BackupTime
        {
            get
            {
                return _BackupTime;
            }
            set
            {
                OnBackupTimeChanging(value);
                ReportPropertyChanging("BackupTime");
                _BackupTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BackupTime");
                OnBackupTimeChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _BackupTime;
        partial void OnBackupTimeChanging(Nullable<global::System.TimeSpan> value);
        partial void OnBackupTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RepeatDay
        {
            get
            {
                return _RepeatDay;
            }
            set
            {
                OnRepeatDayChanging(value);
                ReportPropertyChanging("RepeatDay");
                _RepeatDay = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RepeatDay");
                OnRepeatDayChanged();
            }
        }
        private global::System.String _RepeatDay;
        partial void OnRepeatDayChanging(global::System.String value);
        partial void OnRepeatDayChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ServerAddress
        {
            get
            {
                return _ServerAddress;
            }
            set
            {
                OnServerAddressChanging(value);
                ReportPropertyChanging("ServerAddress");
                _ServerAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ServerAddress");
                OnServerAddressChanged();
            }
        }
        private global::System.String _ServerAddress;
        partial void OnServerAddressChanging(global::System.String value);
        partial void OnServerAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DatabasePath
        {
            get
            {
                return _DatabasePath;
            }
            set
            {
                OnDatabasePathChanging(value);
                ReportPropertyChanging("DatabasePath");
                _DatabasePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DatabasePath");
                OnDatabasePathChanged();
            }
        }
        private global::System.String _DatabasePath;
        partial void OnDatabasePathChanging(global::System.String value);
        partial void OnDatabasePathChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BackupPath
        {
            get
            {
                return _BackupPath;
            }
            set
            {
                OnBackupPathChanging(value);
                ReportPropertyChanging("BackupPath");
                _BackupPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BackupPath");
                OnBackupPathChanged();
            }
        }
        private global::System.String _BackupPath;
        partial void OnBackupPathChanging(global::System.String value);
        partial void OnBackupPathChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_BackupLog2BackupSetting", "BackupLog")]
        public EntityCollection<BackupLog> BackupLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BackupLog>("FlamingoModel.FK_BackupLog2BackupSetting", "BackupLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BackupLog>("FlamingoModel.FK_BackupLog2BackupSetting", "BackupLog", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="Block")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Block : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Block 对象。
        /// </summary>
        /// <param name="blockId">BlockId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static Block CreateBlock(global::System.String blockId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            Block block = new Block();
            block.BlockId = blockId;
            block.Created = created;
            block.Updated = updated;
            block.ActiveFlag = activeFlag;
            return block;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BlockId
        {
            get
            {
                return _BlockId;
            }
            set
            {
                if (_BlockId != value)
                {
                    OnBlockIdChanging(value);
                    ReportPropertyChanging("BlockId");
                    _BlockId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BlockId");
                    OnBlockIdChanged();
                }
            }
        }
        private global::System.String _BlockId;
        partial void OnBlockIdChanging(global::System.String value);
        partial void OnBlockIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SeatingChartId
        {
            get
            {
                return _SeatingChartId;
            }
            set
            {
                OnSeatingChartIdChanging(value);
                ReportPropertyChanging("SeatingChartId");
                _SeatingChartId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SeatingChartId");
                OnSeatingChartIdChanged();
            }
        }
        private global::System.String _SeatingChartId;
        partial void OnSeatingChartIdChanging(global::System.String value);
        partial void OnSeatingChartIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BlockName
        {
            get
            {
                return _BlockName;
            }
            set
            {
                OnBlockNameChanging(value);
                ReportPropertyChanging("BlockName");
                _BlockName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BlockName");
                OnBlockNameChanged();
            }
        }
        private global::System.String _BlockName;
        partial void OnBlockNameChanging(global::System.String value);
        partial void OnBlockNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BgColour
        {
            get
            {
                return _BgColour;
            }
            set
            {
                OnBgColourChanging(value);
                ReportPropertyChanging("BgColour");
                _BgColour = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BgColour");
                OnBgColourChanged();
            }
        }
        private global::System.String _BgColour;
        partial void OnBgColourChanging(global::System.String value);
        partial void OnBgColourChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Seats
        {
            get
            {
                return _Seats;
            }
            set
            {
                OnSeatsChanging(value);
                ReportPropertyChanging("Seats");
                _Seats = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Seats");
                OnSeatsChanged();
            }
        }
        private Nullable<global::System.Int32> _Seats;
        partial void OnSeatsChanging(Nullable<global::System.Int32> value);
        partial void OnSeatsChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HasBlockPrice
        {
            get
            {
                return _HasBlockPrice;
            }
            set
            {
                OnHasBlockPriceChanging(value);
                ReportPropertyChanging("HasBlockPrice");
                _HasBlockPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasBlockPrice");
                OnHasBlockPriceChanged();
            }
        }
        private Nullable<global::System.Boolean> _HasBlockPrice;
        partial void OnHasBlockPriceChanging(Nullable<global::System.Boolean> value);
        partial void OnHasBlockPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Block2SeatingChart", "SeatingChart")]
        public SeatingChart SeatingChart
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SeatingChart>("FlamingoModel.FK_Block2SeatingChart", "SeatingChart").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SeatingChart>("FlamingoModel.FK_Block2SeatingChart", "SeatingChart").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SeatingChart> SeatingChartReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SeatingChart>("FlamingoModel.FK_Block2SeatingChart", "SeatingChart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SeatingChart>("FlamingoModel.FK_Block2SeatingChart", "SeatingChart", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_BlockPrice2Block", "BlockPrice")]
        public EntityCollection<BlockPrice> BlockPrice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BlockPrice>("FlamingoModel.FK_BlockPrice2Block", "BlockPrice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BlockPrice>("FlamingoModel.FK_BlockPrice2Block", "BlockPrice", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Seat2Block", "Seat")]
        public EntityCollection<Seat> Seat
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Seat>("FlamingoModel.FK_Seat2Block", "Seat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Seat>("FlamingoModel.FK_Seat2Block", "Seat", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="BlockPrice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BlockPrice : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 BlockPrice 对象。
        /// </summary>
        /// <param name="blockPriceId">BlockPriceId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static BlockPrice CreateBlockPrice(global::System.String blockPriceId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            BlockPrice blockPrice = new BlockPrice();
            blockPrice.BlockPriceId = blockPriceId;
            blockPrice.Created = created;
            blockPrice.Updated = updated;
            blockPrice.ActiveFlag = activeFlag;
            return blockPrice;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BlockPriceId
        {
            get
            {
                return _BlockPriceId;
            }
            set
            {
                if (_BlockPriceId != value)
                {
                    OnBlockPriceIdChanging(value);
                    ReportPropertyChanging("BlockPriceId");
                    _BlockPriceId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BlockPriceId");
                    OnBlockPriceIdChanged();
                }
            }
        }
        private global::System.String _BlockPriceId;
        partial void OnBlockPriceIdChanging(global::System.String value);
        partial void OnBlockPriceIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BlockId
        {
            get
            {
                return _BlockId;
            }
            set
            {
                OnBlockIdChanging(value);
                ReportPropertyChanging("BlockId");
                _BlockId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BlockId");
                OnBlockIdChanged();
            }
        }
        private global::System.String _BlockId;
        partial void OnBlockIdChanging(global::System.String value);
        partial void OnBlockIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShowPlanId
        {
            get
            {
                return _ShowPlanId;
            }
            set
            {
                OnShowPlanIdChanging(value);
                ReportPropertyChanging("ShowPlanId");
                _ShowPlanId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShowPlanId");
                OnShowPlanIdChanged();
            }
        }
        private global::System.String _ShowPlanId;
        partial void OnShowPlanIdChanging(global::System.String value);
        partial void OnShowPlanIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SinglePrice
        {
            get
            {
                return _SinglePrice;
            }
            set
            {
                OnSinglePriceChanging(value);
                ReportPropertyChanging("SinglePrice");
                _SinglePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SinglePrice");
                OnSinglePriceChanged();
            }
        }
        private Nullable<global::System.Single> _SinglePrice;
        partial void OnSinglePriceChanging(Nullable<global::System.Single> value);
        partial void OnSinglePriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> DoublePrice
        {
            get
            {
                return _DoublePrice;
            }
            set
            {
                OnDoublePriceChanging(value);
                ReportPropertyChanging("DoublePrice");
                _DoublePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoublePrice");
                OnDoublePriceChanged();
            }
        }
        private Nullable<global::System.Single> _DoublePrice;
        partial void OnDoublePriceChanging(Nullable<global::System.Single> value);
        partial void OnDoublePriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> BoxPrice
        {
            get
            {
                return _BoxPrice;
            }
            set
            {
                OnBoxPriceChanging(value);
                ReportPropertyChanging("BoxPrice");
                _BoxPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoxPrice");
                OnBoxPriceChanged();
            }
        }
        private Nullable<global::System.Single> _BoxPrice;
        partial void OnBoxPriceChanging(Nullable<global::System.Single> value);
        partial void OnBoxPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> StudentPrice
        {
            get
            {
                return _StudentPrice;
            }
            set
            {
                OnStudentPriceChanging(value);
                ReportPropertyChanging("StudentPrice");
                _StudentPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudentPrice");
                OnStudentPriceChanged();
            }
        }
        private Nullable<global::System.Single> _StudentPrice;
        partial void OnStudentPriceChanging(Nullable<global::System.Single> value);
        partial void OnStudentPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> GroupPrice
        {
            get
            {
                return _GroupPrice;
            }
            set
            {
                OnGroupPriceChanging(value);
                ReportPropertyChanging("GroupPrice");
                _GroupPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupPrice");
                OnGroupPriceChanged();
            }
        }
        private Nullable<global::System.Single> _GroupPrice;
        partial void OnGroupPriceChanging(Nullable<global::System.Single> value);
        partial void OnGroupPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> MemberPrice
        {
            get
            {
                return _MemberPrice;
            }
            set
            {
                OnMemberPriceChanging(value);
                ReportPropertyChanging("MemberPrice");
                _MemberPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberPrice");
                OnMemberPriceChanged();
            }
        }
        private Nullable<global::System.Single> _MemberPrice;
        partial void OnMemberPriceChanging(Nullable<global::System.Single> value);
        partial void OnMemberPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> DiscountPrice
        {
            get
            {
                return _DiscountPrice;
            }
            set
            {
                OnDiscountPriceChanging(value);
                ReportPropertyChanging("DiscountPrice");
                _DiscountPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscountPrice");
                OnDiscountPriceChanged();
            }
        }
        private Nullable<global::System.Single> _DiscountPrice;
        partial void OnDiscountPriceChanging(Nullable<global::System.Single> value);
        partial void OnDiscountPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_BlockPrice2Block", "Block")]
        public Block Block
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Block>("FlamingoModel.FK_BlockPrice2Block", "Block").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Block>("FlamingoModel.FK_BlockPrice2Block", "Block").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Block> BlockReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Block>("FlamingoModel.FK_BlockPrice2Block", "Block");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Block>("FlamingoModel.FK_BlockPrice2Block", "Block", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_BlockPrice2ShowPlan", "ShowPlan")]
        public ShowPlan ShowPlan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShowPlan>("FlamingoModel.FK_BlockPrice2ShowPlan", "ShowPlan").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShowPlan>("FlamingoModel.FK_BlockPrice2ShowPlan", "ShowPlan").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ShowPlan> ShowPlanReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShowPlan>("FlamingoModel.FK_BlockPrice2ShowPlan", "ShowPlan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ShowPlan>("FlamingoModel.FK_BlockPrice2ShowPlan", "ShowPlan", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="CommonItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CommonItem : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 CommonItem 对象。
        /// </summary>
        /// <param name="commonItemId">CommonItemId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static CommonItem CreateCommonItem(global::System.Int32 commonItemId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            CommonItem commonItem = new CommonItem();
            commonItem.CommonItemId = commonItemId;
            commonItem.Created = created;
            commonItem.Updated = updated;
            commonItem.ActiveFlag = activeFlag;
            return commonItem;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommonItemId
        {
            get
            {
                return _CommonItemId;
            }
            set
            {
                if (_CommonItemId != value)
                {
                    OnCommonItemIdChanging(value);
                    ReportPropertyChanging("CommonItemId");
                    _CommonItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CommonItemId");
                    OnCommonItemIdChanged();
                }
            }
        }
        private global::System.Int32 _CommonItemId;
        partial void OnCommonItemIdChanging(global::System.Int32 value);
        partial void OnCommonItemIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CommonItemName
        {
            get
            {
                return _CommonItemName;
            }
            set
            {
                OnCommonItemNameChanging(value);
                ReportPropertyChanging("CommonItemName");
                _CommonItemName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CommonItemName");
                OnCommonItemNameChanged();
            }
        }
        private global::System.String _CommonItemName;
        partial void OnCommonItemNameChanging(global::System.String value);
        partial void OnCommonItemNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TemplateType
        {
            get
            {
                return _TemplateType;
            }
            set
            {
                OnTemplateTypeChanging(value);
                ReportPropertyChanging("TemplateType");
                _TemplateType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TemplateType");
                OnTemplateTypeChanged();
            }
        }
        private global::System.String _TemplateType;
        partial void OnTemplateTypeChanging(global::System.String value);
        partial void OnTemplateTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DataItem
        {
            get
            {
                return _DataItem;
            }
            set
            {
                OnDataItemChanging(value);
                ReportPropertyChanging("DataItem");
                _DataItem = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataItem");
                OnDataItemChanged();
            }
        }
        private global::System.String _DataItem;
        partial void OnDataItemChanging(global::System.String value);
        partial void OnDataItemChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_TemplateItem2CommonItem_FK", "TemplateItem")]
        public EntityCollection<TemplateItem> TemplateItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TemplateItem>("FlamingoModel.FK_TemplateItem2CommonItem_FK", "TemplateItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TemplateItem>("FlamingoModel.FK_TemplateItem2CommonItem_FK", "TemplateItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customer : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Customer 对象。
        /// </summary>
        /// <param name="customerId">CustomerId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static Customer CreateCustomer(global::System.Int32 customerId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            Customer customer = new Customer();
            customer.CustomerId = customerId;
            customer.Created = created;
            customer.Updated = updated;
            customer.ActiveFlag = activeFlag;
            return customer;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerId
        {
            get
            {
                return _CustomerId;
            }
            set
            {
                if (_CustomerId != value)
                {
                    OnCustomerIdChanging(value);
                    ReportPropertyChanging("CustomerId");
                    _CustomerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CustomerId");
                    OnCustomerIdChanged();
                }
            }
        }
        private global::System.Int32 _CustomerId;
        partial void OnCustomerIdChanging(global::System.Int32 value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CustomerTypeId
        {
            get
            {
                return _CustomerTypeId;
            }
            set
            {
                OnCustomerTypeIdChanging(value);
                ReportPropertyChanging("CustomerTypeId");
                _CustomerTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerTypeId");
                OnCustomerTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CustomerTypeId;
        partial void OnCustomerTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnCustomerTypeIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerName
        {
            get
            {
                return _CustomerName;
            }
            set
            {
                OnCustomerNameChanging(value);
                ReportPropertyChanging("CustomerName");
                _CustomerName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerName");
                OnCustomerNameChanged();
            }
        }
        private global::System.String _CustomerName;
        partial void OnCustomerNameChanging(global::System.String value);
        partial void OnCustomerNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankBranch
        {
            get
            {
                return _BankBranch;
            }
            set
            {
                OnBankBranchChanging(value);
                ReportPropertyChanging("BankBranch");
                _BankBranch = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BankBranch");
                OnBankBranchChanged();
            }
        }
        private global::System.String _BankBranch;
        partial void OnBankBranchChanging(global::System.String value);
        partial void OnBankBranchChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankAccount
        {
            get
            {
                return _BankAccount;
            }
            set
            {
                OnBankAccountChanging(value);
                ReportPropertyChanging("BankAccount");
                _BankAccount = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BankAccount");
                OnBankAccountChanged();
            }
        }
        private global::System.String _BankAccount;
        partial void OnBankAccountChanging(global::System.String value);
        partial void OnBankAccountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Telephone
        {
            get
            {
                return _Telephone;
            }
            set
            {
                OnTelephoneChanging(value);
                ReportPropertyChanging("Telephone");
                _Telephone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Telephone");
                OnTelephoneChanged();
            }
        }
        private global::System.String _Telephone;
        partial void OnTelephoneChanging(global::System.String value);
        partial void OnTelephoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Contact
        {
            get
            {
                return _Contact;
            }
            set
            {
                OnContactChanging(value);
                ReportPropertyChanging("Contact");
                _Contact = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Contact");
                OnContactChanged();
            }
        }
        private global::System.String _Contact;
        partial void OnContactChanging(global::System.String value);
        partial void OnContactChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Customer2CustomerType", "CustomerType")]
        public CustomerType CustomerType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerType>("FlamingoModel.FK_Customer2CustomerType", "CustomerType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerType>("FlamingoModel.FK_Customer2CustomerType", "CustomerType").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomerType> CustomerTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomerType>("FlamingoModel.FK_Customer2CustomerType", "CustomerType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CustomerType>("FlamingoModel.FK_Customer2CustomerType", "CustomerType", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Debt2Customer", "Debt")]
        public EntityCollection<Debt> Debt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Debt>("FlamingoModel.FK_Debt2Customer", "Debt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Debt>("FlamingoModel.FK_Debt2Customer", "Debt", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_VoucherBatch2Customer", "VoucherBatch")]
        public EntityCollection<VoucherBatch> VoucherBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VoucherBatch>("FlamingoModel.FK_VoucherBatch2Customer", "VoucherBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VoucherBatch>("FlamingoModel.FK_VoucherBatch2Customer", "VoucherBatch", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="CustomerType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomerType : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 CustomerType 对象。
        /// </summary>
        /// <param name="customerTypeId">CustomerTypeId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static CustomerType CreateCustomerType(global::System.Int32 customerTypeId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            CustomerType customerType = new CustomerType();
            customerType.CustomerTypeId = customerTypeId;
            customerType.Created = created;
            customerType.Updated = updated;
            customerType.ActiveFlag = activeFlag;
            return customerType;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerTypeId
        {
            get
            {
                return _CustomerTypeId;
            }
            set
            {
                if (_CustomerTypeId != value)
                {
                    OnCustomerTypeIdChanging(value);
                    ReportPropertyChanging("CustomerTypeId");
                    _CustomerTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CustomerTypeId");
                    OnCustomerTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _CustomerTypeId;
        partial void OnCustomerTypeIdChanging(global::System.Int32 value);
        partial void OnCustomerTypeIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerTypeName
        {
            get
            {
                return _CustomerTypeName;
            }
            set
            {
                OnCustomerTypeNameChanging(value);
                ReportPropertyChanging("CustomerTypeName");
                _CustomerTypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerTypeName");
                OnCustomerTypeNameChanged();
            }
        }
        private global::System.String _CustomerTypeName;
        partial void OnCustomerTypeNameChanging(global::System.String value);
        partial void OnCustomerTypeNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Customer2CustomerType", "Customer")]
        public EntityCollection<Customer> Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Customer>("FlamingoModel.FK_Customer2CustomerType", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Customer>("FlamingoModel.FK_Customer2CustomerType", "Customer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="DailyPlan")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DailyPlan : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 DailyPlan 对象。
        /// </summary>
        /// <param name="dailyPlanId">DailyPlanId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static DailyPlan CreateDailyPlan(global::System.String dailyPlanId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            DailyPlan dailyPlan = new DailyPlan();
            dailyPlan.DailyPlanId = dailyPlanId;
            dailyPlan.Created = created;
            dailyPlan.Updated = updated;
            dailyPlan.ActiveFlag = activeFlag;
            return dailyPlan;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DailyPlanId
        {
            get
            {
                return _DailyPlanId;
            }
            set
            {
                if (_DailyPlanId != value)
                {
                    OnDailyPlanIdChanging(value);
                    ReportPropertyChanging("DailyPlanId");
                    _DailyPlanId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DailyPlanId");
                    OnDailyPlanIdChanged();
                }
            }
        }
        private global::System.String _DailyPlanId;
        partial void OnDailyPlanIdChanging(global::System.String value);
        partial void OnDailyPlanIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TheaterId
        {
            get
            {
                return _TheaterId;
            }
            set
            {
                OnTheaterIdChanging(value);
                ReportPropertyChanging("TheaterId");
                _TheaterId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TheaterId");
                OnTheaterIdChanged();
            }
        }
        private global::System.String _TheaterId;
        partial void OnTheaterIdChanging(global::System.String value);
        partial void OnTheaterIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PlanDate
        {
            get
            {
                return _PlanDate;
            }
            set
            {
                OnPlanDateChanging(value);
                ReportPropertyChanging("PlanDate");
                _PlanDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlanDate");
                OnPlanDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PlanDate;
        partial void OnPlanDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPlanDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _StartTime;
        partial void OnStartTimeChanging(Nullable<global::System.TimeSpan> value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.TimeSpan> value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Timespan
        {
            get
            {
                return _Timespan;
            }
            set
            {
                OnTimespanChanging(value);
                ReportPropertyChanging("Timespan");
                _Timespan = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Timespan");
                OnTimespanChanged();
            }
        }
        private Nullable<global::System.Int32> _Timespan;
        partial void OnTimespanChanging(Nullable<global::System.Int32> value);
        partial void OnTimespanChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Halls
        {
            get
            {
                return _Halls;
            }
            set
            {
                OnHallsChanging(value);
                ReportPropertyChanging("Halls");
                _Halls = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Halls");
                OnHallsChanged();
            }
        }
        private Nullable<global::System.Int32> _Halls;
        partial void OnHallsChanging(Nullable<global::System.Int32> value);
        partial void OnHallsChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsApproved;
        partial void OnIsApprovedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSalable
        {
            get
            {
                return _IsSalable;
            }
            set
            {
                OnIsSalableChanging(value);
                ReportPropertyChanging("IsSalable");
                _IsSalable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSalable");
                OnIsSalableChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSalable;
        partial void OnIsSalableChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSalableChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsLocked
        {
            get
            {
                return _IsLocked;
            }
            set
            {
                OnIsLockedChanging(value);
                ReportPropertyChanging("IsLocked");
                _IsLocked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLocked");
                OnIsLockedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsLocked;
        partial void OnIsLockedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsLockedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_DailyPlan2Theater", "Theater")]
        public Theater Theater
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theater>("FlamingoModel.FK_DailyPlan2Theater", "Theater").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theater>("FlamingoModel.FK_DailyPlan2Theater", "Theater").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Theater> TheaterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theater>("FlamingoModel.FK_DailyPlan2Theater", "Theater");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Theater>("FlamingoModel.FK_DailyPlan2Theater", "Theater", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_ShowPlan2DailyPlan", "ShowPlan")]
        public EntityCollection<ShowPlan> ShowPlan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ShowPlan>("FlamingoModel.FK_ShowPlan2DailyPlan", "ShowPlan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ShowPlan>("FlamingoModel.FK_ShowPlan2DailyPlan", "ShowPlan", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="Debt")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Debt : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Debt 对象。
        /// </summary>
        /// <param name="debtId">DebtId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static Debt CreateDebt(global::System.String debtId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            Debt debt = new Debt();
            debt.DebtId = debtId;
            debt.Created = created;
            debt.Updated = updated;
            debt.ActiveFlag = activeFlag;
            return debt;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DebtId
        {
            get
            {
                return _DebtId;
            }
            set
            {
                if (_DebtId != value)
                {
                    OnDebtIdChanging(value);
                    ReportPropertyChanging("DebtId");
                    _DebtId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DebtId");
                    OnDebtIdChanged();
                }
            }
        }
        private global::System.String _DebtId;
        partial void OnDebtIdChanging(global::System.String value);
        partial void OnDebtIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CustomerId
        {
            get
            {
                return _CustomerId;
            }
            set
            {
                OnCustomerIdChanging(value);
                ReportPropertyChanging("CustomerId");
                _CustomerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerId");
                OnCustomerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CustomerId;
        partial void OnCustomerIdChanging(Nullable<global::System.Int32> value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Buyer
        {
            get
            {
                return _Buyer;
            }
            set
            {
                OnBuyerChanging(value);
                ReportPropertyChanging("Buyer");
                _Buyer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Buyer");
                OnBuyerChanged();
            }
        }
        private global::System.String _Buyer;
        partial void OnBuyerChanging(global::System.String value);
        partial void OnBuyerChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BoughtDate
        {
            get
            {
                return _BoughtDate;
            }
            set
            {
                OnBoughtDateChanging(value);
                ReportPropertyChanging("BoughtDate");
                _BoughtDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoughtDate");
                OnBoughtDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BoughtDate;
        partial void OnBoughtDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBoughtDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Tickets
        {
            get
            {
                return _Tickets;
            }
            set
            {
                OnTicketsChanging(value);
                ReportPropertyChanging("Tickets");
                _Tickets = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tickets");
                OnTicketsChanged();
            }
        }
        private Nullable<global::System.Int32> _Tickets;
        partial void OnTicketsChanging(Nullable<global::System.Int32> value);
        partial void OnTicketsChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Single> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Single> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankBranch
        {
            get
            {
                return _BankBranch;
            }
            set
            {
                OnBankBranchChanging(value);
                ReportPropertyChanging("BankBranch");
                _BankBranch = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BankBranch");
                OnBankBranchChanged();
            }
        }
        private global::System.String _BankBranch;
        partial void OnBankBranchChanging(global::System.String value);
        partial void OnBankBranchChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankAccount
        {
            get
            {
                return _BankAccount;
            }
            set
            {
                OnBankAccountChanging(value);
                ReportPropertyChanging("BankAccount");
                _BankAccount = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BankAccount");
                OnBankAccountChanged();
            }
        }
        private global::System.String _BankAccount;
        partial void OnBankAccountChanging(global::System.String value);
        partial void OnBankAccountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ChequeNumber
        {
            get
            {
                return _ChequeNumber;
            }
            set
            {
                OnChequeNumberChanging(value);
                ReportPropertyChanging("ChequeNumber");
                _ChequeNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ChequeNumber");
                OnChequeNumberChanged();
            }
        }
        private global::System.String _ChequeNumber;
        partial void OnChequeNumberChanging(global::System.String value);
        partial void OnChequeNumberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DebtStatus
        {
            get
            {
                return _DebtStatus;
            }
            set
            {
                OnDebtStatusChanging(value);
                ReportPropertyChanging("DebtStatus");
                _DebtStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DebtStatus");
                OnDebtStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _DebtStatus;
        partial void OnDebtStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnDebtStatusChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ClearDate
        {
            get
            {
                return _ClearDate;
            }
            set
            {
                OnClearDateChanging(value);
                ReportPropertyChanging("ClearDate");
                _ClearDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClearDate");
                OnClearDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ClearDate;
        partial void OnClearDateChanging(Nullable<global::System.DateTime> value);
        partial void OnClearDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Casher
        {
            get
            {
                return _Casher;
            }
            set
            {
                OnCasherChanging(value);
                ReportPropertyChanging("Casher");
                _Casher = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Casher");
                OnCasherChanged();
            }
        }
        private Nullable<global::System.Int32> _Casher;
        partial void OnCasherChanging(Nullable<global::System.Int32> value);
        partial void OnCasherChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Accountant
        {
            get
            {
                return _Accountant;
            }
            set
            {
                OnAccountantChanging(value);
                ReportPropertyChanging("Accountant");
                _Accountant = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Accountant");
                OnAccountantChanged();
            }
        }
        private Nullable<global::System.Int32> _Accountant;
        partial void OnAccountantChanging(Nullable<global::System.Int32> value);
        partial void OnAccountantChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Debt2Customer", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("FlamingoModel.FK_Debt2Customer", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("FlamingoModel.FK_Debt2Customer", "Customer").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("FlamingoModel.FK_Debt2Customer", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("FlamingoModel.FK_Debt2Customer", "Customer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="Discount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Discount : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Discount 对象。
        /// </summary>
        /// <param name="discountId">DiscountId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static Discount CreateDiscount(global::System.Int32 discountId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            Discount discount = new Discount();
            discount.DiscountId = discountId;
            discount.Created = created;
            discount.Updated = updated;
            discount.ActiveFlag = activeFlag;
            return discount;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DiscountId
        {
            get
            {
                return _DiscountId;
            }
            set
            {
                if (_DiscountId != value)
                {
                    OnDiscountIdChanging(value);
                    ReportPropertyChanging("DiscountId");
                    _DiscountId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DiscountId");
                    OnDiscountIdChanged();
                }
            }
        }
        private global::System.Int32 _DiscountId;
        partial void OnDiscountIdChanging(global::System.Int32 value);
        partial void OnDiscountIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> DiscountPrice
        {
            get
            {
                return _DiscountPrice;
            }
            set
            {
                OnDiscountPriceChanging(value);
                ReportPropertyChanging("DiscountPrice");
                _DiscountPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscountPrice");
                OnDiscountPriceChanged();
            }
        }
        private Nullable<global::System.Single> _DiscountPrice;
        partial void OnDiscountPriceChanging(Nullable<global::System.Single> value);
        partial void OnDiscountPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_D_T2D", "Discount_Type")]
        public EntityCollection<Discount_Type> Discount_Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Discount_Type>("FlamingoModel.FK_D_T2D", "Discount_Type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Discount_Type>("FlamingoModel.FK_D_T2D", "Discount_Type", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="Discount_Type")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Discount_Type : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Discount_Type 对象。
        /// </summary>
        /// <param name="discount_TypeId">Discount_TypeId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static Discount_Type CreateDiscount_Type(global::System.Int32 discount_TypeId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            Discount_Type discount_Type = new Discount_Type();
            discount_Type.Discount_TypeId = discount_TypeId;
            discount_Type.Created = created;
            discount_Type.Updated = updated;
            discount_Type.ActiveFlag = activeFlag;
            return discount_Type;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Discount_TypeId
        {
            get
            {
                return _Discount_TypeId;
            }
            set
            {
                if (_Discount_TypeId != value)
                {
                    OnDiscount_TypeIdChanging(value);
                    ReportPropertyChanging("Discount_TypeId");
                    _Discount_TypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Discount_TypeId");
                    OnDiscount_TypeIdChanged();
                }
            }
        }
        private global::System.Int32 _Discount_TypeId;
        partial void OnDiscount_TypeIdChanging(global::System.Int32 value);
        partial void OnDiscount_TypeIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DiscountTypeId
        {
            get
            {
                return _DiscountTypeId;
            }
            set
            {
                OnDiscountTypeIdChanging(value);
                ReportPropertyChanging("DiscountTypeId");
                _DiscountTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscountTypeId");
                OnDiscountTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DiscountTypeId;
        partial void OnDiscountTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnDiscountTypeIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DiscountId
        {
            get
            {
                return _DiscountId;
            }
            set
            {
                OnDiscountIdChanging(value);
                ReportPropertyChanging("DiscountId");
                _DiscountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscountId");
                OnDiscountIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DiscountId;
        partial void OnDiscountIdChanging(Nullable<global::System.Int32> value);
        partial void OnDiscountIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_D_T2D", "Discount")]
        public Discount Discount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discount>("FlamingoModel.FK_D_T2D", "Discount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discount>("FlamingoModel.FK_D_T2D", "Discount").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Discount> DiscountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discount>("FlamingoModel.FK_D_T2D", "Discount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Discount>("FlamingoModel.FK_D_T2D", "Discount", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_D_T2DT", "DiscountType")]
        public DiscountType DiscountType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DiscountType>("FlamingoModel.FK_D_T2DT", "DiscountType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DiscountType>("FlamingoModel.FK_D_T2DT", "DiscountType").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DiscountType> DiscountTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DiscountType>("FlamingoModel.FK_D_T2DT", "DiscountType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DiscountType>("FlamingoModel.FK_D_T2DT", "DiscountType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="DiscountType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DiscountType : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 DiscountType 对象。
        /// </summary>
        /// <param name="discountTypeId">DiscountTypeId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static DiscountType CreateDiscountType(global::System.Int32 discountTypeId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            DiscountType discountType = new DiscountType();
            discountType.DiscountTypeId = discountTypeId;
            discountType.Created = created;
            discountType.Updated = updated;
            discountType.ActiveFlag = activeFlag;
            return discountType;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DiscountTypeId
        {
            get
            {
                return _DiscountTypeId;
            }
            set
            {
                if (_DiscountTypeId != value)
                {
                    OnDiscountTypeIdChanging(value);
                    ReportPropertyChanging("DiscountTypeId");
                    _DiscountTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DiscountTypeId");
                    OnDiscountTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _DiscountTypeId;
        partial void OnDiscountTypeIdChanging(global::System.Int32 value);
        partial void OnDiscountTypeIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DiscountTypeName
        {
            get
            {
                return _DiscountTypeName;
            }
            set
            {
                OnDiscountTypeNameChanging(value);
                ReportPropertyChanging("DiscountTypeName");
                _DiscountTypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DiscountTypeName");
                OnDiscountTypeNameChanged();
            }
        }
        private global::System.String _DiscountTypeName;
        partial void OnDiscountTypeNameChanging(global::System.String value);
        partial void OnDiscountTypeNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_D_T2DT", "Discount_Type")]
        public EntityCollection<Discount_Type> Discount_Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Discount_Type>("FlamingoModel.FK_D_T2DT", "Discount_Type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Discount_Type>("FlamingoModel.FK_D_T2DT", "Discount_Type", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_ShowPlan2DiscountType", "ShowPlan")]
        public EntityCollection<ShowPlan> ShowPlan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ShowPlan>("FlamingoModel.FK_ShowPlan2DiscountType", "ShowPlan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ShowPlan>("FlamingoModel.FK_ShowPlan2DiscountType", "ShowPlan", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="DownloadSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DownloadSetting : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 DownloadSetting 对象。
        /// </summary>
        /// <param name="downloadId">DownloadId 属性的初始值。</param>
        /// <param name="theaterId">TheaterId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static DownloadSetting CreateDownloadSetting(global::System.Int32 downloadId, global::System.String theaterId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            DownloadSetting downloadSetting = new DownloadSetting();
            downloadSetting.DownloadId = downloadId;
            downloadSetting.TheaterId = theaterId;
            downloadSetting.Created = created;
            downloadSetting.Updated = updated;
            downloadSetting.ActiveFlag = activeFlag;
            return downloadSetting;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DownloadId
        {
            get
            {
                return _DownloadId;
            }
            set
            {
                if (_DownloadId != value)
                {
                    OnDownloadIdChanging(value);
                    ReportPropertyChanging("DownloadId");
                    _DownloadId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DownloadId");
                    OnDownloadIdChanged();
                }
            }
        }
        private global::System.Int32 _DownloadId;
        partial void OnDownloadIdChanging(global::System.Int32 value);
        partial void OnDownloadIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TheaterId
        {
            get
            {
                return _TheaterId;
            }
            set
            {
                OnTheaterIdChanging(value);
                ReportPropertyChanging("TheaterId");
                _TheaterId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TheaterId");
                OnTheaterIdChanged();
            }
        }
        private global::System.String _TheaterId;
        partial void OnTheaterIdChanging(global::System.String value);
        partial void OnTheaterIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourceName
        {
            get
            {
                return _SourceName;
            }
            set
            {
                OnSourceNameChanging(value);
                ReportPropertyChanging("SourceName");
                _SourceName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SourceName");
                OnSourceNameChanged();
            }
        }
        private global::System.String _SourceName;
        partial void OnSourceNameChanging(global::System.String value);
        partial void OnSourceNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DownloadMethod
        {
            get
            {
                return _DownloadMethod;
            }
            set
            {
                OnDownloadMethodChanging(value);
                ReportPropertyChanging("DownloadMethod");
                _DownloadMethod = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DownloadMethod");
                OnDownloadMethodChanged();
            }
        }
        private global::System.String _DownloadMethod;
        partial void OnDownloadMethodChanging(global::System.String value);
        partial void OnDownloadMethodChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DownloadAddr
        {
            get
            {
                return _DownloadAddr;
            }
            set
            {
                OnDownloadAddrChanging(value);
                ReportPropertyChanging("DownloadAddr");
                _DownloadAddr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DownloadAddr");
                OnDownloadAddrChanged();
            }
        }
        private global::System.String _DownloadAddr;
        partial void OnDownloadAddrChanging(global::System.String value);
        partial void OnDownloadAddrChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Port
        {
            get
            {
                return _Port;
            }
            set
            {
                OnPortChanging(value);
                ReportPropertyChanging("Port");
                _Port = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Port");
                OnPortChanged();
            }
        }
        private Nullable<global::System.Int32> _Port;
        partial void OnPortChanging(Nullable<global::System.Int32> value);
        partial void OnPortChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsAnonymAllowed
        {
            get
            {
                return _IsAnonymAllowed;
            }
            set
            {
                OnIsAnonymAllowedChanging(value);
                ReportPropertyChanging("IsAnonymAllowed");
                _IsAnonymAllowed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAnonymAllowed");
                OnIsAnonymAllowedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsAnonymAllowed;
        partial void OnIsAnonymAllowedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsAnonymAllowedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsProxy
        {
            get
            {
                return _IsProxy;
            }
            set
            {
                OnIsProxyChanging(value);
                ReportPropertyChanging("IsProxy");
                _IsProxy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsProxy");
                OnIsProxyChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsProxy;
        partial void OnIsProxyChanging(Nullable<global::System.Boolean> value);
        partial void OnIsProxyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProxyServer
        {
            get
            {
                return _ProxyServer;
            }
            set
            {
                OnProxyServerChanging(value);
                ReportPropertyChanging("ProxyServer");
                _ProxyServer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProxyServer");
                OnProxyServerChanged();
            }
        }
        private global::System.String _ProxyServer;
        partial void OnProxyServerChanging(global::System.String value);
        partial void OnProxyServerChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProxyPort
        {
            get
            {
                return _ProxyPort;
            }
            set
            {
                OnProxyPortChanging(value);
                ReportPropertyChanging("ProxyPort");
                _ProxyPort = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProxyPort");
                OnProxyPortChanged();
            }
        }
        private Nullable<global::System.Int32> _ProxyPort;
        partial void OnProxyPortChanging(Nullable<global::System.Int32> value);
        partial void OnProxyPortChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_DownloadSetting2Theater", "Theater")]
        public Theater Theater
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theater>("FlamingoModel.FK_DownloadSetting2Theater", "Theater").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theater>("FlamingoModel.FK_DownloadSetting2Theater", "Theater").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Theater> TheaterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theater>("FlamingoModel.FK_DownloadSetting2Theater", "Theater");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Theater>("FlamingoModel.FK_DownloadSetting2Theater", "Theater", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="FareSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FareSetting : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 FareSetting 对象。
        /// </summary>
        /// <param name="fareSettingId">FareSettingId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static FareSetting CreateFareSetting(global::System.Int32 fareSettingId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            FareSetting fareSetting = new FareSetting();
            fareSetting.FareSettingId = fareSettingId;
            fareSetting.Created = created;
            fareSetting.Updated = updated;
            fareSetting.ActiveFlag = activeFlag;
            return fareSetting;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FareSettingId
        {
            get
            {
                return _FareSettingId;
            }
            set
            {
                if (_FareSettingId != value)
                {
                    OnFareSettingIdChanging(value);
                    ReportPropertyChanging("FareSettingId");
                    _FareSettingId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FareSettingId");
                    OnFareSettingIdChanged();
                }
            }
        }
        private global::System.Int32 _FareSettingId;
        partial void OnFareSettingIdChanging(global::System.Int32 value);
        partial void OnFareSettingIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FareSettingName
        {
            get
            {
                return _FareSettingName;
            }
            set
            {
                OnFareSettingNameChanging(value);
                ReportPropertyChanging("FareSettingName");
                _FareSettingName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FareSettingName");
                OnFareSettingNameChanged();
            }
        }
        private global::System.String _FareSettingName;
        partial void OnFareSettingNameChanging(global::System.String value);
        partial void OnFareSettingNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SinglePrice
        {
            get
            {
                return _SinglePrice;
            }
            set
            {
                OnSinglePriceChanging(value);
                ReportPropertyChanging("SinglePrice");
                _SinglePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SinglePrice");
                OnSinglePriceChanged();
            }
        }
        private Nullable<global::System.Single> _SinglePrice;
        partial void OnSinglePriceChanging(Nullable<global::System.Single> value);
        partial void OnSinglePriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> DoublePrice
        {
            get
            {
                return _DoublePrice;
            }
            set
            {
                OnDoublePriceChanging(value);
                ReportPropertyChanging("DoublePrice");
                _DoublePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoublePrice");
                OnDoublePriceChanged();
            }
        }
        private Nullable<global::System.Single> _DoublePrice;
        partial void OnDoublePriceChanging(Nullable<global::System.Single> value);
        partial void OnDoublePriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> BoxPrice
        {
            get
            {
                return _BoxPrice;
            }
            set
            {
                OnBoxPriceChanging(value);
                ReportPropertyChanging("BoxPrice");
                _BoxPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoxPrice");
                OnBoxPriceChanged();
            }
        }
        private Nullable<global::System.Single> _BoxPrice;
        partial void OnBoxPriceChanging(Nullable<global::System.Single> value);
        partial void OnBoxPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> StudentPrice
        {
            get
            {
                return _StudentPrice;
            }
            set
            {
                OnStudentPriceChanging(value);
                ReportPropertyChanging("StudentPrice");
                _StudentPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudentPrice");
                OnStudentPriceChanged();
            }
        }
        private Nullable<global::System.Single> _StudentPrice;
        partial void OnStudentPriceChanging(Nullable<global::System.Single> value);
        partial void OnStudentPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> GroupPrice
        {
            get
            {
                return _GroupPrice;
            }
            set
            {
                OnGroupPriceChanging(value);
                ReportPropertyChanging("GroupPrice");
                _GroupPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupPrice");
                OnGroupPriceChanged();
            }
        }
        private Nullable<global::System.Single> _GroupPrice;
        partial void OnGroupPriceChanging(Nullable<global::System.Single> value);
        partial void OnGroupPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> MemberPrice
        {
            get
            {
                return _MemberPrice;
            }
            set
            {
                OnMemberPriceChanging(value);
                ReportPropertyChanging("MemberPrice");
                _MemberPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberPrice");
                OnMemberPriceChanged();
            }
        }
        private Nullable<global::System.Single> _MemberPrice;
        partial void OnMemberPriceChanging(Nullable<global::System.Single> value);
        partial void OnMemberPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> DiscountPrice
        {
            get
            {
                return _DiscountPrice;
            }
            set
            {
                OnDiscountPriceChanging(value);
                ReportPropertyChanging("DiscountPrice");
                _DiscountPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscountPrice");
                OnDiscountPriceChanged();
            }
        }
        private Nullable<global::System.Single> _DiscountPrice;
        partial void OnDiscountPriceChanging(Nullable<global::System.Single> value);
        partial void OnDiscountPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_ShowPlan2FareSetting", "ShowPlan")]
        public EntityCollection<ShowPlan> ShowPlan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ShowPlan>("FlamingoModel.FK_ShowPlan2FareSetting", "ShowPlan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ShowPlan>("FlamingoModel.FK_ShowPlan2FareSetting", "ShowPlan", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="Film")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Film : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Film 对象。
        /// </summary>
        /// <param name="filmId">FilmId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static Film CreateFilm(global::System.String filmId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            Film film = new Film();
            film.FilmId = filmId;
            film.Created = created;
            film.Updated = updated;
            film.ActiveFlag = activeFlag;
            return film;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FilmId
        {
            get
            {
                return _FilmId;
            }
            set
            {
                if (_FilmId != value)
                {
                    OnFilmIdChanging(value);
                    ReportPropertyChanging("FilmId");
                    _FilmId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FilmId");
                    OnFilmIdChanged();
                }
            }
        }
        private global::System.String _FilmId;
        partial void OnFilmIdChanging(global::System.String value);
        partial void OnFilmIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FilmAreaId
        {
            get
            {
                return _FilmAreaId;
            }
            set
            {
                OnFilmAreaIdChanging(value);
                ReportPropertyChanging("FilmAreaId");
                _FilmAreaId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FilmAreaId");
                OnFilmAreaIdChanged();
            }
        }
        private global::System.String _FilmAreaId;
        partial void OnFilmAreaIdChanging(global::System.String value);
        partial void OnFilmAreaIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FilmCategoryId
        {
            get
            {
                return _FilmCategoryId;
            }
            set
            {
                OnFilmCategoryIdChanging(value);
                ReportPropertyChanging("FilmCategoryId");
                _FilmCategoryId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FilmCategoryId");
                OnFilmCategoryIdChanged();
            }
        }
        private global::System.String _FilmCategoryId;
        partial void OnFilmCategoryIdChanging(global::System.String value);
        partial void OnFilmCategoryIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FilmCode
        {
            get
            {
                return _FilmCode;
            }
            set
            {
                OnFilmCodeChanging(value);
                ReportPropertyChanging("FilmCode");
                _FilmCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FilmCode");
                OnFilmCodeChanged();
            }
        }
        private global::System.String _FilmCode;
        partial void OnFilmCodeChanging(global::System.String value);
        partial void OnFilmCodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FilmName
        {
            get
            {
                return _FilmName;
            }
            set
            {
                OnFilmNameChanging(value);
                ReportPropertyChanging("FilmName");
                _FilmName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FilmName");
                OnFilmNameChanged();
            }
        }
        private global::System.String _FilmName;
        partial void OnFilmNameChanging(global::System.String value);
        partial void OnFilmNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PublishDate
        {
            get
            {
                return _PublishDate;
            }
            set
            {
                OnPublishDateChanging(value);
                ReportPropertyChanging("PublishDate");
                _PublishDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PublishDate");
                OnPublishDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PublishDate;
        partial void OnPublishDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPublishDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Publisher
        {
            get
            {
                return _Publisher;
            }
            set
            {
                OnPublisherChanging(value);
                ReportPropertyChanging("Publisher");
                _Publisher = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Publisher");
                OnPublisherChanged();
            }
        }
        private global::System.String _Publisher;
        partial void OnPublisherChanging(global::System.String value);
        partial void OnPublisherChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Producer
        {
            get
            {
                return _Producer;
            }
            set
            {
                OnProducerChanging(value);
                ReportPropertyChanging("Producer");
                _Producer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Producer");
                OnProducerChanged();
            }
        }
        private global::System.String _Producer;
        partial void OnProducerChanging(global::System.String value);
        partial void OnProducerChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Director
        {
            get
            {
                return _Director;
            }
            set
            {
                OnDirectorChanging(value);
                ReportPropertyChanging("Director");
                _Director = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Director");
                OnDirectorChanged();
            }
        }
        private global::System.String _Director;
        partial void OnDirectorChanging(global::System.String value);
        partial void OnDirectorChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Cast
        {
            get
            {
                return _Cast;
            }
            set
            {
                OnCastChanging(value);
                ReportPropertyChanging("Cast");
                _Cast = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Cast");
                OnCastChanged();
            }
        }
        private global::System.String _Cast;
        partial void OnCastChanging(global::System.String value);
        partial void OnCastChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Brief
        {
            get
            {
                return _Brief;
            }
            set
            {
                OnBriefChanging(value);
                ReportPropertyChanging("Brief");
                _Brief = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Brief");
                OnBriefChanged();
            }
        }
        private global::System.String _Brief;
        partial void OnBriefChanging(global::System.String value);
        partial void OnBriefChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Poster
        {
            get
            {
                return StructuralObject.GetValidValue(_Poster);
            }
            set
            {
                OnPosterChanging(value);
                ReportPropertyChanging("Poster");
                _Poster = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Poster");
                OnPosterChanged();
            }
        }
        private global::System.Byte[] _Poster;
        partial void OnPosterChanging(global::System.Byte[] value);
        partial void OnPosterChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FilmLength
        {
            get
            {
                return _FilmLength;
            }
            set
            {
                OnFilmLengthChanging(value);
                ReportPropertyChanging("FilmLength");
                _FilmLength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FilmLength");
                OnFilmLengthChanged();
            }
        }
        private Nullable<global::System.Int32> _FilmLength;
        partial void OnFilmLengthChanging(Nullable<global::System.Int32> value);
        partial void OnFilmLengthChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> Rent
        {
            get
            {
                return _Rent;
            }
            set
            {
                OnRentChanging(value);
                ReportPropertyChanging("Rent");
                _Rent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rent");
                OnRentChanged();
            }
        }
        private Nullable<global::System.Single> _Rent;
        partial void OnRentChanging(Nullable<global::System.Single> value);
        partial void OnRentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> Ratio
        {
            get
            {
                return _Ratio;
            }
            set
            {
                OnRatioChanging(value);
                ReportPropertyChanging("Ratio");
                _Ratio = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ratio");
                OnRatioChanged();
            }
        }
        private Nullable<global::System.Single> _Ratio;
        partial void OnRatioChanging(Nullable<global::System.Single> value);
        partial void OnRatioChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> LowestPrice
        {
            get
            {
                return _LowestPrice;
            }
            set
            {
                OnLowestPriceChanging(value);
                ReportPropertyChanging("LowestPrice");
                _LowestPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LowestPrice");
                OnLowestPriceChanged();
            }
        }
        private Nullable<global::System.Single> _LowestPrice;
        partial void OnLowestPriceChanging(Nullable<global::System.Single> value);
        partial void OnLowestPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BorderColour
        {
            get
            {
                return _BorderColour;
            }
            set
            {
                OnBorderColourChanging(value);
                ReportPropertyChanging("BorderColour");
                _BorderColour = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BorderColour");
                OnBorderColourChanged();
            }
        }
        private global::System.String _BorderColour;
        partial void OnBorderColourChanging(global::System.String value);
        partial void OnBorderColourChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HasMode
        {
            get
            {
                return _HasMode;
            }
            set
            {
                OnHasModeChanging(value);
                ReportPropertyChanging("HasMode");
                _HasMode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasMode");
                OnHasModeChanged();
            }
        }
        private Nullable<global::System.Boolean> _HasMode;
        partial void OnHasModeChanging(Nullable<global::System.Boolean> value);
        partial void OnHasModeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_F_F2Film", "Film_FilmMode")]
        public EntityCollection<Film_FilmMode> Film_FilmMode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Film_FilmMode>("FlamingoModel.FK_F_F2Film", "Film_FilmMode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Film_FilmMode>("FlamingoModel.FK_F_F2Film", "Film_FilmMode", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Film_FilmType2Film", "Film_FilmType")]
        public EntityCollection<Film_FilmType> Film_FilmType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Film_FilmType>("FlamingoModel.FK_Film_FilmType2Film", "Film_FilmType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Film_FilmType>("FlamingoModel.FK_Film_FilmType2Film", "Film_FilmType", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Film2FilmArea", "FilmArea")]
        public FilmArea FilmArea
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilmArea>("FlamingoModel.FK_Film2FilmArea", "FilmArea").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilmArea>("FlamingoModel.FK_Film2FilmArea", "FilmArea").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FilmArea> FilmAreaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilmArea>("FlamingoModel.FK_Film2FilmArea", "FilmArea");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FilmArea>("FlamingoModel.FK_Film2FilmArea", "FilmArea", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Film2FilmCategory", "FilmCategory")]
        public FilmCategory FilmCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilmCategory>("FlamingoModel.FK_Film2FilmCategory", "FilmCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilmCategory>("FlamingoModel.FK_Film2FilmCategory", "FilmCategory").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FilmCategory> FilmCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilmCategory>("FlamingoModel.FK_Film2FilmCategory", "FilmCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FilmCategory>("FlamingoModel.FK_Film2FilmCategory", "FilmCategory", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_ShowPlan2Film", "ShowPlan")]
        public EntityCollection<ShowPlan> ShowPlan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ShowPlan>("FlamingoModel.FK_ShowPlan2Film", "ShowPlan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ShowPlan>("FlamingoModel.FK_ShowPlan2Film", "ShowPlan", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Ticket2Film", "Ticket")]
        public EntityCollection<Ticket> Ticket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ticket>("FlamingoModel.FK_Ticket2Film", "Ticket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ticket>("FlamingoModel.FK_Ticket2Film", "Ticket", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="Film_FilmMode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Film_FilmMode : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Film_FilmMode 对象。
        /// </summary>
        /// <param name="film_FilmModeId">Film_FilmModeId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static Film_FilmMode CreateFilm_FilmMode(global::System.Int32 film_FilmModeId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            Film_FilmMode film_FilmMode = new Film_FilmMode();
            film_FilmMode.Film_FilmModeId = film_FilmModeId;
            film_FilmMode.Created = created;
            film_FilmMode.Updated = updated;
            film_FilmMode.ActiveFlag = activeFlag;
            return film_FilmMode;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Film_FilmModeId
        {
            get
            {
                return _Film_FilmModeId;
            }
            set
            {
                if (_Film_FilmModeId != value)
                {
                    OnFilm_FilmModeIdChanging(value);
                    ReportPropertyChanging("Film_FilmModeId");
                    _Film_FilmModeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Film_FilmModeId");
                    OnFilm_FilmModeIdChanged();
                }
            }
        }
        private global::System.Int32 _Film_FilmModeId;
        partial void OnFilm_FilmModeIdChanging(global::System.Int32 value);
        partial void OnFilm_FilmModeIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FilmId
        {
            get
            {
                return _FilmId;
            }
            set
            {
                OnFilmIdChanging(value);
                ReportPropertyChanging("FilmId");
                _FilmId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FilmId");
                OnFilmIdChanged();
            }
        }
        private global::System.String _FilmId;
        partial void OnFilmIdChanging(global::System.String value);
        partial void OnFilmIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FilmModeId
        {
            get
            {
                return _FilmModeId;
            }
            set
            {
                OnFilmModeIdChanging(value);
                ReportPropertyChanging("FilmModeId");
                _FilmModeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FilmModeId");
                OnFilmModeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FilmModeId;
        partial void OnFilmModeIdChanging(Nullable<global::System.Int32> value);
        partial void OnFilmModeIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BorderColour
        {
            get
            {
                return _BorderColour;
            }
            set
            {
                OnBorderColourChanging(value);
                ReportPropertyChanging("BorderColour");
                _BorderColour = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BorderColour");
                OnBorderColourChanged();
            }
        }
        private global::System.String _BorderColour;
        partial void OnBorderColourChanging(global::System.String value);
        partial void OnBorderColourChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_F_F2Film", "Film")]
        public Film Film
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Film>("FlamingoModel.FK_F_F2Film", "Film").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Film>("FlamingoModel.FK_F_F2Film", "Film").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Film> FilmReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Film>("FlamingoModel.FK_F_F2Film", "Film");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Film>("FlamingoModel.FK_F_F2Film", "Film", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_F_F2FilmMode", "FilmMode")]
        public FilmMode FilmMode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilmMode>("FlamingoModel.FK_F_F2FilmMode", "FilmMode").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilmMode>("FlamingoModel.FK_F_F2FilmMode", "FilmMode").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FilmMode> FilmModeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilmMode>("FlamingoModel.FK_F_F2FilmMode", "FilmMode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FilmMode>("FlamingoModel.FK_F_F2FilmMode", "FilmMode", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="Film_FilmType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Film_FilmType : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Film_FilmType 对象。
        /// </summary>
        /// <param name="film_FilmTypeId">Film_FilmTypeId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static Film_FilmType CreateFilm_FilmType(global::System.Int32 film_FilmTypeId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            Film_FilmType film_FilmType = new Film_FilmType();
            film_FilmType.Film_FilmTypeId = film_FilmTypeId;
            film_FilmType.Created = created;
            film_FilmType.Updated = updated;
            film_FilmType.ActiveFlag = activeFlag;
            return film_FilmType;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Film_FilmTypeId
        {
            get
            {
                return _Film_FilmTypeId;
            }
            set
            {
                if (_Film_FilmTypeId != value)
                {
                    OnFilm_FilmTypeIdChanging(value);
                    ReportPropertyChanging("Film_FilmTypeId");
                    _Film_FilmTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Film_FilmTypeId");
                    OnFilm_FilmTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _Film_FilmTypeId;
        partial void OnFilm_FilmTypeIdChanging(global::System.Int32 value);
        partial void OnFilm_FilmTypeIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FilmTypeId
        {
            get
            {
                return _FilmTypeId;
            }
            set
            {
                OnFilmTypeIdChanging(value);
                ReportPropertyChanging("FilmTypeId");
                _FilmTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FilmTypeId");
                OnFilmTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FilmTypeId;
        partial void OnFilmTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnFilmTypeIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FilmId
        {
            get
            {
                return _FilmId;
            }
            set
            {
                OnFilmIdChanging(value);
                ReportPropertyChanging("FilmId");
                _FilmId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FilmId");
                OnFilmIdChanged();
            }
        }
        private global::System.String _FilmId;
        partial void OnFilmIdChanging(global::System.String value);
        partial void OnFilmIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Film_FilmType2Film", "Film")]
        public Film Film
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Film>("FlamingoModel.FK_Film_FilmType2Film", "Film").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Film>("FlamingoModel.FK_Film_FilmType2Film", "Film").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Film> FilmReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Film>("FlamingoModel.FK_Film_FilmType2Film", "Film");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Film>("FlamingoModel.FK_Film_FilmType2Film", "Film", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Film_FilmType2FilmType", "FilmType")]
        public FilmType FilmType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilmType>("FlamingoModel.FK_Film_FilmType2FilmType", "FilmType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilmType>("FlamingoModel.FK_Film_FilmType2FilmType", "FilmType").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FilmType> FilmTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilmType>("FlamingoModel.FK_Film_FilmType2FilmType", "FilmType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FilmType>("FlamingoModel.FK_Film_FilmType2FilmType", "FilmType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="FilmArea")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FilmArea : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 FilmArea 对象。
        /// </summary>
        /// <param name="filmAreaId">FilmAreaId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static FilmArea CreateFilmArea(global::System.String filmAreaId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            FilmArea filmArea = new FilmArea();
            filmArea.FilmAreaId = filmAreaId;
            filmArea.Created = created;
            filmArea.Updated = updated;
            filmArea.ActiveFlag = activeFlag;
            return filmArea;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FilmAreaId
        {
            get
            {
                return _FilmAreaId;
            }
            set
            {
                if (_FilmAreaId != value)
                {
                    OnFilmAreaIdChanging(value);
                    ReportPropertyChanging("FilmAreaId");
                    _FilmAreaId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FilmAreaId");
                    OnFilmAreaIdChanged();
                }
            }
        }
        private global::System.String _FilmAreaId;
        partial void OnFilmAreaIdChanging(global::System.String value);
        partial void OnFilmAreaIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FilmAreaName
        {
            get
            {
                return _FilmAreaName;
            }
            set
            {
                OnFilmAreaNameChanging(value);
                ReportPropertyChanging("FilmAreaName");
                _FilmAreaName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FilmAreaName");
                OnFilmAreaNameChanged();
            }
        }
        private global::System.String _FilmAreaName;
        partial void OnFilmAreaNameChanging(global::System.String value);
        partial void OnFilmAreaNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Film2FilmArea", "Film")]
        public EntityCollection<Film> Film
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Film>("FlamingoModel.FK_Film2FilmArea", "Film");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Film>("FlamingoModel.FK_Film2FilmArea", "Film", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="FilmCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FilmCategory : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 FilmCategory 对象。
        /// </summary>
        /// <param name="filmCategoryId">FilmCategoryId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static FilmCategory CreateFilmCategory(global::System.String filmCategoryId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            FilmCategory filmCategory = new FilmCategory();
            filmCategory.FilmCategoryId = filmCategoryId;
            filmCategory.Created = created;
            filmCategory.Updated = updated;
            filmCategory.ActiveFlag = activeFlag;
            return filmCategory;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FilmCategoryId
        {
            get
            {
                return _FilmCategoryId;
            }
            set
            {
                if (_FilmCategoryId != value)
                {
                    OnFilmCategoryIdChanging(value);
                    ReportPropertyChanging("FilmCategoryId");
                    _FilmCategoryId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FilmCategoryId");
                    OnFilmCategoryIdChanged();
                }
            }
        }
        private global::System.String _FilmCategoryId;
        partial void OnFilmCategoryIdChanging(global::System.String value);
        partial void OnFilmCategoryIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FilmCategoryName
        {
            get
            {
                return _FilmCategoryName;
            }
            set
            {
                OnFilmCategoryNameChanging(value);
                ReportPropertyChanging("FilmCategoryName");
                _FilmCategoryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FilmCategoryName");
                OnFilmCategoryNameChanged();
            }
        }
        private global::System.String _FilmCategoryName;
        partial void OnFilmCategoryNameChanging(global::System.String value);
        partial void OnFilmCategoryNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Film2FilmCategory", "Film")]
        public EntityCollection<Film> Film
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Film>("FlamingoModel.FK_Film2FilmCategory", "Film");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Film>("FlamingoModel.FK_Film2FilmCategory", "Film", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="FilmMode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FilmMode : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 FilmMode 对象。
        /// </summary>
        /// <param name="filmModeId">FilmModeId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static FilmMode CreateFilmMode(global::System.Int32 filmModeId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            FilmMode filmMode = new FilmMode();
            filmMode.FilmModeId = filmModeId;
            filmMode.Created = created;
            filmMode.Updated = updated;
            filmMode.ActiveFlag = activeFlag;
            return filmMode;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FilmModeId
        {
            get
            {
                return _FilmModeId;
            }
            set
            {
                if (_FilmModeId != value)
                {
                    OnFilmModeIdChanging(value);
                    ReportPropertyChanging("FilmModeId");
                    _FilmModeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FilmModeId");
                    OnFilmModeIdChanged();
                }
            }
        }
        private global::System.Int32 _FilmModeId;
        partial void OnFilmModeIdChanging(global::System.Int32 value);
        partial void OnFilmModeIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FilmModeName
        {
            get
            {
                return _FilmModeName;
            }
            set
            {
                OnFilmModeNameChanging(value);
                ReportPropertyChanging("FilmModeName");
                _FilmModeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FilmModeName");
                OnFilmModeNameChanged();
            }
        }
        private global::System.String _FilmModeName;
        partial void OnFilmModeNameChanging(global::System.String value);
        partial void OnFilmModeNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_F_F2FilmMode", "Film_FilmMode")]
        public EntityCollection<Film_FilmMode> Film_FilmMode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Film_FilmMode>("FlamingoModel.FK_F_F2FilmMode", "Film_FilmMode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Film_FilmMode>("FlamingoModel.FK_F_F2FilmMode", "Film_FilmMode", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="FilmPrices")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FilmPrices : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 FilmPrices 对象。
        /// </summary>
        /// <param name="filmPriceId">FilmPriceId 属性的初始值。</param>
        public static FilmPrices CreateFilmPrices(global::System.Int32 filmPriceId)
        {
            FilmPrices filmPrices = new FilmPrices();
            filmPrices.FilmPriceId = filmPriceId;
            return filmPrices;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FilmPriceId
        {
            get
            {
                return _FilmPriceId;
            }
            set
            {
                if (_FilmPriceId != value)
                {
                    OnFilmPriceIdChanging(value);
                    ReportPropertyChanging("FilmPriceId");
                    _FilmPriceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FilmPriceId");
                    OnFilmPriceIdChanged();
                }
            }
        }
        private global::System.Int32 _FilmPriceId;
        partial void OnFilmPriceIdChanging(global::System.Int32 value);
        partial void OnFilmPriceIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DailyPlanId
        {
            get
            {
                return _DailyPlanId;
            }
            set
            {
                OnDailyPlanIdChanging(value);
                ReportPropertyChanging("DailyPlanId");
                _DailyPlanId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DailyPlanId");
                OnDailyPlanIdChanged();
            }
        }
        private global::System.String _DailyPlanId;
        partial void OnDailyPlanIdChanging(global::System.String value);
        partial void OnDailyPlanIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FilmId
        {
            get
            {
                return _FilmId;
            }
            set
            {
                OnFilmIdChanging(value);
                ReportPropertyChanging("FilmId");
                _FilmId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FilmId");
                OnFilmIdChanged();
            }
        }
        private global::System.String _FilmId;
        partial void OnFilmIdChanging(global::System.String value);
        partial void OnFilmIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SinglePrice
        {
            get
            {
                return _SinglePrice;
            }
            set
            {
                OnSinglePriceChanging(value);
                ReportPropertyChanging("SinglePrice");
                _SinglePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SinglePrice");
                OnSinglePriceChanged();
            }
        }
        private Nullable<global::System.Single> _SinglePrice;
        partial void OnSinglePriceChanging(Nullable<global::System.Single> value);
        partial void OnSinglePriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> DoublePrice
        {
            get
            {
                return _DoublePrice;
            }
            set
            {
                OnDoublePriceChanging(value);
                ReportPropertyChanging("DoublePrice");
                _DoublePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoublePrice");
                OnDoublePriceChanged();
            }
        }
        private Nullable<global::System.Single> _DoublePrice;
        partial void OnDoublePriceChanging(Nullable<global::System.Single> value);
        partial void OnDoublePriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> StudentPrice
        {
            get
            {
                return _StudentPrice;
            }
            set
            {
                OnStudentPriceChanging(value);
                ReportPropertyChanging("StudentPrice");
                _StudentPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudentPrice");
                OnStudentPriceChanged();
            }
        }
        private Nullable<global::System.Single> _StudentPrice;
        partial void OnStudentPriceChanging(Nullable<global::System.Single> value);
        partial void OnStudentPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> GroupPrice
        {
            get
            {
                return _GroupPrice;
            }
            set
            {
                OnGroupPriceChanging(value);
                ReportPropertyChanging("GroupPrice");
                _GroupPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupPrice");
                OnGroupPriceChanged();
            }
        }
        private Nullable<global::System.Single> _GroupPrice;
        partial void OnGroupPriceChanging(Nullable<global::System.Single> value);
        partial void OnGroupPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> BoxPrice
        {
            get
            {
                return _BoxPrice;
            }
            set
            {
                OnBoxPriceChanging(value);
                ReportPropertyChanging("BoxPrice");
                _BoxPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoxPrice");
                OnBoxPriceChanged();
            }
        }
        private Nullable<global::System.Single> _BoxPrice;
        partial void OnBoxPriceChanging(Nullable<global::System.Single> value);
        partial void OnBoxPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> MemberPrice
        {
            get
            {
                return _MemberPrice;
            }
            set
            {
                OnMemberPriceChanging(value);
                ReportPropertyChanging("MemberPrice");
                _MemberPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberPrice");
                OnMemberPriceChanged();
            }
        }
        private Nullable<global::System.Single> _MemberPrice;
        partial void OnMemberPriceChanging(Nullable<global::System.Single> value);
        partial void OnMemberPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> DiscountPrice
        {
            get
            {
                return _DiscountPrice;
            }
            set
            {
                OnDiscountPriceChanging(value);
                ReportPropertyChanging("DiscountPrice");
                _DiscountPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscountPrice");
                OnDiscountPriceChanged();
            }
        }
        private Nullable<global::System.Single> _DiscountPrice;
        partial void OnDiscountPriceChanging(Nullable<global::System.Single> value);
        partial void OnDiscountPriceChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="FilmType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FilmType : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 FilmType 对象。
        /// </summary>
        /// <param name="filmTypeId">FilmTypeId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static FilmType CreateFilmType(global::System.Int32 filmTypeId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            FilmType filmType = new FilmType();
            filmType.FilmTypeId = filmTypeId;
            filmType.Created = created;
            filmType.Updated = updated;
            filmType.ActiveFlag = activeFlag;
            return filmType;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FilmTypeId
        {
            get
            {
                return _FilmTypeId;
            }
            set
            {
                if (_FilmTypeId != value)
                {
                    OnFilmTypeIdChanging(value);
                    ReportPropertyChanging("FilmTypeId");
                    _FilmTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FilmTypeId");
                    OnFilmTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _FilmTypeId;
        partial void OnFilmTypeIdChanging(global::System.Int32 value);
        partial void OnFilmTypeIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FilmTypeName
        {
            get
            {
                return _FilmTypeName;
            }
            set
            {
                OnFilmTypeNameChanging(value);
                ReportPropertyChanging("FilmTypeName");
                _FilmTypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FilmTypeName");
                OnFilmTypeNameChanged();
            }
        }
        private global::System.String _FilmTypeName;
        partial void OnFilmTypeNameChanging(global::System.String value);
        partial void OnFilmTypeNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Film_FilmType2FilmType", "Film_FilmType")]
        public EntityCollection<Film_FilmType> Film_FilmType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Film_FilmType>("FlamingoModel.FK_Film_FilmType2FilmType", "Film_FilmType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Film_FilmType>("FlamingoModel.FK_Film_FilmType2FilmType", "Film_FilmType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="Hall")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Hall : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Hall 对象。
        /// </summary>
        /// <param name="hallId">HallId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static Hall CreateHall(global::System.String hallId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            Hall hall = new Hall();
            hall.HallId = hallId;
            hall.Created = created;
            hall.Updated = updated;
            hall.ActiveFlag = activeFlag;
            return hall;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HallId
        {
            get
            {
                return _HallId;
            }
            set
            {
                if (_HallId != value)
                {
                    OnHallIdChanging(value);
                    ReportPropertyChanging("HallId");
                    _HallId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("HallId");
                    OnHallIdChanged();
                }
            }
        }
        private global::System.String _HallId;
        partial void OnHallIdChanging(global::System.String value);
        partial void OnHallIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TheaterId
        {
            get
            {
                return _TheaterId;
            }
            set
            {
                OnTheaterIdChanging(value);
                ReportPropertyChanging("TheaterId");
                _TheaterId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TheaterId");
                OnTheaterIdChanged();
            }
        }
        private global::System.String _TheaterId;
        partial void OnTheaterIdChanging(global::System.String value);
        partial void OnTheaterIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HallName
        {
            get
            {
                return _HallName;
            }
            set
            {
                OnHallNameChanging(value);
                ReportPropertyChanging("HallName");
                _HallName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HallName");
                OnHallNameChanged();
            }
        }
        private global::System.String _HallName;
        partial void OnHallNameChanging(global::System.String value);
        partial void OnHallNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Seats
        {
            get
            {
                return _Seats;
            }
            set
            {
                OnSeatsChanging(value);
                ReportPropertyChanging("Seats");
                _Seats = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Seats");
                OnSeatsChanged();
            }
        }
        private Nullable<global::System.Int32> _Seats;
        partial void OnSeatsChanging(Nullable<global::System.Int32> value);
        partial void OnSeatsChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Levels
        {
            get
            {
                return _Levels;
            }
            set
            {
                OnLevelsChanging(value);
                ReportPropertyChanging("Levels");
                _Levels = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Levels");
                OnLevelsChanged();
            }
        }
        private Nullable<global::System.Int32> _Levels;
        partial void OnLevelsChanging(Nullable<global::System.Int32> value);
        partial void OnLevelsChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BarColour
        {
            get
            {
                return _BarColour;
            }
            set
            {
                OnBarColourChanging(value);
                ReportPropertyChanging("BarColour");
                _BarColour = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BarColour");
                OnBarColourChanged();
            }
        }
        private global::System.String _BarColour;
        partial void OnBarColourChanging(global::System.String value);
        partial void OnBarColourChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Screen
        {
            get
            {
                return _Screen;
            }
            set
            {
                OnScreenChanging(value);
                ReportPropertyChanging("Screen");
                _Screen = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Screen");
                OnScreenChanged();
            }
        }
        private global::System.String _Screen;
        partial void OnScreenChanging(global::System.String value);
        partial void OnScreenChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Projector
        {
            get
            {
                return _Projector;
            }
            set
            {
                OnProjectorChanging(value);
                ReportPropertyChanging("Projector");
                _Projector = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Projector");
                OnProjectorChanged();
            }
        }
        private global::System.String _Projector;
        partial void OnProjectorChanging(global::System.String value);
        partial void OnProjectorChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PlayMode
        {
            get
            {
                return _PlayMode;
            }
            set
            {
                OnPlayModeChanging(value);
                ReportPropertyChanging("PlayMode");
                _PlayMode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PlayMode");
                OnPlayModeChanged();
            }
        }
        private global::System.String _PlayMode;
        partial void OnPlayModeChanging(global::System.String value);
        partial void OnPlayModeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SoundSystem
        {
            get
            {
                return _SoundSystem;
            }
            set
            {
                OnSoundSystemChanging(value);
                ReportPropertyChanging("SoundSystem");
                _SoundSystem = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SoundSystem");
                OnSoundSystemChanged();
            }
        }
        private global::System.String _SoundSystem;
        partial void OnSoundSystemChanging(global::System.String value);
        partial void OnSoundSystemChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Hall2Theater", "Theater")]
        public Theater Theater
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theater>("FlamingoModel.FK_Hall2Theater", "Theater").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theater>("FlamingoModel.FK_Hall2Theater", "Theater").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Theater> TheaterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theater>("FlamingoModel.FK_Hall2Theater", "Theater");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Theater>("FlamingoModel.FK_Hall2Theater", "Theater", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_SeatingChart2Hall", "SeatingChart")]
        public EntityCollection<SeatingChart> SeatingChart
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SeatingChart>("FlamingoModel.FK_SeatingChart2Hall", "SeatingChart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SeatingChart>("FlamingoModel.FK_SeatingChart2Hall", "SeatingChart", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_ShowPlan2Hall", "ShowPlan")]
        public EntityCollection<ShowPlan> ShowPlan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ShowPlan>("FlamingoModel.FK_ShowPlan2Hall", "ShowPlan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ShowPlan>("FlamingoModel.FK_ShowPlan2Hall", "ShowPlan", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="HallPrices")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HallPrices : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 HallPrices 对象。
        /// </summary>
        /// <param name="hallPriceId">HallPriceId 属性的初始值。</param>
        public static HallPrices CreateHallPrices(global::System.Int32 hallPriceId)
        {
            HallPrices hallPrices = new HallPrices();
            hallPrices.HallPriceId = hallPriceId;
            return hallPrices;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HallPriceId
        {
            get
            {
                return _HallPriceId;
            }
            set
            {
                if (_HallPriceId != value)
                {
                    OnHallPriceIdChanging(value);
                    ReportPropertyChanging("HallPriceId");
                    _HallPriceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HallPriceId");
                    OnHallPriceIdChanged();
                }
            }
        }
        private global::System.Int32 _HallPriceId;
        partial void OnHallPriceIdChanging(global::System.Int32 value);
        partial void OnHallPriceIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DailyPlanId
        {
            get
            {
                return _DailyPlanId;
            }
            set
            {
                OnDailyPlanIdChanging(value);
                ReportPropertyChanging("DailyPlanId");
                _DailyPlanId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DailyPlanId");
                OnDailyPlanIdChanged();
            }
        }
        private global::System.String _DailyPlanId;
        partial void OnDailyPlanIdChanging(global::System.String value);
        partial void OnDailyPlanIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HallId
        {
            get
            {
                return _HallId;
            }
            set
            {
                OnHallIdChanging(value);
                ReportPropertyChanging("HallId");
                _HallId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HallId");
                OnHallIdChanged();
            }
        }
        private global::System.String _HallId;
        partial void OnHallIdChanging(global::System.String value);
        partial void OnHallIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SinglePrice
        {
            get
            {
                return _SinglePrice;
            }
            set
            {
                OnSinglePriceChanging(value);
                ReportPropertyChanging("SinglePrice");
                _SinglePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SinglePrice");
                OnSinglePriceChanged();
            }
        }
        private Nullable<global::System.Single> _SinglePrice;
        partial void OnSinglePriceChanging(Nullable<global::System.Single> value);
        partial void OnSinglePriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> DoublePrice
        {
            get
            {
                return _DoublePrice;
            }
            set
            {
                OnDoublePriceChanging(value);
                ReportPropertyChanging("DoublePrice");
                _DoublePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoublePrice");
                OnDoublePriceChanged();
            }
        }
        private Nullable<global::System.Single> _DoublePrice;
        partial void OnDoublePriceChanging(Nullable<global::System.Single> value);
        partial void OnDoublePriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> StudentPrice
        {
            get
            {
                return _StudentPrice;
            }
            set
            {
                OnStudentPriceChanging(value);
                ReportPropertyChanging("StudentPrice");
                _StudentPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudentPrice");
                OnStudentPriceChanged();
            }
        }
        private Nullable<global::System.Single> _StudentPrice;
        partial void OnStudentPriceChanging(Nullable<global::System.Single> value);
        partial void OnStudentPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> GroupPrice
        {
            get
            {
                return _GroupPrice;
            }
            set
            {
                OnGroupPriceChanging(value);
                ReportPropertyChanging("GroupPrice");
                _GroupPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupPrice");
                OnGroupPriceChanged();
            }
        }
        private Nullable<global::System.Single> _GroupPrice;
        partial void OnGroupPriceChanging(Nullable<global::System.Single> value);
        partial void OnGroupPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> BoxPrice
        {
            get
            {
                return _BoxPrice;
            }
            set
            {
                OnBoxPriceChanging(value);
                ReportPropertyChanging("BoxPrice");
                _BoxPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoxPrice");
                OnBoxPriceChanged();
            }
        }
        private Nullable<global::System.Single> _BoxPrice;
        partial void OnBoxPriceChanging(Nullable<global::System.Single> value);
        partial void OnBoxPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> MemberPrice
        {
            get
            {
                return _MemberPrice;
            }
            set
            {
                OnMemberPriceChanging(value);
                ReportPropertyChanging("MemberPrice");
                _MemberPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberPrice");
                OnMemberPriceChanged();
            }
        }
        private Nullable<global::System.Single> _MemberPrice;
        partial void OnMemberPriceChanging(Nullable<global::System.Single> value);
        partial void OnMemberPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> DiscountPrice
        {
            get
            {
                return _DiscountPrice;
            }
            set
            {
                OnDiscountPriceChanging(value);
                ReportPropertyChanging("DiscountPrice");
                _DiscountPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscountPrice");
                OnDiscountPriceChanged();
            }
        }
        private Nullable<global::System.Single> _DiscountPrice;
        partial void OnDiscountPriceChanging(Nullable<global::System.Single> value);
        partial void OnDiscountPriceChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="Module")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Module : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Module 对象。
        /// </summary>
        /// <param name="moduleId">ModuleId 属性的初始值。</param>
        /// <param name="moduleName">ModuleName 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static Module CreateModule(global::System.Int32 moduleId, global::System.String moduleName, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            Module module = new Module();
            module.ModuleId = moduleId;
            module.ModuleName = moduleName;
            module.Created = created;
            module.Updated = updated;
            module.ActiveFlag = activeFlag;
            return module;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModuleId
        {
            get
            {
                return _ModuleId;
            }
            set
            {
                if (_ModuleId != value)
                {
                    OnModuleIdChanging(value);
                    ReportPropertyChanging("ModuleId");
                    _ModuleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ModuleId");
                    OnModuleIdChanged();
                }
            }
        }
        private global::System.Int32 _ModuleId;
        partial void OnModuleIdChanging(global::System.Int32 value);
        partial void OnModuleIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModuleName
        {
            get
            {
                return _ModuleName;
            }
            set
            {
                OnModuleNameChanging(value);
                ReportPropertyChanging("ModuleName");
                _ModuleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ModuleName");
                OnModuleNameChanged();
            }
        }
        private global::System.String _ModuleName;
        partial void OnModuleNameChanging(global::System.String value);
        partial void OnModuleNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Permission2Module", "Permission")]
        public EntityCollection<Permission> Permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Permission>("FlamingoModel.FK_Permission2Module", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Permission>("FlamingoModel.FK_Permission2Module", "Permission", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="OnlineUserLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OnlineUserLog : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 OnlineUserLog 对象。
        /// </summary>
        /// <param name="onlineUserLogId">OnlineUserLogId 属性的初始值。</param>
        public static OnlineUserLog CreateOnlineUserLog(global::System.Int32 onlineUserLogId)
        {
            OnlineUserLog onlineUserLog = new OnlineUserLog();
            onlineUserLog.OnlineUserLogId = onlineUserLogId;
            return onlineUserLog;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OnlineUserLogId
        {
            get
            {
                return _OnlineUserLogId;
            }
            set
            {
                if (_OnlineUserLogId != value)
                {
                    OnOnlineUserLogIdChanging(value);
                    ReportPropertyChanging("OnlineUserLogId");
                    _OnlineUserLogId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OnlineUserLogId");
                    OnOnlineUserLogIdChanged();
                }
            }
        }
        private global::System.Int32 _OnlineUserLogId;
        partial void OnOnlineUserLogIdChanging(global::System.Int32 value);
        partial void OnOnlineUserLogIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WS_IP
        {
            get
            {
                return _WS_IP;
            }
            set
            {
                OnWS_IPChanging(value);
                ReportPropertyChanging("WS_IP");
                _WS_IP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WS_IP");
                OnWS_IPChanged();
            }
        }
        private global::System.String _WS_IP;
        partial void OnWS_IPChanging(global::System.String value);
        partial void OnWS_IPChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WS_MAC
        {
            get
            {
                return _WS_MAC;
            }
            set
            {
                OnWS_MACChanging(value);
                ReportPropertyChanging("WS_MAC");
                _WS_MAC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WS_MAC");
                OnWS_MACChanged();
            }
        }
        private global::System.String _WS_MAC;
        partial void OnWS_MACChanging(global::System.String value);
        partial void OnWS_MACChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Created;
        partial void OnCreatedChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="Payment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Payment : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Payment 对象。
        /// </summary>
        /// <param name="paymentId">PaymentId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static Payment CreatePayment(global::System.Int32 paymentId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            Payment payment = new Payment();
            payment.PaymentId = paymentId;
            payment.Created = created;
            payment.Updated = updated;
            payment.ActiveFlag = activeFlag;
            return payment;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentId
        {
            get
            {
                return _PaymentId;
            }
            set
            {
                if (_PaymentId != value)
                {
                    OnPaymentIdChanging(value);
                    ReportPropertyChanging("PaymentId");
                    _PaymentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PaymentId");
                    OnPaymentIdChanged();
                }
            }
        }
        private global::System.Int32 _PaymentId;
        partial void OnPaymentIdChanging(global::System.Int32 value);
        partial void OnPaymentIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PaymentName
        {
            get
            {
                return _PaymentName;
            }
            set
            {
                OnPaymentNameChanging(value);
                ReportPropertyChanging("PaymentName");
                _PaymentName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PaymentName");
                OnPaymentNameChanged();
            }
        }
        private global::System.String _PaymentName;
        partial void OnPaymentNameChanging(global::System.String value);
        partial void OnPaymentNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Ticket2Payment", "Ticket")]
        public EntityCollection<Ticket> Ticket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ticket>("FlamingoModel.FK_Ticket2Payment", "Ticket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ticket>("FlamingoModel.FK_Ticket2Payment", "Ticket", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="PeriodPrices")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PeriodPrices : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 PeriodPrices 对象。
        /// </summary>
        /// <param name="periodPriceId">PeriodPriceId 属性的初始值。</param>
        public static PeriodPrices CreatePeriodPrices(global::System.Int32 periodPriceId)
        {
            PeriodPrices periodPrices = new PeriodPrices();
            periodPrices.PeriodPriceId = periodPriceId;
            return periodPrices;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PeriodPriceId
        {
            get
            {
                return _PeriodPriceId;
            }
            set
            {
                if (_PeriodPriceId != value)
                {
                    OnPeriodPriceIdChanging(value);
                    ReportPropertyChanging("PeriodPriceId");
                    _PeriodPriceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PeriodPriceId");
                    OnPeriodPriceIdChanged();
                }
            }
        }
        private global::System.Int32 _PeriodPriceId;
        partial void OnPeriodPriceIdChanging(global::System.Int32 value);
        partial void OnPeriodPriceIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DailyPlanId
        {
            get
            {
                return _DailyPlanId;
            }
            set
            {
                OnDailyPlanIdChanging(value);
                ReportPropertyChanging("DailyPlanId");
                _DailyPlanId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DailyPlanId");
                OnDailyPlanIdChanged();
            }
        }
        private global::System.String _DailyPlanId;
        partial void OnDailyPlanIdChanging(global::System.String value);
        partial void OnDailyPlanIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _StartTime;
        partial void OnStartTimeChanging(Nullable<global::System.TimeSpan> value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.TimeSpan> value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SinglePrice
        {
            get
            {
                return _SinglePrice;
            }
            set
            {
                OnSinglePriceChanging(value);
                ReportPropertyChanging("SinglePrice");
                _SinglePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SinglePrice");
                OnSinglePriceChanged();
            }
        }
        private Nullable<global::System.Single> _SinglePrice;
        partial void OnSinglePriceChanging(Nullable<global::System.Single> value);
        partial void OnSinglePriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> DoublePrice
        {
            get
            {
                return _DoublePrice;
            }
            set
            {
                OnDoublePriceChanging(value);
                ReportPropertyChanging("DoublePrice");
                _DoublePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoublePrice");
                OnDoublePriceChanged();
            }
        }
        private Nullable<global::System.Single> _DoublePrice;
        partial void OnDoublePriceChanging(Nullable<global::System.Single> value);
        partial void OnDoublePriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> StudentPrice
        {
            get
            {
                return _StudentPrice;
            }
            set
            {
                OnStudentPriceChanging(value);
                ReportPropertyChanging("StudentPrice");
                _StudentPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudentPrice");
                OnStudentPriceChanged();
            }
        }
        private Nullable<global::System.Single> _StudentPrice;
        partial void OnStudentPriceChanging(Nullable<global::System.Single> value);
        partial void OnStudentPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> GroupPrice
        {
            get
            {
                return _GroupPrice;
            }
            set
            {
                OnGroupPriceChanging(value);
                ReportPropertyChanging("GroupPrice");
                _GroupPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupPrice");
                OnGroupPriceChanged();
            }
        }
        private Nullable<global::System.Single> _GroupPrice;
        partial void OnGroupPriceChanging(Nullable<global::System.Single> value);
        partial void OnGroupPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> BoxPrice
        {
            get
            {
                return _BoxPrice;
            }
            set
            {
                OnBoxPriceChanging(value);
                ReportPropertyChanging("BoxPrice");
                _BoxPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoxPrice");
                OnBoxPriceChanged();
            }
        }
        private Nullable<global::System.Single> _BoxPrice;
        partial void OnBoxPriceChanging(Nullable<global::System.Single> value);
        partial void OnBoxPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> MemberPrice
        {
            get
            {
                return _MemberPrice;
            }
            set
            {
                OnMemberPriceChanging(value);
                ReportPropertyChanging("MemberPrice");
                _MemberPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberPrice");
                OnMemberPriceChanged();
            }
        }
        private Nullable<global::System.Single> _MemberPrice;
        partial void OnMemberPriceChanging(Nullable<global::System.Single> value);
        partial void OnMemberPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> DiscountPrice
        {
            get
            {
                return _DiscountPrice;
            }
            set
            {
                OnDiscountPriceChanging(value);
                ReportPropertyChanging("DiscountPrice");
                _DiscountPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscountPrice");
                OnDiscountPriceChanged();
            }
        }
        private Nullable<global::System.Single> _DiscountPrice;
        partial void OnDiscountPriceChanging(Nullable<global::System.Single> value);
        partial void OnDiscountPriceChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="Permission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Permission : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Permission 对象。
        /// </summary>
        /// <param name="permissionId">PermissionId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static Permission CreatePermission(global::System.Int32 permissionId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            Permission permission = new Permission();
            permission.PermissionId = permissionId;
            permission.Created = created;
            permission.Updated = updated;
            permission.ActiveFlag = activeFlag;
            return permission;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PermissionId
        {
            get
            {
                return _PermissionId;
            }
            set
            {
                if (_PermissionId != value)
                {
                    OnPermissionIdChanging(value);
                    ReportPropertyChanging("PermissionId");
                    _PermissionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PermissionId");
                    OnPermissionIdChanged();
                }
            }
        }
        private global::System.Int32 _PermissionId;
        partial void OnPermissionIdChanging(global::System.Int32 value);
        partial void OnPermissionIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ModuleId
        {
            get
            {
                return _ModuleId;
            }
            set
            {
                OnModuleIdChanging(value);
                ReportPropertyChanging("ModuleId");
                _ModuleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModuleId");
                OnModuleIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ModuleId;
        partial void OnModuleIdChanging(Nullable<global::System.Int32> value);
        partial void OnModuleIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PermissionName
        {
            get
            {
                return _PermissionName;
            }
            set
            {
                OnPermissionNameChanging(value);
                ReportPropertyChanging("PermissionName");
                _PermissionName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PermissionName");
                OnPermissionNameChanged();
            }
        }
        private global::System.String _PermissionName;
        partial void OnPermissionNameChanging(global::System.String value);
        partial void OnPermissionNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Permission2Module", "Module")]
        public Module Module
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Module>("FlamingoModel.FK_Permission2Module", "Module").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Module>("FlamingoModel.FK_Permission2Module", "Module").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Module> ModuleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Module>("FlamingoModel.FK_Permission2Module", "Module");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Module>("FlamingoModel.FK_Permission2Module", "Module", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_R_P2Permission", "Role_Permission")]
        public EntityCollection<Role_Permission> Role_Permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role_Permission>("FlamingoModel.FK_R_P2Permission", "Role_Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role_Permission>("FlamingoModel.FK_R_P2Permission", "Role_Permission", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_U_P2Permission", "User_Permission")]
        public EntityCollection<User_Permission> User_Permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User_Permission>("FlamingoModel.FK_U_P2Permission", "User_Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User_Permission>("FlamingoModel.FK_U_P2Permission", "User_Permission", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="PrintSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PrintSetting : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 PrintSetting 对象。
        /// </summary>
        /// <param name="printSettingId">PrintSettingId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static PrintSetting CreatePrintSetting(global::System.Int32 printSettingId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            PrintSetting printSetting = new PrintSetting();
            printSetting.PrintSettingId = printSettingId;
            printSetting.Created = created;
            printSetting.Updated = updated;
            printSetting.ActiveFlag = activeFlag;
            return printSetting;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PrintSettingId
        {
            get
            {
                return _PrintSettingId;
            }
            set
            {
                if (_PrintSettingId != value)
                {
                    OnPrintSettingIdChanging(value);
                    ReportPropertyChanging("PrintSettingId");
                    _PrintSettingId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PrintSettingId");
                    OnPrintSettingIdChanged();
                }
            }
        }
        private global::System.Int32 _PrintSettingId;
        partial void OnPrintSettingIdChanging(global::System.Int32 value);
        partial void OnPrintSettingIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PrintModel
        {
            get
            {
                return _PrintModel;
            }
            set
            {
                OnPrintModelChanging(value);
                ReportPropertyChanging("PrintModel");
                _PrintModel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PrintModel");
                OnPrintModelChanged();
            }
        }
        private global::System.String _PrintModel;
        partial void OnPrintModelChanging(global::System.String value);
        partial void OnPrintModelChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SettingFile
        {
            get
            {
                return _SettingFile;
            }
            set
            {
                OnSettingFileChanging(value);
                ReportPropertyChanging("SettingFile");
                _SettingFile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SettingFile");
                OnSettingFileChanged();
            }
        }
        private global::System.String _SettingFile;
        partial void OnSettingFileChanging(global::System.String value);
        partial void OnSettingFileChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Template2PrintSetting", "Template")]
        public EntityCollection<Template> Template
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Template>("FlamingoModel.FK_Template2PrintSetting", "Template");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Template>("FlamingoModel.FK_Template2PrintSetting", "Template", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="Reservation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Reservation : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Reservation 对象。
        /// </summary>
        /// <param name="reservationId">ReservationId 属性的初始值。</param>
        /// <param name="seatStatusId">SeatStatusId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static Reservation CreateReservation(global::System.String reservationId, global::System.String seatStatusId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            Reservation reservation = new Reservation();
            reservation.ReservationId = reservationId;
            reservation.SeatStatusId = seatStatusId;
            reservation.Created = created;
            reservation.Updated = updated;
            reservation.ActiveFlag = activeFlag;
            return reservation;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReservationId
        {
            get
            {
                return _ReservationId;
            }
            set
            {
                if (_ReservationId != value)
                {
                    OnReservationIdChanging(value);
                    ReportPropertyChanging("ReservationId");
                    _ReservationId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ReservationId");
                    OnReservationIdChanged();
                }
            }
        }
        private global::System.String _ReservationId;
        partial void OnReservationIdChanging(global::System.String value);
        partial void OnReservationIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SeatStatusId
        {
            get
            {
                return _SeatStatusId;
            }
            set
            {
                OnSeatStatusIdChanging(value);
                ReportPropertyChanging("SeatStatusId");
                _SeatStatusId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SeatStatusId");
                OnSeatStatusIdChanged();
            }
        }
        private global::System.String _SeatStatusId;
        partial void OnSeatStatusIdChanging(global::System.String value);
        partial void OnSeatStatusIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TicketTypeId
        {
            get
            {
                return _TicketTypeId;
            }
            set
            {
                OnTicketTypeIdChanging(value);
                ReportPropertyChanging("TicketTypeId");
                _TicketTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TicketTypeId");
                OnTicketTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TicketTypeId;
        partial void OnTicketTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnTicketTypeIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShowPlanId
        {
            get
            {
                return _ShowPlanId;
            }
            set
            {
                OnShowPlanIdChanging(value);
                ReportPropertyChanging("ShowPlanId");
                _ShowPlanId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShowPlanId");
                OnShowPlanIdChanged();
            }
        }
        private global::System.String _ShowPlanId;
        partial void OnShowPlanIdChanging(global::System.String value);
        partial void OnShowPlanIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerName
        {
            get
            {
                return _CustomerName;
            }
            set
            {
                OnCustomerNameChanging(value);
                ReportPropertyChanging("CustomerName");
                _CustomerName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerName");
                OnCustomerNameChanged();
            }
        }
        private global::System.String _CustomerName;
        partial void OnCustomerNameChanging(global::System.String value);
        partial void OnCustomerNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerMobile
        {
            get
            {
                return _CustomerMobile;
            }
            set
            {
                OnCustomerMobileChanging(value);
                ReportPropertyChanging("CustomerMobile");
                _CustomerMobile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerMobile");
                OnCustomerMobileChanged();
            }
        }
        private global::System.String _CustomerMobile;
        partial void OnCustomerMobileChanging(global::System.String value);
        partial void OnCustomerMobileChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerCode
        {
            get
            {
                return _CustomerCode;
            }
            set
            {
                OnCustomerCodeChanging(value);
                ReportPropertyChanging("CustomerCode");
                _CustomerCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerCode");
                OnCustomerCodeChanged();
            }
        }
        private global::System.String _CustomerCode;
        partial void OnCustomerCodeChanging(global::System.String value);
        partial void OnCustomerCodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Identity
        {
            get
            {
                return _Identity;
            }
            set
            {
                OnIdentityChanging(value);
                ReportPropertyChanging("Identity");
                _Identity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Identity");
                OnIdentityChanged();
            }
        }
        private global::System.String _Identity;
        partial void OnIdentityChanging(global::System.String value);
        partial void OnIdentityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SeatNumber
        {
            get
            {
                return _SeatNumber;
            }
            set
            {
                OnSeatNumberChanging(value);
                ReportPropertyChanging("SeatNumber");
                _SeatNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SeatNumber");
                OnSeatNumberChanged();
            }
        }
        private global::System.String _SeatNumber;
        partial void OnSeatNumberChanging(global::System.String value);
        partial void OnSeatNumberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> TicketPrice
        {
            get
            {
                return _TicketPrice;
            }
            set
            {
                OnTicketPriceChanging(value);
                ReportPropertyChanging("TicketPrice");
                _TicketPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TicketPrice");
                OnTicketPriceChanged();
            }
        }
        private Nullable<global::System.Single> _TicketPrice;
        partial void OnTicketPriceChanging(Nullable<global::System.Single> value);
        partial void OnTicketPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssuedBy
        {
            get
            {
                return _IssuedBy;
            }
            set
            {
                OnIssuedByChanging(value);
                ReportPropertyChanging("IssuedBy");
                _IssuedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssuedBy");
                OnIssuedByChanged();
            }
        }
        private Nullable<global::System.Int32> _IssuedBy;
        partial void OnIssuedByChanging(Nullable<global::System.Int32> value);
        partial void OnIssuedByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BookedTime
        {
            get
            {
                return _BookedTime;
            }
            set
            {
                OnBookedTimeChanging(value);
                ReportPropertyChanging("BookedTime");
                _BookedTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BookedTime");
                OnBookedTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _BookedTime;
        partial void OnBookedTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnBookedTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Reservation2SeatStatus", "SeatStatus")]
        public SeatStatus SeatStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SeatStatus>("FlamingoModel.FK_Reservation2SeatStatus", "SeatStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SeatStatus>("FlamingoModel.FK_Reservation2SeatStatus", "SeatStatus").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SeatStatus> SeatStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SeatStatus>("FlamingoModel.FK_Reservation2SeatStatus", "SeatStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SeatStatus>("FlamingoModel.FK_Reservation2SeatStatus", "SeatStatus", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Reservation2TicketType", "TicketType")]
        public TicketType TicketType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TicketType>("FlamingoModel.FK_Reservation2TicketType", "TicketType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TicketType>("FlamingoModel.FK_Reservation2TicketType", "TicketType").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TicketType> TicketTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TicketType>("FlamingoModel.FK_Reservation2TicketType", "TicketType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TicketType>("FlamingoModel.FK_Reservation2TicketType", "TicketType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Role 对象。
        /// </summary>
        /// <param name="roleID">RoleID 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static Role CreateRole(global::System.Int32 roleID, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            Role role = new Role();
            role.RoleID = roleID;
            role.Created = created;
            role.Updated = updated;
            role.ActiveFlag = activeFlag;
            return role;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_R_P2Role", "Role_Permission")]
        public EntityCollection<Role_Permission> Role_Permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role_Permission>("FlamingoModel.FK_R_P2Role", "Role_Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role_Permission>("FlamingoModel.FK_R_P2Role", "Role_Permission", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_U_P2Role", "User_Permission")]
        public EntityCollection<User_Permission> User_Permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User_Permission>("FlamingoModel.FK_U_P2Role", "User_Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User_Permission>("FlamingoModel.FK_U_P2Role", "User_Permission", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_U_R2Role", "User_Role")]
        public EntityCollection<User_Role> User_Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User_Role>("FlamingoModel.FK_U_R2Role", "User_Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User_Role>("FlamingoModel.FK_U_R2Role", "User_Role", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="Role_Permission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role_Permission : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Role_Permission 对象。
        /// </summary>
        /// <param name="role_PermissionId">Role_PermissionId 属性的初始值。</param>
        /// <param name="permissionId">PermissionId 属性的初始值。</param>
        /// <param name="roleID">RoleID 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static Role_Permission CreateRole_Permission(global::System.Int32 role_PermissionId, global::System.Int32 permissionId, global::System.Int32 roleID, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            Role_Permission role_Permission = new Role_Permission();
            role_Permission.Role_PermissionId = role_PermissionId;
            role_Permission.PermissionId = permissionId;
            role_Permission.RoleID = roleID;
            role_Permission.Created = created;
            role_Permission.Updated = updated;
            role_Permission.ActiveFlag = activeFlag;
            return role_Permission;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Role_PermissionId
        {
            get
            {
                return _Role_PermissionId;
            }
            set
            {
                if (_Role_PermissionId != value)
                {
                    OnRole_PermissionIdChanging(value);
                    ReportPropertyChanging("Role_PermissionId");
                    _Role_PermissionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Role_PermissionId");
                    OnRole_PermissionIdChanged();
                }
            }
        }
        private global::System.Int32 _Role_PermissionId;
        partial void OnRole_PermissionIdChanging(global::System.Int32 value);
        partial void OnRole_PermissionIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PermissionId
        {
            get
            {
                return _PermissionId;
            }
            set
            {
                OnPermissionIdChanging(value);
                ReportPropertyChanging("PermissionId");
                _PermissionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PermissionId");
                OnPermissionIdChanged();
            }
        }
        private global::System.Int32 _PermissionId;
        partial void OnPermissionIdChanging(global::System.Int32 value);
        partial void OnPermissionIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_R_P2Permission", "Permission")]
        public Permission Permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("FlamingoModel.FK_R_P2Permission", "Permission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("FlamingoModel.FK_R_P2Permission", "Permission").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Permission> PermissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("FlamingoModel.FK_R_P2Permission", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Permission>("FlamingoModel.FK_R_P2Permission", "Permission", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_R_P2Role", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("FlamingoModel.FK_R_P2Role", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("FlamingoModel.FK_R_P2Role", "Role").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("FlamingoModel.FK_R_P2Role", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("FlamingoModel.FK_R_P2Role", "Role", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="Rpt_TicketReport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rpt_TicketReport : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Rpt_TicketReport 对象。
        /// </summary>
        /// <param name="rpt_TicketReportId">Rpt_TicketReportId 属性的初始值。</param>
        public static Rpt_TicketReport CreateRpt_TicketReport(global::System.Int32 rpt_TicketReportId)
        {
            Rpt_TicketReport rpt_TicketReport = new Rpt_TicketReport();
            rpt_TicketReport.Rpt_TicketReportId = rpt_TicketReportId;
            return rpt_TicketReport;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Rpt_TicketReportId
        {
            get
            {
                return _Rpt_TicketReportId;
            }
            set
            {
                if (_Rpt_TicketReportId != value)
                {
                    OnRpt_TicketReportIdChanging(value);
                    ReportPropertyChanging("Rpt_TicketReportId");
                    _Rpt_TicketReportId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Rpt_TicketReportId");
                    OnRpt_TicketReportIdChanged();
                }
            }
        }
        private global::System.Int32 _Rpt_TicketReportId;
        partial void OnRpt_TicketReportIdChanging(global::System.Int32 value);
        partial void OnRpt_TicketReportIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BusinessDate
        {
            get
            {
                return _BusinessDate;
            }
            set
            {
                OnBusinessDateChanging(value);
                ReportPropertyChanging("BusinessDate");
                _BusinessDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BusinessDate");
                OnBusinessDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BusinessDate;
        partial void OnBusinessDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBusinessDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CinemaID
        {
            get
            {
                return _CinemaID;
            }
            set
            {
                OnCinemaIDChanging(value);
                ReportPropertyChanging("CinemaID");
                _CinemaID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CinemaID");
                OnCinemaIDChanged();
            }
        }
        private global::System.String _CinemaID;
        partial void OnCinemaIDChanging(global::System.String value);
        partial void OnCinemaIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HallID
        {
            get
            {
                return _HallID;
            }
            set
            {
                OnHallIDChanging(value);
                ReportPropertyChanging("HallID");
                _HallID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HallID");
                OnHallIDChanged();
            }
        }
        private global::System.String _HallID;
        partial void OnHallIDChanging(global::System.String value);
        partial void OnHallIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FilmID
        {
            get
            {
                return _FilmID;
            }
            set
            {
                OnFilmIDChanging(value);
                ReportPropertyChanging("FilmID");
                _FilmID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FilmID");
                OnFilmIDChanged();
            }
        }
        private global::System.String _FilmID;
        partial void OnFilmIDChanging(global::System.String value);
        partial void OnFilmIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ShowPlan
        {
            get
            {
                return _ShowPlan;
            }
            set
            {
                OnShowPlanChanging(value);
                ReportPropertyChanging("ShowPlan");
                _ShowPlan = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShowPlan");
                OnShowPlanChanged();
            }
        }
        private Nullable<global::System.Int32> _ShowPlan;
        partial void OnShowPlanChanging(Nullable<global::System.Int32> value);
        partial void OnShowPlanChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ShowDatetime
        {
            get
            {
                return _ShowDatetime;
            }
            set
            {
                OnShowDatetimeChanging(value);
                ReportPropertyChanging("ShowDatetime");
                _ShowDatetime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShowDatetime");
                OnShowDatetimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ShowDatetime;
        partial void OnShowDatetimeChanging(Nullable<global::System.DateTime> value);
        partial void OnShowDatetimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SingleSeatPrice
        {
            get
            {
                return _SingleSeatPrice;
            }
            set
            {
                OnSingleSeatPriceChanging(value);
                ReportPropertyChanging("SingleSeatPrice");
                _SingleSeatPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SingleSeatPrice");
                OnSingleSeatPriceChanged();
            }
        }
        private Nullable<global::System.Single> _SingleSeatPrice;
        partial void OnSingleSeatPriceChanging(Nullable<global::System.Single> value);
        partial void OnSingleSeatPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> DoubleSeatPrice
        {
            get
            {
                return _DoubleSeatPrice;
            }
            set
            {
                OnDoubleSeatPriceChanging(value);
                ReportPropertyChanging("DoubleSeatPrice");
                _DoubleSeatPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoubleSeatPrice");
                OnDoubleSeatPriceChanged();
            }
        }
        private Nullable<global::System.Single> _DoubleSeatPrice;
        partial void OnDoubleSeatPriceChanging(Nullable<global::System.Single> value);
        partial void OnDoubleSeatPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> StudentPrice
        {
            get
            {
                return _StudentPrice;
            }
            set
            {
                OnStudentPriceChanging(value);
                ReportPropertyChanging("StudentPrice");
                _StudentPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudentPrice");
                OnStudentPriceChanged();
            }
        }
        private Nullable<global::System.Single> _StudentPrice;
        partial void OnStudentPriceChanging(Nullable<global::System.Single> value);
        partial void OnStudentPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> BoxPrice
        {
            get
            {
                return _BoxPrice;
            }
            set
            {
                OnBoxPriceChanging(value);
                ReportPropertyChanging("BoxPrice");
                _BoxPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoxPrice");
                OnBoxPriceChanged();
            }
        }
        private Nullable<global::System.Single> _BoxPrice;
        partial void OnBoxPriceChanging(Nullable<global::System.Single> value);
        partial void OnBoxPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> GroupHighPrice
        {
            get
            {
                return _GroupHighPrice;
            }
            set
            {
                OnGroupHighPriceChanging(value);
                ReportPropertyChanging("GroupHighPrice");
                _GroupHighPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupHighPrice");
                OnGroupHighPriceChanged();
            }
        }
        private Nullable<global::System.Single> _GroupHighPrice;
        partial void OnGroupHighPriceChanging(Nullable<global::System.Single> value);
        partial void OnGroupHighPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> GroupLowPrice
        {
            get
            {
                return _GroupLowPrice;
            }
            set
            {
                OnGroupLowPriceChanging(value);
                ReportPropertyChanging("GroupLowPrice");
                _GroupLowPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupLowPrice");
                OnGroupLowPriceChanged();
            }
        }
        private Nullable<global::System.Single> _GroupLowPrice;
        partial void OnGroupLowPriceChanging(Nullable<global::System.Single> value);
        partial void OnGroupLowPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> GroupAveragePrice
        {
            get
            {
                return _GroupAveragePrice;
            }
            set
            {
                OnGroupAveragePriceChanging(value);
                ReportPropertyChanging("GroupAveragePrice");
                _GroupAveragePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupAveragePrice");
                OnGroupAveragePriceChanged();
            }
        }
        private Nullable<global::System.Single> _GroupAveragePrice;
        partial void OnGroupAveragePriceChanging(Nullable<global::System.Single> value);
        partial void OnGroupAveragePriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SingleSeatAudienceQuantity
        {
            get
            {
                return _SingleSeatAudienceQuantity;
            }
            set
            {
                OnSingleSeatAudienceQuantityChanging(value);
                ReportPropertyChanging("SingleSeatAudienceQuantity");
                _SingleSeatAudienceQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SingleSeatAudienceQuantity");
                OnSingleSeatAudienceQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _SingleSeatAudienceQuantity;
        partial void OnSingleSeatAudienceQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnSingleSeatAudienceQuantityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DoubleSeatAudienceQuantity
        {
            get
            {
                return _DoubleSeatAudienceQuantity;
            }
            set
            {
                OnDoubleSeatAudienceQuantityChanging(value);
                ReportPropertyChanging("DoubleSeatAudienceQuantity");
                _DoubleSeatAudienceQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoubleSeatAudienceQuantity");
                OnDoubleSeatAudienceQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _DoubleSeatAudienceQuantity;
        partial void OnDoubleSeatAudienceQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnDoubleSeatAudienceQuantityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StudentAudienceQuantity
        {
            get
            {
                return _StudentAudienceQuantity;
            }
            set
            {
                OnStudentAudienceQuantityChanging(value);
                ReportPropertyChanging("StudentAudienceQuantity");
                _StudentAudienceQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudentAudienceQuantity");
                OnStudentAudienceQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _StudentAudienceQuantity;
        partial void OnStudentAudienceQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnStudentAudienceQuantityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BoxAudienceQuantity
        {
            get
            {
                return _BoxAudienceQuantity;
            }
            set
            {
                OnBoxAudienceQuantityChanging(value);
                ReportPropertyChanging("BoxAudienceQuantity");
                _BoxAudienceQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoxAudienceQuantity");
                OnBoxAudienceQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _BoxAudienceQuantity;
        partial void OnBoxAudienceQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnBoxAudienceQuantityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GroupAudienceQuantity
        {
            get
            {
                return _GroupAudienceQuantity;
            }
            set
            {
                OnGroupAudienceQuantityChanging(value);
                ReportPropertyChanging("GroupAudienceQuantity");
                _GroupAudienceQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupAudienceQuantity");
                OnGroupAudienceQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _GroupAudienceQuantity;
        partial void OnGroupAudienceQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnGroupAudienceQuantityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SingleReturnedQuantity
        {
            get
            {
                return _SingleReturnedQuantity;
            }
            set
            {
                OnSingleReturnedQuantityChanging(value);
                ReportPropertyChanging("SingleReturnedQuantity");
                _SingleReturnedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SingleReturnedQuantity");
                OnSingleReturnedQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _SingleReturnedQuantity;
        partial void OnSingleReturnedQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnSingleReturnedQuantityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DoubleReturnedQuantity
        {
            get
            {
                return _DoubleReturnedQuantity;
            }
            set
            {
                OnDoubleReturnedQuantityChanging(value);
                ReportPropertyChanging("DoubleReturnedQuantity");
                _DoubleReturnedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoubleReturnedQuantity");
                OnDoubleReturnedQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _DoubleReturnedQuantity;
        partial void OnDoubleReturnedQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnDoubleReturnedQuantityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StudentReturnedQuantity
        {
            get
            {
                return _StudentReturnedQuantity;
            }
            set
            {
                OnStudentReturnedQuantityChanging(value);
                ReportPropertyChanging("StudentReturnedQuantity");
                _StudentReturnedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudentReturnedQuantity");
                OnStudentReturnedQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _StudentReturnedQuantity;
        partial void OnStudentReturnedQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnStudentReturnedQuantityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BoxReturnedQuantity
        {
            get
            {
                return _BoxReturnedQuantity;
            }
            set
            {
                OnBoxReturnedQuantityChanging(value);
                ReportPropertyChanging("BoxReturnedQuantity");
                _BoxReturnedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoxReturnedQuantity");
                OnBoxReturnedQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _BoxReturnedQuantity;
        partial void OnBoxReturnedQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnBoxReturnedQuantityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GroupReturnedQuantity
        {
            get
            {
                return _GroupReturnedQuantity;
            }
            set
            {
                OnGroupReturnedQuantityChanging(value);
                ReportPropertyChanging("GroupReturnedQuantity");
                _GroupReturnedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupReturnedQuantity");
                OnGroupReturnedQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _GroupReturnedQuantity;
        partial void OnGroupReturnedQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnGroupReturnedQuantityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SingleTotalEarning
        {
            get
            {
                return _SingleTotalEarning;
            }
            set
            {
                OnSingleTotalEarningChanging(value);
                ReportPropertyChanging("SingleTotalEarning");
                _SingleTotalEarning = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SingleTotalEarning");
                OnSingleTotalEarningChanged();
            }
        }
        private Nullable<global::System.Single> _SingleTotalEarning;
        partial void OnSingleTotalEarningChanging(Nullable<global::System.Single> value);
        partial void OnSingleTotalEarningChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> DoubleTotalEarning
        {
            get
            {
                return _DoubleTotalEarning;
            }
            set
            {
                OnDoubleTotalEarningChanging(value);
                ReportPropertyChanging("DoubleTotalEarning");
                _DoubleTotalEarning = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoubleTotalEarning");
                OnDoubleTotalEarningChanged();
            }
        }
        private Nullable<global::System.Single> _DoubleTotalEarning;
        partial void OnDoubleTotalEarningChanging(Nullable<global::System.Single> value);
        partial void OnDoubleTotalEarningChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> StudentTotalEarning
        {
            get
            {
                return _StudentTotalEarning;
            }
            set
            {
                OnStudentTotalEarningChanging(value);
                ReportPropertyChanging("StudentTotalEarning");
                _StudentTotalEarning = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudentTotalEarning");
                OnStudentTotalEarningChanged();
            }
        }
        private Nullable<global::System.Single> _StudentTotalEarning;
        partial void OnStudentTotalEarningChanging(Nullable<global::System.Single> value);
        partial void OnStudentTotalEarningChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> BoxTotalEarning
        {
            get
            {
                return _BoxTotalEarning;
            }
            set
            {
                OnBoxTotalEarningChanging(value);
                ReportPropertyChanging("BoxTotalEarning");
                _BoxTotalEarning = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoxTotalEarning");
                OnBoxTotalEarningChanged();
            }
        }
        private Nullable<global::System.Single> _BoxTotalEarning;
        partial void OnBoxTotalEarningChanging(Nullable<global::System.Single> value);
        partial void OnBoxTotalEarningChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> GroupTotalEarning
        {
            get
            {
                return _GroupTotalEarning;
            }
            set
            {
                OnGroupTotalEarningChanging(value);
                ReportPropertyChanging("GroupTotalEarning");
                _GroupTotalEarning = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupTotalEarning");
                OnGroupTotalEarningChanged();
            }
        }
        private Nullable<global::System.Single> _GroupTotalEarning;
        partial void OnGroupTotalEarningChanging(Nullable<global::System.Single> value);
        partial void OnGroupTotalEarningChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalAudienceQuantity
        {
            get
            {
                return _TotalAudienceQuantity;
            }
            set
            {
                OnTotalAudienceQuantityChanging(value);
                ReportPropertyChanging("TotalAudienceQuantity");
                _TotalAudienceQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalAudienceQuantity");
                OnTotalAudienceQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalAudienceQuantity;
        partial void OnTotalAudienceQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnTotalAudienceQuantityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> TotalEarning
        {
            get
            {
                return _TotalEarning;
            }
            set
            {
                OnTotalEarningChanging(value);
                ReportPropertyChanging("TotalEarning");
                _TotalEarning = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalEarning");
                OnTotalEarningChanged();
            }
        }
        private Nullable<global::System.Single> _TotalEarning;
        partial void OnTotalEarningChanging(Nullable<global::System.Single> value);
        partial void OnTotalEarningChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> GroupTotalReturn
        {
            get
            {
                return _GroupTotalReturn;
            }
            set
            {
                OnGroupTotalReturnChanging(value);
                ReportPropertyChanging("GroupTotalReturn");
                _GroupTotalReturn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupTotalReturn");
                OnGroupTotalReturnChanged();
            }
        }
        private Nullable<global::System.Single> _GroupTotalReturn;
        partial void OnGroupTotalReturnChanging(Nullable<global::System.Single> value);
        partial void OnGroupTotalReturnChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> TotalReturn
        {
            get
            {
                return _TotalReturn;
            }
            set
            {
                OnTotalReturnChanging(value);
                ReportPropertyChanging("TotalReturn");
                _TotalReturn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalReturn");
                OnTotalReturnChanged();
            }
        }
        private Nullable<global::System.Single> _TotalReturn;
        partial void OnTotalReturnChanging(Nullable<global::System.Single> value);
        partial void OnTotalReturnChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="Seat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Seat : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Seat 对象。
        /// </summary>
        /// <param name="seatId">SeatId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static Seat CreateSeat(global::System.String seatId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            Seat seat = new Seat();
            seat.SeatId = seatId;
            seat.Created = created;
            seat.Updated = updated;
            seat.ActiveFlag = activeFlag;
            return seat;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SeatId
        {
            get
            {
                return _SeatId;
            }
            set
            {
                if (_SeatId != value)
                {
                    OnSeatIdChanging(value);
                    ReportPropertyChanging("SeatId");
                    _SeatId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SeatId");
                    OnSeatIdChanged();
                }
            }
        }
        private global::System.String _SeatId;
        partial void OnSeatIdChanging(global::System.String value);
        partial void OnSeatIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BlockId
        {
            get
            {
                return _BlockId;
            }
            set
            {
                OnBlockIdChanging(value);
                ReportPropertyChanging("BlockId");
                _BlockId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BlockId");
                OnBlockIdChanged();
            }
        }
        private global::System.String _BlockId;
        partial void OnBlockIdChanging(global::System.String value);
        partial void OnBlockIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SeatingChartId
        {
            get
            {
                return _SeatingChartId;
            }
            set
            {
                OnSeatingChartIdChanging(value);
                ReportPropertyChanging("SeatingChartId");
                _SeatingChartId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SeatingChartId");
                OnSeatingChartIdChanged();
            }
        }
        private global::System.String _SeatingChartId;
        partial void OnSeatingChartIdChanging(global::System.String value);
        partial void OnSeatingChartIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SeatNumber
        {
            get
            {
                return _SeatNumber;
            }
            set
            {
                OnSeatNumberChanging(value);
                ReportPropertyChanging("SeatNumber");
                _SeatNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SeatNumber");
                OnSeatNumberChanged();
            }
        }
        private global::System.String _SeatNumber;
        partial void OnSeatNumberChanging(global::System.String value);
        partial void OnSeatNumberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RowNumber
        {
            get
            {
                return _RowNumber;
            }
            set
            {
                OnRowNumberChanging(value);
                ReportPropertyChanging("RowNumber");
                _RowNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RowNumber");
                OnRowNumberChanged();
            }
        }
        private global::System.String _RowNumber;
        partial void OnRowNumberChanging(global::System.String value);
        partial void OnRowNumberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnNumber
        {
            get
            {
                return _ColumnNumber;
            }
            set
            {
                OnColumnNumberChanging(value);
                ReportPropertyChanging("ColumnNumber");
                _ColumnNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColumnNumber");
                OnColumnNumberChanged();
            }
        }
        private global::System.String _ColumnNumber;
        partial void OnColumnNumberChanging(global::System.String value);
        partial void OnColumnNumberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Xaxis
        {
            get
            {
                return _Xaxis;
            }
            set
            {
                OnXaxisChanging(value);
                ReportPropertyChanging("Xaxis");
                _Xaxis = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Xaxis");
                OnXaxisChanged();
            }
        }
        private Nullable<global::System.Int32> _Xaxis;
        partial void OnXaxisChanging(Nullable<global::System.Int32> value);
        partial void OnXaxisChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Yaxis
        {
            get
            {
                return _Yaxis;
            }
            set
            {
                OnYaxisChanging(value);
                ReportPropertyChanging("Yaxis");
                _Yaxis = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Yaxis");
                OnYaxisChanged();
            }
        }
        private Nullable<global::System.Int32> _Yaxis;
        partial void OnYaxisChanging(Nullable<global::System.Int32> value);
        partial void OnYaxisChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Height
        {
            get
            {
                return _Height;
            }
            set
            {
                OnHeightChanging(value);
                ReportPropertyChanging("Height");
                _Height = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Height");
                OnHeightChanged();
            }
        }
        private Nullable<global::System.Int32> _Height;
        partial void OnHeightChanging(Nullable<global::System.Int32> value);
        partial void OnHeightChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private Nullable<global::System.Int32> _Width;
        partial void OnWidthChanging(Nullable<global::System.Int32> value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SeatType
        {
            get
            {
                return _SeatType;
            }
            set
            {
                OnSeatTypeChanging(value);
                ReportPropertyChanging("SeatType");
                _SeatType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SeatType");
                OnSeatTypeChanged();
            }
        }
        private global::System.String _SeatType;
        partial void OnSeatTypeChanging(global::System.String value);
        partial void OnSeatTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SeatGroup
        {
            get
            {
                return _SeatGroup;
            }
            set
            {
                OnSeatGroupChanging(value);
                ReportPropertyChanging("SeatGroup");
                _SeatGroup = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SeatGroup");
                OnSeatGroupChanged();
            }
        }
        private global::System.String _SeatGroup;
        partial void OnSeatGroupChanging(global::System.String value);
        partial void OnSeatGroupChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Capacity
        {
            get
            {
                return _Capacity;
            }
            set
            {
                OnCapacityChanging(value);
                ReportPropertyChanging("Capacity");
                _Capacity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Capacity");
                OnCapacityChanged();
            }
        }
        private Nullable<global::System.Int32> _Capacity;
        partial void OnCapacityChanging(Nullable<global::System.Int32> value);
        partial void OnCapacityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Property
        {
            get
            {
                return _Property;
            }
            set
            {
                OnPropertyChanging(value);
                ReportPropertyChanging("Property");
                _Property = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Property");
                OnPropertyChanged();
            }
        }
        private global::System.String _Property;
        partial void OnPropertyChanging(global::System.String value);
        partial void OnPropertyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Seat2Block", "Block")]
        public Block Block
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Block>("FlamingoModel.FK_Seat2Block", "Block").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Block>("FlamingoModel.FK_Seat2Block", "Block").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Block> BlockReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Block>("FlamingoModel.FK_Seat2Block", "Block");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Block>("FlamingoModel.FK_Seat2Block", "Block", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Seat2SeatingChart", "SeatingChart")]
        public SeatingChart SeatingChart
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SeatingChart>("FlamingoModel.FK_Seat2SeatingChart", "SeatingChart").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SeatingChart>("FlamingoModel.FK_Seat2SeatingChart", "SeatingChart").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SeatingChart> SeatingChartReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SeatingChart>("FlamingoModel.FK_Seat2SeatingChart", "SeatingChart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SeatingChart>("FlamingoModel.FK_Seat2SeatingChart", "SeatingChart", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_SeatSataus2Seat", "SeatStatus")]
        public EntityCollection<SeatStatus> SeatStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SeatStatus>("FlamingoModel.FK_SeatSataus2Seat", "SeatStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SeatStatus>("FlamingoModel.FK_SeatSataus2Seat", "SeatStatus", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="SeatingChart")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SeatingChart : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 SeatingChart 对象。
        /// </summary>
        /// <param name="seatingChartId">SeatingChartId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static SeatingChart CreateSeatingChart(global::System.String seatingChartId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            SeatingChart seatingChart = new SeatingChart();
            seatingChart.SeatingChartId = seatingChartId;
            seatingChart.Created = created;
            seatingChart.Updated = updated;
            seatingChart.ActiveFlag = activeFlag;
            return seatingChart;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SeatingChartId
        {
            get
            {
                return _SeatingChartId;
            }
            set
            {
                if (_SeatingChartId != value)
                {
                    OnSeatingChartIdChanging(value);
                    ReportPropertyChanging("SeatingChartId");
                    _SeatingChartId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SeatingChartId");
                    OnSeatingChartIdChanged();
                }
            }
        }
        private global::System.String _SeatingChartId;
        partial void OnSeatingChartIdChanging(global::System.String value);
        partial void OnSeatingChartIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HallId
        {
            get
            {
                return _HallId;
            }
            set
            {
                OnHallIdChanging(value);
                ReportPropertyChanging("HallId");
                _HallId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HallId");
                OnHallIdChanged();
            }
        }
        private global::System.String _HallId;
        partial void OnHallIdChanging(global::System.String value);
        partial void OnHallIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SeatingChartName
        {
            get
            {
                return _SeatingChartName;
            }
            set
            {
                OnSeatingChartNameChanging(value);
                ReportPropertyChanging("SeatingChartName");
                _SeatingChartName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SeatingChartName");
                OnSeatingChartNameChanged();
            }
        }
        private global::System.String _SeatingChartName;
        partial void OnSeatingChartNameChanging(global::System.String value);
        partial void OnSeatingChartNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private Nullable<global::System.Int32> _Level;
        partial void OnLevelChanging(Nullable<global::System.Int32> value);
        partial void OnLevelChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Seats
        {
            get
            {
                return _Seats;
            }
            set
            {
                OnSeatsChanging(value);
                ReportPropertyChanging("Seats");
                _Seats = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Seats");
                OnSeatsChanged();
            }
        }
        private Nullable<global::System.Int32> _Seats;
        partial void OnSeatsChanging(Nullable<global::System.Int32> value);
        partial void OnSeatsChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Rows
        {
            get
            {
                return _Rows;
            }
            set
            {
                OnRowsChanging(value);
                ReportPropertyChanging("Rows");
                _Rows = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rows");
                OnRowsChanged();
            }
        }
        private Nullable<global::System.Int32> _Rows;
        partial void OnRowsChanging(Nullable<global::System.Int32> value);
        partial void OnRowsChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Columns
        {
            get
            {
                return _Columns;
            }
            set
            {
                OnColumnsChanging(value);
                ReportPropertyChanging("Columns");
                _Columns = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Columns");
                OnColumnsChanged();
            }
        }
        private Nullable<global::System.Int32> _Columns;
        partial void OnColumnsChanging(Nullable<global::System.Int32> value);
        partial void OnColumnsChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RowSpace
        {
            get
            {
                return _RowSpace;
            }
            set
            {
                OnRowSpaceChanging(value);
                ReportPropertyChanging("RowSpace");
                _RowSpace = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RowSpace");
                OnRowSpaceChanged();
            }
        }
        private Nullable<global::System.Int32> _RowSpace;
        partial void OnRowSpaceChanging(Nullable<global::System.Int32> value);
        partial void OnRowSpaceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ColumnSpace
        {
            get
            {
                return _ColumnSpace;
            }
            set
            {
                OnColumnSpaceChanging(value);
                ReportPropertyChanging("ColumnSpace");
                _ColumnSpace = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ColumnSpace");
                OnColumnSpaceChanged();
            }
        }
        private Nullable<global::System.Int32> _ColumnSpace;
        partial void OnColumnSpaceChanging(Nullable<global::System.Int32> value);
        partial void OnColumnSpaceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Shape
        {
            get
            {
                return _Shape;
            }
            set
            {
                OnShapeChanging(value);
                ReportPropertyChanging("Shape");
                _Shape = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Shape");
                OnShapeChanged();
            }
        }
        private global::System.String _Shape;
        partial void OnShapeChanging(global::System.String value);
        partial void OnShapeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BgColour
        {
            get
            {
                return _BgColour;
            }
            set
            {
                OnBgColourChanging(value);
                ReportPropertyChanging("BgColour");
                _BgColour = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BgColour");
                OnBgColourChanged();
            }
        }
        private global::System.String _BgColour;
        partial void OnBgColourChanging(global::System.String value);
        partial void OnBgColourChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Rotation
        {
            get
            {
                return _Rotation;
            }
            set
            {
                OnRotationChanging(value);
                ReportPropertyChanging("Rotation");
                _Rotation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rotation");
                OnRotationChanged();
            }
        }
        private Nullable<global::System.Int32> _Rotation;
        partial void OnRotationChanging(Nullable<global::System.Int32> value);
        partial void OnRotationChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Thumbnail
        {
            get
            {
                return StructuralObject.GetValidValue(_Thumbnail);
            }
            set
            {
                OnThumbnailChanging(value);
                ReportPropertyChanging("Thumbnail");
                _Thumbnail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Thumbnail");
                OnThumbnailChanged();
            }
        }
        private global::System.Byte[] _Thumbnail;
        partial void OnThumbnailChanging(global::System.Byte[] value);
        partial void OnThumbnailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Block2SeatingChart", "Block")]
        public EntityCollection<Block> Block
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Block>("FlamingoModel.FK_Block2SeatingChart", "Block");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Block>("FlamingoModel.FK_Block2SeatingChart", "Block", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_SeatingChart2Hall", "Hall")]
        public Hall Hall
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hall>("FlamingoModel.FK_SeatingChart2Hall", "Hall").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hall>("FlamingoModel.FK_SeatingChart2Hall", "Hall").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Hall> HallReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hall>("FlamingoModel.FK_SeatingChart2Hall", "Hall");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Hall>("FlamingoModel.FK_SeatingChart2Hall", "Hall", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Seat2SeatingChart", "Seat")]
        public EntityCollection<Seat> Seat
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Seat>("FlamingoModel.FK_Seat2SeatingChart", "Seat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Seat>("FlamingoModel.FK_Seat2SeatingChart", "Seat", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="SeatStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SeatStatus : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 SeatStatus 对象。
        /// </summary>
        /// <param name="seatStatusId">SeatStatusId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static SeatStatus CreateSeatStatus(global::System.String seatStatusId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            SeatStatus seatStatus = new SeatStatus();
            seatStatus.SeatStatusId = seatStatusId;
            seatStatus.Created = created;
            seatStatus.Updated = updated;
            seatStatus.ActiveFlag = activeFlag;
            return seatStatus;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SeatStatusId
        {
            get
            {
                return _SeatStatusId;
            }
            set
            {
                if (_SeatStatusId != value)
                {
                    OnSeatStatusIdChanging(value);
                    ReportPropertyChanging("SeatStatusId");
                    _SeatStatusId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SeatStatusId");
                    OnSeatStatusIdChanged();
                }
            }
        }
        private global::System.String _SeatStatusId;
        partial void OnSeatStatusIdChanging(global::System.String value);
        partial void OnSeatStatusIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SeatId
        {
            get
            {
                return _SeatId;
            }
            set
            {
                OnSeatIdChanging(value);
                ReportPropertyChanging("SeatId");
                _SeatId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SeatId");
                OnSeatIdChanged();
            }
        }
        private global::System.String _SeatId;
        partial void OnSeatIdChanging(global::System.String value);
        partial void OnSeatIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShowPlanId
        {
            get
            {
                return _ShowPlanId;
            }
            set
            {
                OnShowPlanIdChanging(value);
                ReportPropertyChanging("ShowPlanId");
                _ShowPlanId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShowPlanId");
                OnShowPlanIdChanged();
            }
        }
        private global::System.String _ShowPlanId;
        partial void OnShowPlanIdChanging(global::System.String value);
        partial void OnShowPlanIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TicketingState
        {
            get
            {
                return _TicketingState;
            }
            set
            {
                OnTicketingStateChanging(value);
                ReportPropertyChanging("TicketingState");
                _TicketingState = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TicketingState");
                OnTicketingStateChanged();
            }
        }
        private global::System.String _TicketingState;
        partial void OnTicketingStateChanging(global::System.String value);
        partial void OnTicketingStateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LockedBy
        {
            get
            {
                return _LockedBy;
            }
            set
            {
                OnLockedByChanging(value);
                ReportPropertyChanging("LockedBy");
                _LockedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LockedBy");
                OnLockedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LockedBy;
        partial void OnLockedByChanging(Nullable<global::System.Int32> value);
        partial void OnLockedByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SoldBy
        {
            get
            {
                return _SoldBy;
            }
            set
            {
                OnSoldByChanging(value);
                ReportPropertyChanging("SoldBy");
                _SoldBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SoldBy");
                OnSoldByChanged();
            }
        }
        private Nullable<global::System.Int32> _SoldBy;
        partial void OnSoldByChanging(Nullable<global::System.Int32> value);
        partial void OnSoldByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Reservation2SeatStatus", "Reservation")]
        public EntityCollection<Reservation> Reservation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reservation>("FlamingoModel.FK_Reservation2SeatStatus", "Reservation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reservation>("FlamingoModel.FK_Reservation2SeatStatus", "Reservation", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_SeatSataus2Seat", "Seat")]
        public Seat Seat
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Seat>("FlamingoModel.FK_SeatSataus2Seat", "Seat").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Seat>("FlamingoModel.FK_SeatSataus2Seat", "Seat").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Seat> SeatReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Seat>("FlamingoModel.FK_SeatSataus2Seat", "Seat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Seat>("FlamingoModel.FK_SeatSataus2Seat", "Seat", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_SeatStatus2ShowPlan", "ShowPlan")]
        public ShowPlan ShowPlan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShowPlan>("FlamingoModel.FK_SeatStatus2ShowPlan", "ShowPlan").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShowPlan>("FlamingoModel.FK_SeatStatus2ShowPlan", "ShowPlan").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ShowPlan> ShowPlanReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShowPlan>("FlamingoModel.FK_SeatStatus2ShowPlan", "ShowPlan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ShowPlan>("FlamingoModel.FK_SeatStatus2ShowPlan", "ShowPlan", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Ticket2SeatStatus", "Ticket")]
        public EntityCollection<Ticket> Ticket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ticket>("FlamingoModel.FK_Ticket2SeatStatus", "Ticket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ticket>("FlamingoModel.FK_Ticket2SeatStatus", "Ticket", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="ShowPlan")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ShowPlan : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ShowPlan 对象。
        /// </summary>
        /// <param name="showPlanId">ShowPlanId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static ShowPlan CreateShowPlan(global::System.String showPlanId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            ShowPlan showPlan = new ShowPlan();
            showPlan.ShowPlanId = showPlanId;
            showPlan.Created = created;
            showPlan.Updated = updated;
            showPlan.ActiveFlag = activeFlag;
            return showPlan;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShowPlanId
        {
            get
            {
                return _ShowPlanId;
            }
            set
            {
                if (_ShowPlanId != value)
                {
                    OnShowPlanIdChanging(value);
                    ReportPropertyChanging("ShowPlanId");
                    _ShowPlanId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ShowPlanId");
                    OnShowPlanIdChanged();
                }
            }
        }
        private global::System.String _ShowPlanId;
        partial void OnShowPlanIdChanging(global::System.String value);
        partial void OnShowPlanIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DailyPlanId
        {
            get
            {
                return _DailyPlanId;
            }
            set
            {
                OnDailyPlanIdChanging(value);
                ReportPropertyChanging("DailyPlanId");
                _DailyPlanId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DailyPlanId");
                OnDailyPlanIdChanged();
            }
        }
        private global::System.String _DailyPlanId;
        partial void OnDailyPlanIdChanging(global::System.String value);
        partial void OnDailyPlanIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ShowTypeId
        {
            get
            {
                return _ShowTypeId;
            }
            set
            {
                OnShowTypeIdChanging(value);
                ReportPropertyChanging("ShowTypeId");
                _ShowTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShowTypeId");
                OnShowTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ShowTypeId;
        partial void OnShowTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnShowTypeIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FareSettingId
        {
            get
            {
                return _FareSettingId;
            }
            set
            {
                OnFareSettingIdChanging(value);
                ReportPropertyChanging("FareSettingId");
                _FareSettingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FareSettingId");
                OnFareSettingIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FareSettingId;
        partial void OnFareSettingIdChanging(Nullable<global::System.Int32> value);
        partial void OnFareSettingIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HallId
        {
            get
            {
                return _HallId;
            }
            set
            {
                OnHallIdChanging(value);
                ReportPropertyChanging("HallId");
                _HallId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HallId");
                OnHallIdChanged();
            }
        }
        private global::System.String _HallId;
        partial void OnHallIdChanging(global::System.String value);
        partial void OnHallIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FilmId
        {
            get
            {
                return _FilmId;
            }
            set
            {
                OnFilmIdChanging(value);
                ReportPropertyChanging("FilmId");
                _FilmId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FilmId");
                OnFilmIdChanged();
            }
        }
        private global::System.String _FilmId;
        partial void OnFilmIdChanging(global::System.String value);
        partial void OnFilmIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DiscountTypeId
        {
            get
            {
                return _DiscountTypeId;
            }
            set
            {
                OnDiscountTypeIdChanging(value);
                ReportPropertyChanging("DiscountTypeId");
                _DiscountTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscountTypeId");
                OnDiscountTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DiscountTypeId;
        partial void OnDiscountTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnDiscountTypeIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShowPlanName
        {
            get
            {
                return _ShowPlanName;
            }
            set
            {
                OnShowPlanNameChanging(value);
                ReportPropertyChanging("ShowPlanName");
                _ShowPlanName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShowPlanName");
                OnShowPlanNameChanged();
            }
        }
        private global::System.String _ShowPlanName;
        partial void OnShowPlanNameChanging(global::System.String value);
        partial void OnShowPlanNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Film_FilmModeId
        {
            get
            {
                return _Film_FilmModeId;
            }
            set
            {
                OnFilm_FilmModeIdChanging(value);
                ReportPropertyChanging("Film_FilmModeId");
                _Film_FilmModeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Film_FilmModeId");
                OnFilm_FilmModeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _Film_FilmModeId;
        partial void OnFilm_FilmModeIdChanging(Nullable<global::System.Int32> value);
        partial void OnFilm_FilmModeIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private Nullable<global::System.Int32> _Position;
        partial void OnPositionChanging(Nullable<global::System.Int32> value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartTime;
        partial void OnStartTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FilmLength
        {
            get
            {
                return _FilmLength;
            }
            set
            {
                OnFilmLengthChanging(value);
                ReportPropertyChanging("FilmLength");
                _FilmLength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FilmLength");
                OnFilmLengthChanged();
            }
        }
        private Nullable<global::System.Int32> _FilmLength;
        partial void OnFilmLengthChanging(Nullable<global::System.Int32> value);
        partial void OnFilmLengthChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Timespan
        {
            get
            {
                return _Timespan;
            }
            set
            {
                OnTimespanChanging(value);
                ReportPropertyChanging("Timespan");
                _Timespan = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Timespan");
                OnTimespanChanged();
            }
        }
        private Nullable<global::System.Int32> _Timespan;
        partial void OnTimespanChanging(Nullable<global::System.Int32> value);
        partial void OnTimespanChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> Ratio
        {
            get
            {
                return _Ratio;
            }
            set
            {
                OnRatioChanging(value);
                ReportPropertyChanging("Ratio");
                _Ratio = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ratio");
                OnRatioChanged();
            }
        }
        private Nullable<global::System.Single> _Ratio;
        partial void OnRatioChanging(Nullable<global::System.Single> value);
        partial void OnRatioChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> LowestPrice
        {
            get
            {
                return _LowestPrice;
            }
            set
            {
                OnLowestPriceChanging(value);
                ReportPropertyChanging("LowestPrice");
                _LowestPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LowestPrice");
                OnLowestPriceChanged();
            }
        }
        private Nullable<global::System.Single> _LowestPrice;
        partial void OnLowestPriceChanging(Nullable<global::System.Single> value);
        partial void OnLowestPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SinglePrice
        {
            get
            {
                return _SinglePrice;
            }
            set
            {
                OnSinglePriceChanging(value);
                ReportPropertyChanging("SinglePrice");
                _SinglePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SinglePrice");
                OnSinglePriceChanged();
            }
        }
        private Nullable<global::System.Single> _SinglePrice;
        partial void OnSinglePriceChanging(Nullable<global::System.Single> value);
        partial void OnSinglePriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> DoublePrice
        {
            get
            {
                return _DoublePrice;
            }
            set
            {
                OnDoublePriceChanging(value);
                ReportPropertyChanging("DoublePrice");
                _DoublePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoublePrice");
                OnDoublePriceChanged();
            }
        }
        private Nullable<global::System.Single> _DoublePrice;
        partial void OnDoublePriceChanging(Nullable<global::System.Single> value);
        partial void OnDoublePriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> BoxPrice
        {
            get
            {
                return _BoxPrice;
            }
            set
            {
                OnBoxPriceChanging(value);
                ReportPropertyChanging("BoxPrice");
                _BoxPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoxPrice");
                OnBoxPriceChanged();
            }
        }
        private Nullable<global::System.Single> _BoxPrice;
        partial void OnBoxPriceChanging(Nullable<global::System.Single> value);
        partial void OnBoxPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> StudentPrice
        {
            get
            {
                return _StudentPrice;
            }
            set
            {
                OnStudentPriceChanging(value);
                ReportPropertyChanging("StudentPrice");
                _StudentPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudentPrice");
                OnStudentPriceChanged();
            }
        }
        private Nullable<global::System.Single> _StudentPrice;
        partial void OnStudentPriceChanging(Nullable<global::System.Single> value);
        partial void OnStudentPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> GroupPrice
        {
            get
            {
                return _GroupPrice;
            }
            set
            {
                OnGroupPriceChanging(value);
                ReportPropertyChanging("GroupPrice");
                _GroupPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupPrice");
                OnGroupPriceChanged();
            }
        }
        private Nullable<global::System.Single> _GroupPrice;
        partial void OnGroupPriceChanging(Nullable<global::System.Single> value);
        partial void OnGroupPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> MemberPrice
        {
            get
            {
                return _MemberPrice;
            }
            set
            {
                OnMemberPriceChanging(value);
                ReportPropertyChanging("MemberPrice");
                _MemberPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberPrice");
                OnMemberPriceChanged();
            }
        }
        private Nullable<global::System.Single> _MemberPrice;
        partial void OnMemberPriceChanging(Nullable<global::System.Single> value);
        partial void OnMemberPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> DiscountPrice
        {
            get
            {
                return _DiscountPrice;
            }
            set
            {
                OnDiscountPriceChanging(value);
                ReportPropertyChanging("DiscountPrice");
                _DiscountPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscountPrice");
                OnDiscountPriceChanged();
            }
        }
        private Nullable<global::System.Single> _DiscountPrice;
        partial void OnDiscountPriceChanging(Nullable<global::System.Single> value);
        partial void OnDiscountPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ShowStatus
        {
            get
            {
                return _ShowStatus;
            }
            set
            {
                OnShowStatusChanging(value);
                ReportPropertyChanging("ShowStatus");
                _ShowStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShowStatus");
                OnShowStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _ShowStatus;
        partial void OnShowStatusChanging(Nullable<global::System.Int32> value);
        partial void OnShowStatusChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ShowGroup
        {
            get
            {
                return _ShowGroup;
            }
            set
            {
                OnShowGroupChanging(value);
                ReportPropertyChanging("ShowGroup");
                _ShowGroup = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShowGroup");
                OnShowGroupChanged();
            }
        }
        private Nullable<global::System.Int32> _ShowGroup;
        partial void OnShowGroupChanging(Nullable<global::System.Int32> value);
        partial void OnShowGroupChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDiscounted
        {
            get
            {
                return _IsDiscounted;
            }
            set
            {
                OnIsDiscountedChanging(value);
                ReportPropertyChanging("IsDiscounted");
                _IsDiscounted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDiscounted");
                OnIsDiscountedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDiscounted;
        partial void OnIsDiscountedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDiscountedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsCheckingNumber
        {
            get
            {
                return _IsCheckingNumber;
            }
            set
            {
                OnIsCheckingNumberChanging(value);
                ReportPropertyChanging("IsCheckingNumber");
                _IsCheckingNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCheckingNumber");
                OnIsCheckingNumberChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsCheckingNumber;
        partial void OnIsCheckingNumberChanging(Nullable<global::System.Boolean> value);
        partial void OnIsCheckingNumberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsTicketChecking
        {
            get
            {
                return _IsTicketChecking;
            }
            set
            {
                OnIsTicketCheckingChanging(value);
                ReportPropertyChanging("IsTicketChecking");
                _IsTicketChecking = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTicketChecking");
                OnIsTicketCheckingChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsTicketChecking;
        partial void OnIsTicketCheckingChanging(Nullable<global::System.Boolean> value);
        partial void OnIsTicketCheckingChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsOnlineTicketing
        {
            get
            {
                return _IsOnlineTicketing;
            }
            set
            {
                OnIsOnlineTicketingChanging(value);
                ReportPropertyChanging("IsOnlineTicketing");
                _IsOnlineTicketing = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOnlineTicketing");
                OnIsOnlineTicketingChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsOnlineTicketing;
        partial void OnIsOnlineTicketingChanging(Nullable<global::System.Boolean> value);
        partial void OnIsOnlineTicketingChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsApproved;
        partial void OnIsApprovedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSalable
        {
            get
            {
                return _IsSalable;
            }
            set
            {
                OnIsSalableChanging(value);
                ReportPropertyChanging("IsSalable");
                _IsSalable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSalable");
                OnIsSalableChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSalable;
        partial void OnIsSalableChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSalableChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsLocked
        {
            get
            {
                return _IsLocked;
            }
            set
            {
                OnIsLockedChanging(value);
                ReportPropertyChanging("IsLocked");
                _IsLocked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLocked");
                OnIsLockedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsLocked;
        partial void OnIsLockedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsLockedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Stagehand
        {
            get
            {
                return _Stagehand;
            }
            set
            {
                OnStagehandChanging(value);
                ReportPropertyChanging("Stagehand");
                _Stagehand = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stagehand");
                OnStagehandChanged();
            }
        }
        private Nullable<global::System.Int32> _Stagehand;
        partial void OnStagehandChanging(Nullable<global::System.Int32> value);
        partial void OnStagehandChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Projectionist
        {
            get
            {
                return _Projectionist;
            }
            set
            {
                OnProjectionistChanging(value);
                ReportPropertyChanging("Projectionist");
                _Projectionist = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Projectionist");
                OnProjectionistChanged();
            }
        }
        private Nullable<global::System.Int32> _Projectionist;
        partial void OnProjectionistChanging(Nullable<global::System.Int32> value);
        partial void OnProjectionistChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_BlockPrice2ShowPlan", "BlockPrice")]
        public EntityCollection<BlockPrice> BlockPrice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BlockPrice>("FlamingoModel.FK_BlockPrice2ShowPlan", "BlockPrice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BlockPrice>("FlamingoModel.FK_BlockPrice2ShowPlan", "BlockPrice", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_ShowPlan2DailyPlan", "DailyPlan")]
        public DailyPlan DailyPlan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DailyPlan>("FlamingoModel.FK_ShowPlan2DailyPlan", "DailyPlan").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DailyPlan>("FlamingoModel.FK_ShowPlan2DailyPlan", "DailyPlan").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DailyPlan> DailyPlanReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DailyPlan>("FlamingoModel.FK_ShowPlan2DailyPlan", "DailyPlan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DailyPlan>("FlamingoModel.FK_ShowPlan2DailyPlan", "DailyPlan", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_ShowPlan2DiscountType", "DiscountType")]
        public DiscountType DiscountType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DiscountType>("FlamingoModel.FK_ShowPlan2DiscountType", "DiscountType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DiscountType>("FlamingoModel.FK_ShowPlan2DiscountType", "DiscountType").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DiscountType> DiscountTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DiscountType>("FlamingoModel.FK_ShowPlan2DiscountType", "DiscountType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DiscountType>("FlamingoModel.FK_ShowPlan2DiscountType", "DiscountType", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_ShowPlan2FareSetting", "FareSetting")]
        public FareSetting FareSetting
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FareSetting>("FlamingoModel.FK_ShowPlan2FareSetting", "FareSetting").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FareSetting>("FlamingoModel.FK_ShowPlan2FareSetting", "FareSetting").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FareSetting> FareSettingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FareSetting>("FlamingoModel.FK_ShowPlan2FareSetting", "FareSetting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FareSetting>("FlamingoModel.FK_ShowPlan2FareSetting", "FareSetting", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_ShowPlan2Film", "Film")]
        public Film Film
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Film>("FlamingoModel.FK_ShowPlan2Film", "Film").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Film>("FlamingoModel.FK_ShowPlan2Film", "Film").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Film> FilmReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Film>("FlamingoModel.FK_ShowPlan2Film", "Film");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Film>("FlamingoModel.FK_ShowPlan2Film", "Film", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_ShowPlan2Hall", "Hall")]
        public Hall Hall
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hall>("FlamingoModel.FK_ShowPlan2Hall", "Hall").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hall>("FlamingoModel.FK_ShowPlan2Hall", "Hall").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Hall> HallReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Hall>("FlamingoModel.FK_ShowPlan2Hall", "Hall");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Hall>("FlamingoModel.FK_ShowPlan2Hall", "Hall", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_SeatStatus2ShowPlan", "SeatStatus")]
        public EntityCollection<SeatStatus> SeatStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SeatStatus>("FlamingoModel.FK_SeatStatus2ShowPlan", "SeatStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SeatStatus>("FlamingoModel.FK_SeatStatus2ShowPlan", "SeatStatus", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_ShowPlan2ShowType", "ShowType")]
        public ShowType ShowType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShowType>("FlamingoModel.FK_ShowPlan2ShowType", "ShowType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShowType>("FlamingoModel.FK_ShowPlan2ShowType", "ShowType").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ShowType> ShowTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShowType>("FlamingoModel.FK_ShowPlan2ShowType", "ShowType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ShowType>("FlamingoModel.FK_ShowPlan2ShowType", "ShowType", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Ticket2ShowPlan", "Ticket")]
        public EntityCollection<Ticket> Ticket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ticket>("FlamingoModel.FK_Ticket2ShowPlan", "Ticket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ticket>("FlamingoModel.FK_Ticket2ShowPlan", "Ticket", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="ShowType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ShowType : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ShowType 对象。
        /// </summary>
        /// <param name="showTypeId">ShowTypeId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static ShowType CreateShowType(global::System.Int32 showTypeId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            ShowType showType = new ShowType();
            showType.ShowTypeId = showTypeId;
            showType.Created = created;
            showType.Updated = updated;
            showType.ActiveFlag = activeFlag;
            return showType;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ShowTypeId
        {
            get
            {
                return _ShowTypeId;
            }
            set
            {
                if (_ShowTypeId != value)
                {
                    OnShowTypeIdChanging(value);
                    ReportPropertyChanging("ShowTypeId");
                    _ShowTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ShowTypeId");
                    OnShowTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _ShowTypeId;
        partial void OnShowTypeIdChanging(global::System.Int32 value);
        partial void OnShowTypeIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShowTypeName
        {
            get
            {
                return _ShowTypeName;
            }
            set
            {
                OnShowTypeNameChanging(value);
                ReportPropertyChanging("ShowTypeName");
                _ShowTypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShowTypeName");
                OnShowTypeNameChanged();
            }
        }
        private global::System.String _ShowTypeName;
        partial void OnShowTypeNameChanging(global::System.String value);
        partial void OnShowTypeNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_ShowPlan2ShowType", "ShowPlan")]
        public EntityCollection<ShowPlan> ShowPlan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ShowPlan>("FlamingoModel.FK_ShowPlan2ShowType", "ShowPlan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ShowPlan>("FlamingoModel.FK_ShowPlan2ShowType", "ShowPlan", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="Tax")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tax : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Tax 对象。
        /// </summary>
        /// <param name="taxId">TaxId 属性的初始值。</param>
        /// <param name="theaterId">TheaterId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static Tax CreateTax(global::System.Int32 taxId, global::System.String theaterId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            Tax tax = new Tax();
            tax.TaxId = taxId;
            tax.TheaterId = theaterId;
            tax.Created = created;
            tax.Updated = updated;
            tax.ActiveFlag = activeFlag;
            return tax;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaxId
        {
            get
            {
                return _TaxId;
            }
            set
            {
                if (_TaxId != value)
                {
                    OnTaxIdChanging(value);
                    ReportPropertyChanging("TaxId");
                    _TaxId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TaxId");
                    OnTaxIdChanged();
                }
            }
        }
        private global::System.Int32 _TaxId;
        partial void OnTaxIdChanging(global::System.Int32 value);
        partial void OnTaxIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TheaterId
        {
            get
            {
                return _TheaterId;
            }
            set
            {
                OnTheaterIdChanging(value);
                ReportPropertyChanging("TheaterId");
                _TheaterId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TheaterId");
                OnTheaterIdChanged();
            }
        }
        private global::System.String _TheaterId;
        partial void OnTheaterIdChanging(global::System.String value);
        partial void OnTheaterIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaxType
        {
            get
            {
                return _TaxType;
            }
            set
            {
                OnTaxTypeChanging(value);
                ReportPropertyChanging("TaxType");
                _TaxType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TaxType");
                OnTaxTypeChanged();
            }
        }
        private global::System.String _TaxType;
        partial void OnTaxTypeChanging(global::System.String value);
        partial void OnTaxTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> TaxRate
        {
            get
            {
                return _TaxRate;
            }
            set
            {
                OnTaxRateChanging(value);
                ReportPropertyChanging("TaxRate");
                _TaxRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxRate");
                OnTaxRateChanged();
            }
        }
        private Nullable<global::System.Single> _TaxRate;
        partial void OnTaxRateChanging(Nullable<global::System.Single> value);
        partial void OnTaxRateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ChargeMethod
        {
            get
            {
                return _ChargeMethod;
            }
            set
            {
                OnChargeMethodChanging(value);
                ReportPropertyChanging("ChargeMethod");
                _ChargeMethod = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ChargeMethod");
                OnChargeMethodChanged();
            }
        }
        private global::System.String _ChargeMethod;
        partial void OnChargeMethodChanging(global::System.String value);
        partial void OnChargeMethodChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Tax2Theater", "Theater")]
        public Theater Theater
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theater>("FlamingoModel.FK_Tax2Theater", "Theater").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theater>("FlamingoModel.FK_Tax2Theater", "Theater").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Theater> TheaterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theater>("FlamingoModel.FK_Tax2Theater", "Theater");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Theater>("FlamingoModel.FK_Tax2Theater", "Theater", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="Template")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Template : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Template 对象。
        /// </summary>
        /// <param name="templateId">TemplateId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static Template CreateTemplate(global::System.Int32 templateId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            Template template = new Template();
            template.TemplateId = templateId;
            template.Created = created;
            template.Updated = updated;
            template.ActiveFlag = activeFlag;
            return template;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TemplateId
        {
            get
            {
                return _TemplateId;
            }
            set
            {
                if (_TemplateId != value)
                {
                    OnTemplateIdChanging(value);
                    ReportPropertyChanging("TemplateId");
                    _TemplateId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TemplateId");
                    OnTemplateIdChanged();
                }
            }
        }
        private global::System.Int32 _TemplateId;
        partial void OnTemplateIdChanging(global::System.Int32 value);
        partial void OnTemplateIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrintSettingId
        {
            get
            {
                return _PrintSettingId;
            }
            set
            {
                OnPrintSettingIdChanging(value);
                ReportPropertyChanging("PrintSettingId");
                _PrintSettingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrintSettingId");
                OnPrintSettingIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PrintSettingId;
        partial void OnPrintSettingIdChanging(Nullable<global::System.Int32> value);
        partial void OnPrintSettingIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TemplateName
        {
            get
            {
                return _TemplateName;
            }
            set
            {
                OnTemplateNameChanging(value);
                ReportPropertyChanging("TemplateName");
                _TemplateName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TemplateName");
                OnTemplateNameChanged();
            }
        }
        private global::System.String _TemplateName;
        partial void OnTemplateNameChanging(global::System.String value);
        partial void OnTemplateNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TemplateType
        {
            get
            {
                return _TemplateType;
            }
            set
            {
                OnTemplateTypeChanging(value);
                ReportPropertyChanging("TemplateType");
                _TemplateType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TemplateType");
                OnTemplateTypeChanged();
            }
        }
        private global::System.String _TemplateType;
        partial void OnTemplateTypeChanging(global::System.String value);
        partial void OnTemplateTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] BgImage
        {
            get
            {
                return StructuralObject.GetValidValue(_BgImage);
            }
            set
            {
                OnBgImageChanging(value);
                ReportPropertyChanging("BgImage");
                _BgImage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BgImage");
                OnBgImageChanged();
            }
        }
        private global::System.Byte[] _BgImage;
        partial void OnBgImageChanging(global::System.Byte[] value);
        partial void OnBgImageChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BgHeight
        {
            get
            {
                return _BgHeight;
            }
            set
            {
                OnBgHeightChanging(value);
                ReportPropertyChanging("BgHeight");
                _BgHeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BgHeight");
                OnBgHeightChanged();
            }
        }
        private Nullable<global::System.Int32> _BgHeight;
        partial void OnBgHeightChanging(Nullable<global::System.Int32> value);
        partial void OnBgHeightChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BgWidth
        {
            get
            {
                return _BgWidth;
            }
            set
            {
                OnBgWidthChanging(value);
                ReportPropertyChanging("BgWidth");
                _BgWidth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BgWidth");
                OnBgWidthChanged();
            }
        }
        private Nullable<global::System.Int32> _BgWidth;
        partial void OnBgWidthChanging(Nullable<global::System.Int32> value);
        partial void OnBgWidthChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Template2PrintSetting", "PrintSetting")]
        public PrintSetting PrintSetting
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrintSetting>("FlamingoModel.FK_Template2PrintSetting", "PrintSetting").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrintSetting>("FlamingoModel.FK_Template2PrintSetting", "PrintSetting").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PrintSetting> PrintSettingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrintSetting>("FlamingoModel.FK_Template2PrintSetting", "PrintSetting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PrintSetting>("FlamingoModel.FK_Template2PrintSetting", "PrintSetting", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_TemplateItem2Template_FK", "TemplateItem")]
        public EntityCollection<TemplateItem> TemplateItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TemplateItem>("FlamingoModel.FK_TemplateItem2Template_FK", "TemplateItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TemplateItem>("FlamingoModel.FK_TemplateItem2Template_FK", "TemplateItem", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Ticket2Template", "Ticket")]
        public EntityCollection<Ticket> Ticket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ticket>("FlamingoModel.FK_Ticket2Template", "Ticket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ticket>("FlamingoModel.FK_Ticket2Template", "Ticket", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="TemplateItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TemplateItem : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 TemplateItem 对象。
        /// </summary>
        /// <param name="templateItemId">TemplateItemId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static TemplateItem CreateTemplateItem(global::System.Int32 templateItemId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            TemplateItem templateItem = new TemplateItem();
            templateItem.TemplateItemId = templateItemId;
            templateItem.Created = created;
            templateItem.Updated = updated;
            templateItem.ActiveFlag = activeFlag;
            return templateItem;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TemplateItemId
        {
            get
            {
                return _TemplateItemId;
            }
            set
            {
                if (_TemplateItemId != value)
                {
                    OnTemplateItemIdChanging(value);
                    ReportPropertyChanging("TemplateItemId");
                    _TemplateItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TemplateItemId");
                    OnTemplateItemIdChanged();
                }
            }
        }
        private global::System.Int32 _TemplateItemId;
        partial void OnTemplateItemIdChanging(global::System.Int32 value);
        partial void OnTemplateItemIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TemplateId
        {
            get
            {
                return _TemplateId;
            }
            set
            {
                OnTemplateIdChanging(value);
                ReportPropertyChanging("TemplateId");
                _TemplateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TemplateId");
                OnTemplateIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TemplateId;
        partial void OnTemplateIdChanging(Nullable<global::System.Int32> value);
        partial void OnTemplateIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CommonItemId
        {
            get
            {
                return _CommonItemId;
            }
            set
            {
                OnCommonItemIdChanging(value);
                ReportPropertyChanging("CommonItemId");
                _CommonItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommonItemId");
                OnCommonItemIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CommonItemId;
        partial void OnCommonItemIdChanging(Nullable<global::System.Int32> value);
        partial void OnCommonItemIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TemplateItemName
        {
            get
            {
                return _TemplateItemName;
            }
            set
            {
                OnTemplateItemNameChanging(value);
                ReportPropertyChanging("TemplateItemName");
                _TemplateItemName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TemplateItemName");
                OnTemplateItemNameChanged();
            }
        }
        private global::System.String _TemplateItemName;
        partial void OnTemplateItemNameChanging(global::System.String value);
        partial void OnTemplateItemNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Xaxis
        {
            get
            {
                return _Xaxis;
            }
            set
            {
                OnXaxisChanging(value);
                ReportPropertyChanging("Xaxis");
                _Xaxis = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Xaxis");
                OnXaxisChanged();
            }
        }
        private Nullable<global::System.Int32> _Xaxis;
        partial void OnXaxisChanging(Nullable<global::System.Int32> value);
        partial void OnXaxisChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Yaxis
        {
            get
            {
                return _Yaxis;
            }
            set
            {
                OnYaxisChanging(value);
                ReportPropertyChanging("Yaxis");
                _Yaxis = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Yaxis");
                OnYaxisChanged();
            }
        }
        private Nullable<global::System.Int32> _Yaxis;
        partial void OnYaxisChanging(Nullable<global::System.Int32> value);
        partial void OnYaxisChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Font
        {
            get
            {
                return _Font;
            }
            set
            {
                OnFontChanging(value);
                ReportPropertyChanging("Font");
                _Font = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Font");
                OnFontChanged();
            }
        }
        private global::System.String _Font;
        partial void OnFontChanging(global::System.String value);
        partial void OnFontChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FontSize
        {
            get
            {
                return _FontSize;
            }
            set
            {
                OnFontSizeChanging(value);
                ReportPropertyChanging("FontSize");
                _FontSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FontSize");
                OnFontSizeChanged();
            }
        }
        private Nullable<global::System.Int32> _FontSize;
        partial void OnFontSizeChanging(Nullable<global::System.Int32> value);
        partial void OnFontSizeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FontColour
        {
            get
            {
                return _FontColour;
            }
            set
            {
                OnFontColourChanging(value);
                ReportPropertyChanging("FontColour");
                _FontColour = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FontColour");
                OnFontColourChanged();
            }
        }
        private global::System.String _FontColour;
        partial void OnFontColourChanging(global::System.String value);
        partial void OnFontColourChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DataItem
        {
            get
            {
                return _DataItem;
            }
            set
            {
                OnDataItemChanging(value);
                ReportPropertyChanging("DataItem");
                _DataItem = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataItem");
                OnDataItemChanged();
            }
        }
        private global::System.String _DataItem;
        partial void OnDataItemChanging(global::System.String value);
        partial void OnDataItemChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsOnTemplate
        {
            get
            {
                return _IsOnTemplate;
            }
            set
            {
                OnIsOnTemplateChanging(value);
                ReportPropertyChanging("IsOnTemplate");
                _IsOnTemplate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOnTemplate");
                OnIsOnTemplateChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsOnTemplate;
        partial void OnIsOnTemplateChanging(Nullable<global::System.Boolean> value);
        partial void OnIsOnTemplateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_TemplateItem2CommonItem_FK", "CommonItem")]
        public CommonItem CommonItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommonItem>("FlamingoModel.FK_TemplateItem2CommonItem_FK", "CommonItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommonItem>("FlamingoModel.FK_TemplateItem2CommonItem_FK", "CommonItem").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CommonItem> CommonItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommonItem>("FlamingoModel.FK_TemplateItem2CommonItem_FK", "CommonItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CommonItem>("FlamingoModel.FK_TemplateItem2CommonItem_FK", "CommonItem", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_TemplateItem2Template_FK", "Template")]
        public Template Template
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Template>("FlamingoModel.FK_TemplateItem2Template_FK", "Template").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Template>("FlamingoModel.FK_TemplateItem2Template_FK", "Template").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Template> TemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Template>("FlamingoModel.FK_TemplateItem2Template_FK", "Template");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Template>("FlamingoModel.FK_TemplateItem2Template_FK", "Template", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="Theater")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Theater : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Theater 对象。
        /// </summary>
        /// <param name="theaterId">TheaterId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static Theater CreateTheater(global::System.String theaterId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            Theater theater = new Theater();
            theater.TheaterId = theaterId;
            theater.Created = created;
            theater.Updated = updated;
            theater.ActiveFlag = activeFlag;
            return theater;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TheaterId
        {
            get
            {
                return _TheaterId;
            }
            set
            {
                if (_TheaterId != value)
                {
                    OnTheaterIdChanging(value);
                    ReportPropertyChanging("TheaterId");
                    _TheaterId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TheaterId");
                    OnTheaterIdChanged();
                }
            }
        }
        private global::System.String _TheaterId;
        partial void OnTheaterIdChanging(global::System.String value);
        partial void OnTheaterIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TheaterType
        {
            get
            {
                return _TheaterType;
            }
            set
            {
                OnTheaterTypeChanging(value);
                ReportPropertyChanging("TheaterType");
                _TheaterType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TheaterType");
                OnTheaterTypeChanged();
            }
        }
        private global::System.String _TheaterType;
        partial void OnTheaterTypeChanging(global::System.String value);
        partial void OnTheaterTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TheaterName
        {
            get
            {
                return _TheaterName;
            }
            set
            {
                OnTheaterNameChanging(value);
                ReportPropertyChanging("TheaterName");
                _TheaterName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TheaterName");
                OnTheaterNameChanged();
            }
        }
        private global::System.String _TheaterName;
        partial void OnTheaterNameChanging(global::System.String value);
        partial void OnTheaterNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Rating
        {
            get
            {
                return _Rating;
            }
            set
            {
                OnRatingChanging(value);
                ReportPropertyChanging("Rating");
                _Rating = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Rating");
                OnRatingChanged();
            }
        }
        private global::System.String _Rating;
        partial void OnRatingChanging(global::System.String value);
        partial void OnRatingChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Corporation
        {
            get
            {
                return _Corporation;
            }
            set
            {
                OnCorporationChanging(value);
                ReportPropertyChanging("Corporation");
                _Corporation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Corporation");
                OnCorporationChanged();
            }
        }
        private global::System.String _Corporation;
        partial void OnCorporationChanging(global::System.String value);
        partial void OnCorporationChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Telephone
        {
            get
            {
                return _Telephone;
            }
            set
            {
                OnTelephoneChanging(value);
                ReportPropertyChanging("Telephone");
                _Telephone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Telephone");
                OnTelephoneChanged();
            }
        }
        private global::System.String _Telephone;
        partial void OnTelephoneChanging(global::System.String value);
        partial void OnTelephoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mobile
        {
            get
            {
                return _Mobile;
            }
            set
            {
                OnMobileChanging(value);
                ReportPropertyChanging("Mobile");
                _Mobile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Mobile");
                OnMobileChanged();
            }
        }
        private global::System.String _Mobile;
        partial void OnMobileChanging(global::System.String value);
        partial void OnMobileChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Manager
        {
            get
            {
                return _Manager;
            }
            set
            {
                OnManagerChanging(value);
                ReportPropertyChanging("Manager");
                _Manager = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Manager");
                OnManagerChanged();
            }
        }
        private global::System.String _Manager;
        partial void OnManagerChanging(global::System.String value);
        partial void OnManagerChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Halls
        {
            get
            {
                return _Halls;
            }
            set
            {
                OnHallsChanging(value);
                ReportPropertyChanging("Halls");
                _Halls = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Halls");
                OnHallsChanged();
            }
        }
        private Nullable<global::System.Int32> _Halls;
        partial void OnHallsChanging(Nullable<global::System.Int32> value);
        partial void OnHallsChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Seats
        {
            get
            {
                return _Seats;
            }
            set
            {
                OnSeatsChanging(value);
                ReportPropertyChanging("Seats");
                _Seats = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Seats");
                OnSeatsChanged();
            }
        }
        private Nullable<global::System.Int32> _Seats;
        partial void OnSeatsChanging(Nullable<global::System.Int32> value);
        partial void OnSeatsChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Province
        {
            get
            {
                return _Province;
            }
            set
            {
                OnProvinceChanging(value);
                ReportPropertyChanging("Province");
                _Province = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Province");
                OnProvinceChanged();
            }
        }
        private global::System.String _Province;
        partial void OnProvinceChanging(global::System.String value);
        partial void OnProvinceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String District
        {
            get
            {
                return _District;
            }
            set
            {
                OnDistrictChanging(value);
                ReportPropertyChanging("District");
                _District = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("District");
                OnDistrictChanged();
            }
        }
        private global::System.String _District;
        partial void OnDistrictChanging(global::System.String value);
        partial void OnDistrictChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostCode
        {
            get
            {
                return _PostCode;
            }
            set
            {
                OnPostCodeChanging(value);
                ReportPropertyChanging("PostCode");
                _PostCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostCode");
                OnPostCodeChanged();
            }
        }
        private global::System.String _PostCode;
        partial void OnPostCodeChanging(global::System.String value);
        partial void OnPostCodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TheaterCode
        {
            get
            {
                return _TheaterCode;
            }
            set
            {
                OnTheaterCodeChanging(value);
                ReportPropertyChanging("TheaterCode");
                _TheaterCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TheaterCode");
                OnTheaterCodeChanged();
            }
        }
        private global::System.String _TheaterCode;
        partial void OnTheaterCodeChanging(global::System.String value);
        partial void OnTheaterCodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CineChainId
        {
            get
            {
                return _CineChainId;
            }
            set
            {
                OnCineChainIdChanging(value);
                ReportPropertyChanging("CineChainId");
                _CineChainId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CineChainId");
                OnCineChainIdChanged();
            }
        }
        private global::System.String _CineChainId;
        partial void OnCineChainIdChanging(global::System.String value);
        partial void OnCineChainIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.String _Version;
        partial void OnVersionChanging(global::System.String value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SerialNumber
        {
            get
            {
                return _SerialNumber;
            }
            set
            {
                OnSerialNumberChanging(value);
                ReportPropertyChanging("SerialNumber");
                _SerialNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SerialNumber");
                OnSerialNumberChanged();
            }
        }
        private global::System.String _SerialNumber;
        partial void OnSerialNumberChanging(global::System.String value);
        partial void OnSerialNumberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ServerModle
        {
            get
            {
                return _ServerModle;
            }
            set
            {
                OnServerModleChanging(value);
                ReportPropertyChanging("ServerModle");
                _ServerModle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ServerModle");
                OnServerModleChanged();
            }
        }
        private global::System.String _ServerModle;
        partial void OnServerModleChanging(global::System.String value);
        partial void OnServerModleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ServerCPU
        {
            get
            {
                return _ServerCPU;
            }
            set
            {
                OnServerCPUChanging(value);
                ReportPropertyChanging("ServerCPU");
                _ServerCPU = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ServerCPU");
                OnServerCPUChanged();
            }
        }
        private global::System.String _ServerCPU;
        partial void OnServerCPUChanging(global::System.String value);
        partial void OnServerCPUChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ServerMemory
        {
            get
            {
                return _ServerMemory;
            }
            set
            {
                OnServerMemoryChanging(value);
                ReportPropertyChanging("ServerMemory");
                _ServerMemory = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ServerMemory");
                OnServerMemoryChanged();
            }
        }
        private global::System.String _ServerMemory;
        partial void OnServerMemoryChanging(global::System.String value);
        partial void OnServerMemoryChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ServerHardDriver
        {
            get
            {
                return _ServerHardDriver;
            }
            set
            {
                OnServerHardDriverChanging(value);
                ReportPropertyChanging("ServerHardDriver");
                _ServerHardDriver = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ServerHardDriver");
                OnServerHardDriverChanged();
            }
        }
        private global::System.String _ServerHardDriver;
        partial void OnServerHardDriverChanging(global::System.String value);
        partial void OnServerHardDriverChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Clients
        {
            get
            {
                return _Clients;
            }
            set
            {
                OnClientsChanging(value);
                ReportPropertyChanging("Clients");
                _Clients = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Clients");
                OnClientsChanged();
            }
        }
        private Nullable<global::System.Int32> _Clients;
        partial void OnClientsChanging(Nullable<global::System.Int32> value);
        partial void OnClientsChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Authorization2Theater", "Authorization")]
        public EntityCollection<Authorization> Authorization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Authorization>("FlamingoModel.FK_Authorization2Theater", "Authorization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Authorization>("FlamingoModel.FK_Authorization2Theater", "Authorization", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_DailyPlan2Theater", "DailyPlan")]
        public EntityCollection<DailyPlan> DailyPlan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DailyPlan>("FlamingoModel.FK_DailyPlan2Theater", "DailyPlan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DailyPlan>("FlamingoModel.FK_DailyPlan2Theater", "DailyPlan", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_DownloadSetting2Theater", "DownloadSetting")]
        public EntityCollection<DownloadSetting> DownloadSetting
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DownloadSetting>("FlamingoModel.FK_DownloadSetting2Theater", "DownloadSetting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DownloadSetting>("FlamingoModel.FK_DownloadSetting2Theater", "DownloadSetting", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Hall2Theater", "Hall")]
        public EntityCollection<Hall> Hall
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Hall>("FlamingoModel.FK_Hall2Theater", "Hall");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Hall>("FlamingoModel.FK_Hall2Theater", "Hall", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Tax2Theater", "Tax")]
        public EntityCollection<Tax> Tax
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tax>("FlamingoModel.FK_Tax2Theater", "Tax");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tax>("FlamingoModel.FK_Tax2Theater", "Tax", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_TimeSetting2Theater", "TimeSetting")]
        public EntityCollection<TimeSetting> TimeSetting
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TimeSetting>("FlamingoModel.FK_TimeSetting2Theater", "TimeSetting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TimeSetting>("FlamingoModel.FK_TimeSetting2Theater", "TimeSetting", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_UploadSetting2Theater", "UploadSetting")]
        public EntityCollection<UploadSetting> UploadSetting
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UploadSetting>("FlamingoModel.FK_UploadSetting2Theater", "UploadSetting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UploadSetting>("FlamingoModel.FK_UploadSetting2Theater", "UploadSetting", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="TheaterPrices")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TheaterPrices : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 TheaterPrices 对象。
        /// </summary>
        /// <param name="theaterPriceId">TheaterPriceId 属性的初始值。</param>
        public static TheaterPrices CreateTheaterPrices(global::System.String theaterPriceId)
        {
            TheaterPrices theaterPrices = new TheaterPrices();
            theaterPrices.TheaterPriceId = theaterPriceId;
            return theaterPrices;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TheaterPriceId
        {
            get
            {
                return _TheaterPriceId;
            }
            set
            {
                if (_TheaterPriceId != value)
                {
                    OnTheaterPriceIdChanging(value);
                    ReportPropertyChanging("TheaterPriceId");
                    _TheaterPriceId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TheaterPriceId");
                    OnTheaterPriceIdChanged();
                }
            }
        }
        private global::System.String _TheaterPriceId;
        partial void OnTheaterPriceIdChanging(global::System.String value);
        partial void OnTheaterPriceIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DailyPlanId
        {
            get
            {
                return _DailyPlanId;
            }
            set
            {
                OnDailyPlanIdChanging(value);
                ReportPropertyChanging("DailyPlanId");
                _DailyPlanId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DailyPlanId");
                OnDailyPlanIdChanged();
            }
        }
        private global::System.String _DailyPlanId;
        partial void OnDailyPlanIdChanging(global::System.String value);
        partial void OnDailyPlanIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SinglePrice
        {
            get
            {
                return _SinglePrice;
            }
            set
            {
                OnSinglePriceChanging(value);
                ReportPropertyChanging("SinglePrice");
                _SinglePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SinglePrice");
                OnSinglePriceChanged();
            }
        }
        private Nullable<global::System.Single> _SinglePrice;
        partial void OnSinglePriceChanging(Nullable<global::System.Single> value);
        partial void OnSinglePriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> DoublePrice
        {
            get
            {
                return _DoublePrice;
            }
            set
            {
                OnDoublePriceChanging(value);
                ReportPropertyChanging("DoublePrice");
                _DoublePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoublePrice");
                OnDoublePriceChanged();
            }
        }
        private Nullable<global::System.Single> _DoublePrice;
        partial void OnDoublePriceChanging(Nullable<global::System.Single> value);
        partial void OnDoublePriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> StudentPrice
        {
            get
            {
                return _StudentPrice;
            }
            set
            {
                OnStudentPriceChanging(value);
                ReportPropertyChanging("StudentPrice");
                _StudentPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudentPrice");
                OnStudentPriceChanged();
            }
        }
        private Nullable<global::System.Single> _StudentPrice;
        partial void OnStudentPriceChanging(Nullable<global::System.Single> value);
        partial void OnStudentPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> GroupPrice
        {
            get
            {
                return _GroupPrice;
            }
            set
            {
                OnGroupPriceChanging(value);
                ReportPropertyChanging("GroupPrice");
                _GroupPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupPrice");
                OnGroupPriceChanged();
            }
        }
        private Nullable<global::System.Single> _GroupPrice;
        partial void OnGroupPriceChanging(Nullable<global::System.Single> value);
        partial void OnGroupPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> BoxPrice
        {
            get
            {
                return _BoxPrice;
            }
            set
            {
                OnBoxPriceChanging(value);
                ReportPropertyChanging("BoxPrice");
                _BoxPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoxPrice");
                OnBoxPriceChanged();
            }
        }
        private Nullable<global::System.Single> _BoxPrice;
        partial void OnBoxPriceChanging(Nullable<global::System.Single> value);
        partial void OnBoxPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> MemberPrice
        {
            get
            {
                return _MemberPrice;
            }
            set
            {
                OnMemberPriceChanging(value);
                ReportPropertyChanging("MemberPrice");
                _MemberPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberPrice");
                OnMemberPriceChanged();
            }
        }
        private Nullable<global::System.Single> _MemberPrice;
        partial void OnMemberPriceChanging(Nullable<global::System.Single> value);
        partial void OnMemberPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> DiscountPrice
        {
            get
            {
                return _DiscountPrice;
            }
            set
            {
                OnDiscountPriceChanging(value);
                ReportPropertyChanging("DiscountPrice");
                _DiscountPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscountPrice");
                OnDiscountPriceChanged();
            }
        }
        private Nullable<global::System.Single> _DiscountPrice;
        partial void OnDiscountPriceChanging(Nullable<global::System.Single> value);
        partial void OnDiscountPriceChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="Ticket")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ticket : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Ticket 对象。
        /// </summary>
        /// <param name="ticketId">TicketId 属性的初始值。</param>
        /// <param name="seatStatusId">SeatStatusId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static Ticket CreateTicket(global::System.Guid ticketId, global::System.String seatStatusId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            Ticket ticket = new Ticket();
            ticket.TicketId = ticketId;
            ticket.SeatStatusId = seatStatusId;
            ticket.Created = created;
            ticket.Updated = updated;
            ticket.ActiveFlag = activeFlag;
            return ticket;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TicketId
        {
            get
            {
                return _TicketId;
            }
            set
            {
                if (_TicketId != value)
                {
                    OnTicketIdChanging(value);
                    ReportPropertyChanging("TicketId");
                    _TicketId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TicketId");
                    OnTicketIdChanged();
                }
            }
        }
        private global::System.Guid _TicketId;
        partial void OnTicketIdChanging(global::System.Guid value);
        partial void OnTicketIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SeatStatusId
        {
            get
            {
                return _SeatStatusId;
            }
            set
            {
                OnSeatStatusIdChanging(value);
                ReportPropertyChanging("SeatStatusId");
                _SeatStatusId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SeatStatusId");
                OnSeatStatusIdChanged();
            }
        }
        private global::System.String _SeatStatusId;
        partial void OnSeatStatusIdChanging(global::System.String value);
        partial void OnSeatStatusIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TemplateId
        {
            get
            {
                return _TemplateId;
            }
            set
            {
                OnTemplateIdChanging(value);
                ReportPropertyChanging("TemplateId");
                _TemplateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TemplateId");
                OnTemplateIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TemplateId;
        partial void OnTemplateIdChanging(Nullable<global::System.Int32> value);
        partial void OnTemplateIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PaymentId
        {
            get
            {
                return _PaymentId;
            }
            set
            {
                OnPaymentIdChanging(value);
                ReportPropertyChanging("PaymentId");
                _PaymentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentId");
                OnPaymentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PaymentId;
        partial void OnPaymentIdChanging(Nullable<global::System.Int32> value);
        partial void OnPaymentIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FilmId
        {
            get
            {
                return _FilmId;
            }
            set
            {
                OnFilmIdChanging(value);
                ReportPropertyChanging("FilmId");
                _FilmId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FilmId");
                OnFilmIdChanged();
            }
        }
        private global::System.String _FilmId;
        partial void OnFilmIdChanging(global::System.String value);
        partial void OnFilmIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TicketTypeId
        {
            get
            {
                return _TicketTypeId;
            }
            set
            {
                OnTicketTypeIdChanging(value);
                ReportPropertyChanging("TicketTypeId");
                _TicketTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TicketTypeId");
                OnTicketTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TicketTypeId;
        partial void OnTicketTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnTicketTypeIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShowPlanId
        {
            get
            {
                return _ShowPlanId;
            }
            set
            {
                OnShowPlanIdChanging(value);
                ReportPropertyChanging("ShowPlanId");
                _ShowPlanId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShowPlanId");
                OnShowPlanIdChanged();
            }
        }
        private global::System.String _ShowPlanId;
        partial void OnShowPlanIdChanging(global::System.String value);
        partial void OnShowPlanIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> TicketPrice
        {
            get
            {
                return _TicketPrice;
            }
            set
            {
                OnTicketPriceChanging(value);
                ReportPropertyChanging("TicketPrice");
                _TicketPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TicketPrice");
                OnTicketPriceChanged();
            }
        }
        private Nullable<global::System.Single> _TicketPrice;
        partial void OnTicketPriceChanging(Nullable<global::System.Single> value);
        partial void OnTicketPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SpecialFund
        {
            get
            {
                return _SpecialFund;
            }
            set
            {
                OnSpecialFundChanging(value);
                ReportPropertyChanging("SpecialFund");
                _SpecialFund = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpecialFund");
                OnSpecialFundChanged();
            }
        }
        private Nullable<global::System.Single> _SpecialFund;
        partial void OnSpecialFundChanging(Nullable<global::System.Single> value);
        partial void OnSpecialFundChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> SalesTax
        {
            get
            {
                return _SalesTax;
            }
            set
            {
                OnSalesTaxChanging(value);
                ReportPropertyChanging("SalesTax");
                _SalesTax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SalesTax");
                OnSalesTaxChanged();
            }
        }
        private Nullable<global::System.Single> _SalesTax;
        partial void OnSalesTaxChanging(Nullable<global::System.Single> value);
        partial void OnSalesTaxChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> CityTax
        {
            get
            {
                return _CityTax;
            }
            set
            {
                OnCityTaxChanging(value);
                ReportPropertyChanging("CityTax");
                _CityTax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityTax");
                OnCityTaxChanged();
            }
        }
        private Nullable<global::System.Single> _CityTax;
        partial void OnCityTaxChanging(Nullable<global::System.Single> value);
        partial void OnCityTaxChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> EducationTax
        {
            get
            {
                return _EducationTax;
            }
            set
            {
                OnEducationTaxChanging(value);
                ReportPropertyChanging("EducationTax");
                _EducationTax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EducationTax");
                OnEducationTaxChanged();
            }
        }
        private Nullable<global::System.Single> _EducationTax;
        partial void OnEducationTaxChanging(Nullable<global::System.Single> value);
        partial void OnEducationTaxChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> AdditionalTax
        {
            get
            {
                return _AdditionalTax;
            }
            set
            {
                OnAdditionalTaxChanging(value);
                ReportPropertyChanging("AdditionalTax");
                _AdditionalTax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdditionalTax");
                OnAdditionalTaxChanged();
            }
        }
        private Nullable<global::System.Single> _AdditionalTax;
        partial void OnAdditionalTaxChanging(Nullable<global::System.Single> value);
        partial void OnAdditionalTaxChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> RatioFee
        {
            get
            {
                return _RatioFee;
            }
            set
            {
                OnRatioFeeChanging(value);
                ReportPropertyChanging("RatioFee");
                _RatioFee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RatioFee");
                OnRatioFeeChanged();
            }
        }
        private Nullable<global::System.Single> _RatioFee;
        partial void OnRatioFeeChanging(Nullable<global::System.Single> value);
        partial void OnRatioFeeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> NetIncome
        {
            get
            {
                return _NetIncome;
            }
            set
            {
                OnNetIncomeChanging(value);
                ReportPropertyChanging("NetIncome");
                _NetIncome = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetIncome");
                OnNetIncomeChanged();
            }
        }
        private Nullable<global::System.Single> _NetIncome;
        partial void OnNetIncomeChanging(Nullable<global::System.Single> value);
        partial void OnNetIncomeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BarCode
        {
            get
            {
                return _BarCode;
            }
            set
            {
                OnBarCodeChanging(value);
                ReportPropertyChanging("BarCode");
                _BarCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BarCode");
                OnBarCodeChanged();
            }
        }
        private global::System.String _BarCode;
        partial void OnBarCodeChanging(global::System.String value);
        partial void OnBarCodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SoldTime
        {
            get
            {
                return _SoldTime;
            }
            set
            {
                OnSoldTimeChanging(value);
                ReportPropertyChanging("SoldTime");
                _SoldTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SoldTime");
                OnSoldTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _SoldTime;
        partial void OnSoldTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnSoldTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SoldBy
        {
            get
            {
                return _SoldBy;
            }
            set
            {
                OnSoldByChanging(value);
                ReportPropertyChanging("SoldBy");
                _SoldBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SoldBy");
                OnSoldByChanged();
            }
        }
        private Nullable<global::System.Int32> _SoldBy;
        partial void OnSoldByChanging(Nullable<global::System.Int32> value);
        partial void OnSoldByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrintStatus
        {
            get
            {
                return _PrintStatus;
            }
            set
            {
                OnPrintStatusChanging(value);
                ReportPropertyChanging("PrintStatus");
                _PrintStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrintStatus");
                OnPrintStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _PrintStatus;
        partial void OnPrintStatusChanging(Nullable<global::System.Int32> value);
        partial void OnPrintStatusChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TicketStatus
        {
            get
            {
                return _TicketStatus;
            }
            set
            {
                OnTicketStatusChanging(value);
                ReportPropertyChanging("TicketStatus");
                _TicketStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TicketStatus");
                OnTicketStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _TicketStatus;
        partial void OnTicketStatusChanging(Nullable<global::System.Int32> value);
        partial void OnTicketStatusChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RefundedBy
        {
            get
            {
                return _RefundedBy;
            }
            set
            {
                OnRefundedByChanging(value);
                ReportPropertyChanging("RefundedBy");
                _RefundedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RefundedBy");
                OnRefundedByChanged();
            }
        }
        private Nullable<global::System.Int32> _RefundedBy;
        partial void OnRefundedByChanging(Nullable<global::System.Int32> value);
        partial void OnRefundedByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RefundTime
        {
            get
            {
                return _RefundTime;
            }
            set
            {
                OnRefundTimeChanging(value);
                ReportPropertyChanging("RefundTime");
                _RefundTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RefundTime");
                OnRefundTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _RefundTime;
        partial void OnRefundTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnRefundTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Ticket2Film", "Film")]
        public Film Film
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Film>("FlamingoModel.FK_Ticket2Film", "Film").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Film>("FlamingoModel.FK_Ticket2Film", "Film").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Film> FilmReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Film>("FlamingoModel.FK_Ticket2Film", "Film");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Film>("FlamingoModel.FK_Ticket2Film", "Film", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Ticket2Payment", "Payment")]
        public Payment Payment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FlamingoModel.FK_Ticket2Payment", "Payment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FlamingoModel.FK_Ticket2Payment", "Payment").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Payment> PaymentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Payment>("FlamingoModel.FK_Ticket2Payment", "Payment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Payment>("FlamingoModel.FK_Ticket2Payment", "Payment", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Ticket2SeatStatus", "SeatStatus")]
        public SeatStatus SeatStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SeatStatus>("FlamingoModel.FK_Ticket2SeatStatus", "SeatStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SeatStatus>("FlamingoModel.FK_Ticket2SeatStatus", "SeatStatus").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SeatStatus> SeatStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SeatStatus>("FlamingoModel.FK_Ticket2SeatStatus", "SeatStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SeatStatus>("FlamingoModel.FK_Ticket2SeatStatus", "SeatStatus", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Ticket2ShowPlan", "ShowPlan")]
        public ShowPlan ShowPlan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShowPlan>("FlamingoModel.FK_Ticket2ShowPlan", "ShowPlan").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShowPlan>("FlamingoModel.FK_Ticket2ShowPlan", "ShowPlan").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ShowPlan> ShowPlanReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShowPlan>("FlamingoModel.FK_Ticket2ShowPlan", "ShowPlan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ShowPlan>("FlamingoModel.FK_Ticket2ShowPlan", "ShowPlan", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Ticket2Template", "Template")]
        public Template Template
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Template>("FlamingoModel.FK_Ticket2Template", "Template").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Template>("FlamingoModel.FK_Ticket2Template", "Template").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Template> TemplateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Template>("FlamingoModel.FK_Ticket2Template", "Template");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Template>("FlamingoModel.FK_Ticket2Template", "Template", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Ticket2TicketType", "TicketType")]
        public TicketType TicketType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TicketType>("FlamingoModel.FK_Ticket2TicketType", "TicketType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TicketType>("FlamingoModel.FK_Ticket2TicketType", "TicketType").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TicketType> TicketTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TicketType>("FlamingoModel.FK_Ticket2TicketType", "TicketType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TicketType>("FlamingoModel.FK_Ticket2TicketType", "TicketType", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Voucher2Ticket", "Voucher")]
        public EntityCollection<Voucher> Voucher
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Voucher>("FlamingoModel.FK_Voucher2Ticket", "Voucher");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Voucher>("FlamingoModel.FK_Voucher2Ticket", "Voucher", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="TicketType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TicketType : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 TicketType 对象。
        /// </summary>
        /// <param name="ticketTypeId">TicketTypeId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static TicketType CreateTicketType(global::System.Int32 ticketTypeId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            TicketType ticketType = new TicketType();
            ticketType.TicketTypeId = ticketTypeId;
            ticketType.Created = created;
            ticketType.Updated = updated;
            ticketType.ActiveFlag = activeFlag;
            return ticketType;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TicketTypeId
        {
            get
            {
                return _TicketTypeId;
            }
            set
            {
                if (_TicketTypeId != value)
                {
                    OnTicketTypeIdChanging(value);
                    ReportPropertyChanging("TicketTypeId");
                    _TicketTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TicketTypeId");
                    OnTicketTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _TicketTypeId;
        partial void OnTicketTypeIdChanging(global::System.Int32 value);
        partial void OnTicketTypeIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TicketTypeName
        {
            get
            {
                return _TicketTypeName;
            }
            set
            {
                OnTicketTypeNameChanging(value);
                ReportPropertyChanging("TicketTypeName");
                _TicketTypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TicketTypeName");
                OnTicketTypeNameChanged();
            }
        }
        private global::System.String _TicketTypeName;
        partial void OnTicketTypeNameChanging(global::System.String value);
        partial void OnTicketTypeNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Reservation2TicketType", "Reservation")]
        public EntityCollection<Reservation> Reservation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reservation>("FlamingoModel.FK_Reservation2TicketType", "Reservation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reservation>("FlamingoModel.FK_Reservation2TicketType", "Reservation", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Ticket2TicketType", "Ticket")]
        public EntityCollection<Ticket> Ticket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ticket>("FlamingoModel.FK_Ticket2TicketType", "Ticket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ticket>("FlamingoModel.FK_Ticket2TicketType", "Ticket", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="TimeSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TimeSetting : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 TimeSetting 对象。
        /// </summary>
        /// <param name="timeSettingId">TimeSettingId 属性的初始值。</param>
        /// <param name="theaterId">TheaterId 属性的初始值。</param>
        /// <param name="repeatDay">RepeatDay 属性的初始值。</param>
        /// <param name="openTime">OpenTime 属性的初始值。</param>
        /// <param name="closeTime">CloseTime 属性的初始值。</param>
        /// <param name="refundDeadline">RefundDeadline 属性的初始值。</param>
        /// <param name="ticketingDeadline">TicketingDeadline 属性的初始值。</param>
        /// <param name="bookingReleaseTime">BookingReleaseTime 属性的初始值。</param>
        /// <param name="timespan">Timespan 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static TimeSetting CreateTimeSetting(global::System.Int32 timeSettingId, global::System.String theaterId, global::System.String repeatDay, global::System.TimeSpan openTime, global::System.TimeSpan closeTime, global::System.Int32 refundDeadline, global::System.Int32 ticketingDeadline, global::System.Int32 bookingReleaseTime, global::System.Int32 timespan, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            TimeSetting timeSetting = new TimeSetting();
            timeSetting.TimeSettingId = timeSettingId;
            timeSetting.TheaterId = theaterId;
            timeSetting.RepeatDay = repeatDay;
            timeSetting.OpenTime = openTime;
            timeSetting.CloseTime = closeTime;
            timeSetting.RefundDeadline = refundDeadline;
            timeSetting.TicketingDeadline = ticketingDeadline;
            timeSetting.BookingReleaseTime = bookingReleaseTime;
            timeSetting.Timespan = timespan;
            timeSetting.Created = created;
            timeSetting.Updated = updated;
            timeSetting.ActiveFlag = activeFlag;
            return timeSetting;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TimeSettingId
        {
            get
            {
                return _TimeSettingId;
            }
            set
            {
                if (_TimeSettingId != value)
                {
                    OnTimeSettingIdChanging(value);
                    ReportPropertyChanging("TimeSettingId");
                    _TimeSettingId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TimeSettingId");
                    OnTimeSettingIdChanged();
                }
            }
        }
        private global::System.Int32 _TimeSettingId;
        partial void OnTimeSettingIdChanging(global::System.Int32 value);
        partial void OnTimeSettingIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TheaterId
        {
            get
            {
                return _TheaterId;
            }
            set
            {
                OnTheaterIdChanging(value);
                ReportPropertyChanging("TheaterId");
                _TheaterId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TheaterId");
                OnTheaterIdChanged();
            }
        }
        private global::System.String _TheaterId;
        partial void OnTheaterIdChanging(global::System.String value);
        partial void OnTheaterIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RepeatDay
        {
            get
            {
                return _RepeatDay;
            }
            set
            {
                OnRepeatDayChanging(value);
                ReportPropertyChanging("RepeatDay");
                _RepeatDay = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RepeatDay");
                OnRepeatDayChanged();
            }
        }
        private global::System.String _RepeatDay;
        partial void OnRepeatDayChanging(global::System.String value);
        partial void OnRepeatDayChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan OpenTime
        {
            get
            {
                return _OpenTime;
            }
            set
            {
                OnOpenTimeChanging(value);
                ReportPropertyChanging("OpenTime");
                _OpenTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OpenTime");
                OnOpenTimeChanged();
            }
        }
        private global::System.TimeSpan _OpenTime;
        partial void OnOpenTimeChanging(global::System.TimeSpan value);
        partial void OnOpenTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan CloseTime
        {
            get
            {
                return _CloseTime;
            }
            set
            {
                OnCloseTimeChanging(value);
                ReportPropertyChanging("CloseTime");
                _CloseTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CloseTime");
                OnCloseTimeChanged();
            }
        }
        private global::System.TimeSpan _CloseTime;
        partial void OnCloseTimeChanging(global::System.TimeSpan value);
        partial void OnCloseTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RefundDeadline
        {
            get
            {
                return _RefundDeadline;
            }
            set
            {
                OnRefundDeadlineChanging(value);
                ReportPropertyChanging("RefundDeadline");
                _RefundDeadline = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RefundDeadline");
                OnRefundDeadlineChanged();
            }
        }
        private global::System.Int32 _RefundDeadline;
        partial void OnRefundDeadlineChanging(global::System.Int32 value);
        partial void OnRefundDeadlineChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TicketingDeadline
        {
            get
            {
                return _TicketingDeadline;
            }
            set
            {
                OnTicketingDeadlineChanging(value);
                ReportPropertyChanging("TicketingDeadline");
                _TicketingDeadline = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TicketingDeadline");
                OnTicketingDeadlineChanged();
            }
        }
        private global::System.Int32 _TicketingDeadline;
        partial void OnTicketingDeadlineChanging(global::System.Int32 value);
        partial void OnTicketingDeadlineChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookingReleaseTime
        {
            get
            {
                return _BookingReleaseTime;
            }
            set
            {
                OnBookingReleaseTimeChanging(value);
                ReportPropertyChanging("BookingReleaseTime");
                _BookingReleaseTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BookingReleaseTime");
                OnBookingReleaseTimeChanged();
            }
        }
        private global::System.Int32 _BookingReleaseTime;
        partial void OnBookingReleaseTimeChanging(global::System.Int32 value);
        partial void OnBookingReleaseTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Timespan
        {
            get
            {
                return _Timespan;
            }
            set
            {
                OnTimespanChanging(value);
                ReportPropertyChanging("Timespan");
                _Timespan = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Timespan");
                OnTimespanChanged();
            }
        }
        private global::System.Int32 _Timespan;
        partial void OnTimespanChanging(global::System.Int32 value);
        partial void OnTimespanChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DailyCount
        {
            get
            {
                return _DailyCount;
            }
            set
            {
                OnDailyCountChanging(value);
                ReportPropertyChanging("DailyCount");
                _DailyCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DailyCount");
                OnDailyCountChanged();
            }
        }
        private Nullable<global::System.Int32> _DailyCount;
        partial void OnDailyCountChanging(Nullable<global::System.Int32> value);
        partial void OnDailyCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.Int32> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.Int32> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MonthlyCount
        {
            get
            {
                return _MonthlyCount;
            }
            set
            {
                OnMonthlyCountChanging(value);
                ReportPropertyChanging("MonthlyCount");
                _MonthlyCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MonthlyCount");
                OnMonthlyCountChanged();
            }
        }
        private Nullable<global::System.Int32> _MonthlyCount;
        partial void OnMonthlyCountChanging(Nullable<global::System.Int32> value);
        partial void OnMonthlyCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StartMonth
        {
            get
            {
                return _StartMonth;
            }
            set
            {
                OnStartMonthChanging(value);
                ReportPropertyChanging("StartMonth");
                _StartMonth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartMonth");
                OnStartMonthChanged();
            }
        }
        private Nullable<global::System.Int32> _StartMonth;
        partial void OnStartMonthChanging(Nullable<global::System.Int32> value);
        partial void OnStartMonthChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_TimeSetting2Theater", "Theater")]
        public Theater Theater
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theater>("FlamingoModel.FK_TimeSetting2Theater", "Theater").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theater>("FlamingoModel.FK_TimeSetting2Theater", "Theater").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Theater> TheaterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theater>("FlamingoModel.FK_TimeSetting2Theater", "Theater");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Theater>("FlamingoModel.FK_TimeSetting2Theater", "Theater", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="UploadLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UploadLog : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UploadLog 对象。
        /// </summary>
        /// <param name="uploadLogId">UploadLogId 属性的初始值。</param>
        /// <param name="uploadId">UploadId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static UploadLog CreateUploadLog(global::System.Int32 uploadLogId, global::System.Int32 uploadId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            UploadLog uploadLog = new UploadLog();
            uploadLog.UploadLogId = uploadLogId;
            uploadLog.UploadId = uploadId;
            uploadLog.Created = created;
            uploadLog.Updated = updated;
            uploadLog.ActiveFlag = activeFlag;
            return uploadLog;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UploadLogId
        {
            get
            {
                return _UploadLogId;
            }
            set
            {
                if (_UploadLogId != value)
                {
                    OnUploadLogIdChanging(value);
                    ReportPropertyChanging("UploadLogId");
                    _UploadLogId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UploadLogId");
                    OnUploadLogIdChanged();
                }
            }
        }
        private global::System.Int32 _UploadLogId;
        partial void OnUploadLogIdChanging(global::System.Int32 value);
        partial void OnUploadLogIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UploadId
        {
            get
            {
                return _UploadId;
            }
            set
            {
                OnUploadIdChanging(value);
                ReportPropertyChanging("UploadId");
                _UploadId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UploadId");
                OnUploadIdChanged();
            }
        }
        private global::System.Int32 _UploadId;
        partial void OnUploadIdChanging(global::System.Int32 value);
        partial void OnUploadIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Result
        {
            get
            {
                return _Result;
            }
            set
            {
                OnResultChanging(value);
                ReportPropertyChanging("Result");
                _Result = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Result");
                OnResultChanged();
            }
        }
        private Nullable<global::System.Boolean> _Result;
        partial void OnResultChanging(Nullable<global::System.Boolean> value);
        partial void OnResultChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Tries
        {
            get
            {
                return _Tries;
            }
            set
            {
                OnTriesChanging(value);
                ReportPropertyChanging("Tries");
                _Tries = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tries");
                OnTriesChanged();
            }
        }
        private Nullable<global::System.Int32> _Tries;
        partial void OnTriesChanging(Nullable<global::System.Int32> value);
        partial void OnTriesChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BusnessDate
        {
            get
            {
                return _BusnessDate;
            }
            set
            {
                OnBusnessDateChanging(value);
                ReportPropertyChanging("BusnessDate");
                _BusnessDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BusnessDate");
                OnBusnessDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BusnessDate;
        partial void OnBusnessDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBusnessDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_UploadLog2UploadSetting", "UploadSetting")]
        public UploadSetting UploadSetting
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UploadSetting>("FlamingoModel.FK_UploadLog2UploadSetting", "UploadSetting").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UploadSetting>("FlamingoModel.FK_UploadLog2UploadSetting", "UploadSetting").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UploadSetting> UploadSettingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UploadSetting>("FlamingoModel.FK_UploadLog2UploadSetting", "UploadSetting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UploadSetting>("FlamingoModel.FK_UploadLog2UploadSetting", "UploadSetting", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="UploadSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UploadSetting : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UploadSetting 对象。
        /// </summary>
        /// <param name="uploadId">UploadId 属性的初始值。</param>
        /// <param name="theaterId">TheaterId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static UploadSetting CreateUploadSetting(global::System.Int32 uploadId, global::System.String theaterId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            UploadSetting uploadSetting = new UploadSetting();
            uploadSetting.UploadId = uploadId;
            uploadSetting.TheaterId = theaterId;
            uploadSetting.Created = created;
            uploadSetting.Updated = updated;
            uploadSetting.ActiveFlag = activeFlag;
            return uploadSetting;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UploadId
        {
            get
            {
                return _UploadId;
            }
            set
            {
                if (_UploadId != value)
                {
                    OnUploadIdChanging(value);
                    ReportPropertyChanging("UploadId");
                    _UploadId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UploadId");
                    OnUploadIdChanged();
                }
            }
        }
        private global::System.Int32 _UploadId;
        partial void OnUploadIdChanging(global::System.Int32 value);
        partial void OnUploadIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TheaterId
        {
            get
            {
                return _TheaterId;
            }
            set
            {
                OnTheaterIdChanging(value);
                ReportPropertyChanging("TheaterId");
                _TheaterId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TheaterId");
                OnTheaterIdChanged();
            }
        }
        private global::System.String _TheaterId;
        partial void OnTheaterIdChanging(global::System.String value);
        partial void OnTheaterIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TargetName
        {
            get
            {
                return _TargetName;
            }
            set
            {
                OnTargetNameChanging(value);
                ReportPropertyChanging("TargetName");
                _TargetName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TargetName");
                OnTargetNameChanged();
            }
        }
        private global::System.String _TargetName;
        partial void OnTargetNameChanging(global::System.String value);
        partial void OnTargetNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UploadMethod
        {
            get
            {
                return _UploadMethod;
            }
            set
            {
                OnUploadMethodChanging(value);
                ReportPropertyChanging("UploadMethod");
                _UploadMethod = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UploadMethod");
                OnUploadMethodChanged();
            }
        }
        private global::System.String _UploadMethod;
        partial void OnUploadMethodChanging(global::System.String value);
        partial void OnUploadMethodChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UploadAddr
        {
            get
            {
                return _UploadAddr;
            }
            set
            {
                OnUploadAddrChanging(value);
                ReportPropertyChanging("UploadAddr");
                _UploadAddr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UploadAddr");
                OnUploadAddrChanged();
            }
        }
        private global::System.String _UploadAddr;
        partial void OnUploadAddrChanging(global::System.String value);
        partial void OnUploadAddrChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> UploadTime
        {
            get
            {
                return _UploadTime;
            }
            set
            {
                OnUploadTimeChanging(value);
                ReportPropertyChanging("UploadTime");
                _UploadTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UploadTime");
                OnUploadTimeChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _UploadTime;
        partial void OnUploadTimeChanging(Nullable<global::System.TimeSpan> value);
        partial void OnUploadTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailAddr
        {
            get
            {
                return _EmailAddr;
            }
            set
            {
                OnEmailAddrChanging(value);
                ReportPropertyChanging("EmailAddr");
                _EmailAddr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailAddr");
                OnEmailAddrChanged();
            }
        }
        private global::System.String _EmailAddr;
        partial void OnEmailAddrChanging(global::System.String value);
        partial void OnEmailAddrChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileFormat
        {
            get
            {
                return _FileFormat;
            }
            set
            {
                OnFileFormatChanging(value);
                ReportPropertyChanging("FileFormat");
                _FileFormat = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileFormat");
                OnFileFormatChanged();
            }
        }
        private global::System.String _FileFormat;
        partial void OnFileFormatChanging(global::System.String value);
        partial void OnFileFormatChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_UploadSetting2Theater", "Theater")]
        public Theater Theater
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theater>("FlamingoModel.FK_UploadSetting2Theater", "Theater").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theater>("FlamingoModel.FK_UploadSetting2Theater", "Theater").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Theater> TheaterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Theater>("FlamingoModel.FK_UploadSetting2Theater", "Theater");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Theater>("FlamingoModel.FK_UploadSetting2Theater", "Theater", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_UploadLog2UploadSetting", "UploadLog")]
        public EntityCollection<UploadLog> UploadLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UploadLog>("FlamingoModel.FK_UploadLog2UploadSetting", "UploadLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UploadLog>("FlamingoModel.FK_UploadLog2UploadSetting", "UploadLog", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 User 对象。
        /// </summary>
        /// <param name="userId">UserId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static User CreateUser(global::System.Int32 userId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            User user = new User();
            user.UserId = userId;
            user.Created = created;
            user.Updated = updated;
            user.ActiveFlag = activeFlag;
            return user;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmployeeName
        {
            get
            {
                return _EmployeeName;
            }
            set
            {
                OnEmployeeNameChanging(value);
                ReportPropertyChanging("EmployeeName");
                _EmployeeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmployeeName");
                OnEmployeeNameChanged();
            }
        }
        private global::System.String _EmployeeName;
        partial void OnEmployeeNameChanging(global::System.String value);
        partial void OnEmployeeNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                OnEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeeId");
                _EmployeeId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmployeeId");
                OnEmployeeIdChanged();
            }
        }
        private global::System.String _EmployeeId;
        partial void OnEmployeeIdChanging(global::System.String value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Telephone
        {
            get
            {
                return _Telephone;
            }
            set
            {
                OnTelephoneChanging(value);
                ReportPropertyChanging("Telephone");
                _Telephone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Telephone");
                OnTelephoneChanged();
            }
        }
        private global::System.String _Telephone;
        partial void OnTelephoneChanging(global::System.String value);
        partial void OnTelephoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mobile
        {
            get
            {
                return _Mobile;
            }
            set
            {
                OnMobileChanging(value);
                ReportPropertyChanging("Mobile");
                _Mobile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Mobile");
                OnMobileChanged();
            }
        }
        private global::System.String _Mobile;
        partial void OnMobileChanging(global::System.String value);
        partial void OnMobileChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_U_P2User", "User_Permission")]
        public EntityCollection<User_Permission> User_Permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User_Permission>("FlamingoModel.FK_U_P2User", "User_Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User_Permission>("FlamingoModel.FK_U_P2User", "User_Permission", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_U_R2User", "User_Role")]
        public EntityCollection<User_Role> User_Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User_Role>("FlamingoModel.FK_U_R2User", "User_Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User_Role>("FlamingoModel.FK_U_R2User", "User_Role", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="User_Permission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User_Permission : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 User_Permission 对象。
        /// </summary>
        /// <param name="user_PermissionId">User_PermissionId 属性的初始值。</param>
        /// <param name="userId">UserId 属性的初始值。</param>
        /// <param name="permissionId">PermissionId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static User_Permission CreateUser_Permission(global::System.Int32 user_PermissionId, global::System.Int32 userId, global::System.Int32 permissionId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            User_Permission user_Permission = new User_Permission();
            user_Permission.User_PermissionId = user_PermissionId;
            user_Permission.UserId = userId;
            user_Permission.PermissionId = permissionId;
            user_Permission.Created = created;
            user_Permission.Updated = updated;
            user_Permission.ActiveFlag = activeFlag;
            return user_Permission;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 User_PermissionId
        {
            get
            {
                return _User_PermissionId;
            }
            set
            {
                if (_User_PermissionId != value)
                {
                    OnUser_PermissionIdChanging(value);
                    ReportPropertyChanging("User_PermissionId");
                    _User_PermissionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("User_PermissionId");
                    OnUser_PermissionIdChanged();
                }
            }
        }
        private global::System.Int32 _User_PermissionId;
        partial void OnUser_PermissionIdChanging(global::System.Int32 value);
        partial void OnUser_PermissionIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PermissionId
        {
            get
            {
                return _PermissionId;
            }
            set
            {
                OnPermissionIdChanging(value);
                ReportPropertyChanging("PermissionId");
                _PermissionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PermissionId");
                OnPermissionIdChanged();
            }
        }
        private global::System.Int32 _PermissionId;
        partial void OnPermissionIdChanging(global::System.Int32 value);
        partial void OnPermissionIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RoleID;
        partial void OnRoleIDChanging(Nullable<global::System.Int32> value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_U_P2Permission", "Permission")]
        public Permission Permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("FlamingoModel.FK_U_P2Permission", "Permission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("FlamingoModel.FK_U_P2Permission", "Permission").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Permission> PermissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Permission>("FlamingoModel.FK_U_P2Permission", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Permission>("FlamingoModel.FK_U_P2Permission", "Permission", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_U_P2Role", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("FlamingoModel.FK_U_P2Role", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("FlamingoModel.FK_U_P2Role", "Role").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("FlamingoModel.FK_U_P2Role", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("FlamingoModel.FK_U_P2Role", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_U_P2User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("FlamingoModel.FK_U_P2User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("FlamingoModel.FK_U_P2User", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("FlamingoModel.FK_U_P2User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("FlamingoModel.FK_U_P2User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="User_Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User_Role : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 User_Role 对象。
        /// </summary>
        /// <param name="user_RoleId">User_RoleId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static User_Role CreateUser_Role(global::System.Int32 user_RoleId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            User_Role user_Role = new User_Role();
            user_Role.User_RoleId = user_RoleId;
            user_Role.Created = created;
            user_Role.Updated = updated;
            user_Role.ActiveFlag = activeFlag;
            return user_Role;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 User_RoleId
        {
            get
            {
                return _User_RoleId;
            }
            set
            {
                if (_User_RoleId != value)
                {
                    OnUser_RoleIdChanging(value);
                    ReportPropertyChanging("User_RoleId");
                    _User_RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("User_RoleId");
                    OnUser_RoleIdChanged();
                }
            }
        }
        private global::System.Int32 _User_RoleId;
        partial void OnUser_RoleIdChanging(global::System.Int32 value);
        partial void OnUser_RoleIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RoleID;
        partial void OnRoleIDChanging(Nullable<global::System.Int32> value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_U_R2Role", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("FlamingoModel.FK_U_R2Role", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("FlamingoModel.FK_U_R2Role", "Role").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("FlamingoModel.FK_U_R2Role", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("FlamingoModel.FK_U_R2Role", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_U_R2User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("FlamingoModel.FK_U_R2User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("FlamingoModel.FK_U_R2User", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("FlamingoModel.FK_U_R2User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("FlamingoModel.FK_U_R2User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="UserLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserLog : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserLog 对象。
        /// </summary>
        /// <param name="userLogId">UserLogId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        public static UserLog CreateUserLog(global::System.String userLogId, global::System.DateTime created)
        {
            UserLog userLog = new UserLog();
            userLog.UserLogId = userLogId;
            userLog.Created = created;
            return userLog;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserLogId
        {
            get
            {
                return _UserLogId;
            }
            set
            {
                if (_UserLogId != value)
                {
                    OnUserLogIdChanging(value);
                    ReportPropertyChanging("UserLogId");
                    _UserLogId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserLogId");
                    OnUserLogIdChanged();
                }
            }
        }
        private global::System.String _UserLogId;
        partial void OnUserLogIdChanging(global::System.String value);
        partial void OnUserLogIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Operation
        {
            get
            {
                return _Operation;
            }
            set
            {
                OnOperationChanging(value);
                ReportPropertyChanging("Operation");
                _Operation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Operation");
                OnOperationChanged();
            }
        }
        private global::System.String _Operation;
        partial void OnOperationChanging(global::System.String value);
        partial void OnOperationChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="Voucher")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Voucher : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Voucher 对象。
        /// </summary>
        /// <param name="voucherId">VoucherId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static Voucher CreateVoucher(global::System.String voucherId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            Voucher voucher = new Voucher();
            voucher.VoucherId = voucherId;
            voucher.Created = created;
            voucher.Updated = updated;
            voucher.ActiveFlag = activeFlag;
            return voucher;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VoucherId
        {
            get
            {
                return _VoucherId;
            }
            set
            {
                if (_VoucherId != value)
                {
                    OnVoucherIdChanging(value);
                    ReportPropertyChanging("VoucherId");
                    _VoucherId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("VoucherId");
                    OnVoucherIdChanged();
                }
            }
        }
        private global::System.String _VoucherId;
        partial void OnVoucherIdChanging(global::System.String value);
        partial void OnVoucherIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VoucherBatchId
        {
            get
            {
                return _VoucherBatchId;
            }
            set
            {
                OnVoucherBatchIdChanging(value);
                ReportPropertyChanging("VoucherBatchId");
                _VoucherBatchId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VoucherBatchId");
                OnVoucherBatchIdChanged();
            }
        }
        private global::System.String _VoucherBatchId;
        partial void OnVoucherBatchIdChanging(global::System.String value);
        partial void OnVoucherBatchIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> TicketId
        {
            get
            {
                return _TicketId;
            }
            set
            {
                OnTicketIdChanging(value);
                ReportPropertyChanging("TicketId");
                _TicketId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TicketId");
                OnTicketIdChanged();
            }
        }
        private Nullable<global::System.Guid> _TicketId;
        partial void OnTicketIdChanging(Nullable<global::System.Guid> value);
        partial void OnTicketIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Single> _Price;
        partial void OnPriceChanging(Nullable<global::System.Single> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BarCode
        {
            get
            {
                return _BarCode;
            }
            set
            {
                OnBarCodeChanging(value);
                ReportPropertyChanging("BarCode");
                _BarCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BarCode");
                OnBarCodeChanged();
            }
        }
        private global::System.String _BarCode;
        partial void OnBarCodeChanging(global::System.String value);
        partial void OnBarCodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Voucher2Ticket", "Ticket")]
        public Ticket Ticket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ticket>("FlamingoModel.FK_Voucher2Ticket", "Ticket").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ticket>("FlamingoModel.FK_Voucher2Ticket", "Ticket").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ticket> TicketReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ticket>("FlamingoModel.FK_Voucher2Ticket", "Ticket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ticket>("FlamingoModel.FK_Voucher2Ticket", "Ticket", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Voucher2VoucherBatch", "VoucherBatch")]
        public VoucherBatch VoucherBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VoucherBatch>("FlamingoModel.FK_Voucher2VoucherBatch", "VoucherBatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VoucherBatch>("FlamingoModel.FK_Voucher2VoucherBatch", "VoucherBatch").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VoucherBatch> VoucherBatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VoucherBatch>("FlamingoModel.FK_Voucher2VoucherBatch", "VoucherBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VoucherBatch>("FlamingoModel.FK_Voucher2VoucherBatch", "VoucherBatch", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="VoucherBatch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VoucherBatch : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 VoucherBatch 对象。
        /// </summary>
        /// <param name="voucherBatchId">VoucherBatchId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static VoucherBatch CreateVoucherBatch(global::System.String voucherBatchId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            VoucherBatch voucherBatch = new VoucherBatch();
            voucherBatch.VoucherBatchId = voucherBatchId;
            voucherBatch.Created = created;
            voucherBatch.Updated = updated;
            voucherBatch.ActiveFlag = activeFlag;
            return voucherBatch;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VoucherBatchId
        {
            get
            {
                return _VoucherBatchId;
            }
            set
            {
                if (_VoucherBatchId != value)
                {
                    OnVoucherBatchIdChanging(value);
                    ReportPropertyChanging("VoucherBatchId");
                    _VoucherBatchId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("VoucherBatchId");
                    OnVoucherBatchIdChanged();
                }
            }
        }
        private global::System.String _VoucherBatchId;
        partial void OnVoucherBatchIdChanging(global::System.String value);
        partial void OnVoucherBatchIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VoucherTypeId
        {
            get
            {
                return _VoucherTypeId;
            }
            set
            {
                OnVoucherTypeIdChanging(value);
                ReportPropertyChanging("VoucherTypeId");
                _VoucherTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VoucherTypeId");
                OnVoucherTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _VoucherTypeId;
        partial void OnVoucherTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnVoucherTypeIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CustomerId
        {
            get
            {
                return _CustomerId;
            }
            set
            {
                OnCustomerIdChanging(value);
                ReportPropertyChanging("CustomerId");
                _CustomerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerId");
                OnCustomerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CustomerId;
        partial void OnCustomerIdChanging(Nullable<global::System.Int32> value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VoucherSubTypeId
        {
            get
            {
                return _VoucherSubTypeId;
            }
            set
            {
                OnVoucherSubTypeIdChanging(value);
                ReportPropertyChanging("VoucherSubTypeId");
                _VoucherSubTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VoucherSubTypeId");
                OnVoucherSubTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _VoucherSubTypeId;
        partial void OnVoucherSubTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnVoucherSubTypeIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VoucherName
        {
            get
            {
                return _VoucherName;
            }
            set
            {
                OnVoucherNameChanging(value);
                ReportPropertyChanging("VoucherName");
                _VoucherName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VoucherName");
                OnVoucherNameChanged();
            }
        }
        private global::System.String _VoucherName;
        partial void OnVoucherNameChanging(global::System.String value);
        partial void OnVoucherNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> VoucherPrice
        {
            get
            {
                return _VoucherPrice;
            }
            set
            {
                OnVoucherPriceChanging(value);
                ReportPropertyChanging("VoucherPrice");
                _VoucherPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VoucherPrice");
                OnVoucherPriceChanged();
            }
        }
        private Nullable<global::System.Single> _VoucherPrice;
        partial void OnVoucherPriceChanging(Nullable<global::System.Single> value);
        partial void OnVoucherPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private Nullable<global::System.Single> _UnitPrice;
        partial void OnUnitPriceChanging(Nullable<global::System.Single> value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> TotalPrice
        {
            get
            {
                return _TotalPrice;
            }
            set
            {
                OnTotalPriceChanging(value);
                ReportPropertyChanging("TotalPrice");
                _TotalPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalPrice");
                OnTotalPriceChanged();
            }
        }
        private Nullable<global::System.Single> _TotalPrice;
        partial void OnTotalPriceChanging(Nullable<global::System.Single> value);
        partial void OnTotalPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SerialScope
        {
            get
            {
                return _SerialScope;
            }
            set
            {
                OnSerialScopeChanging(value);
                ReportPropertyChanging("SerialScope");
                _SerialScope = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SerialScope");
                OnSerialScopeChanged();
            }
        }
        private global::System.String _SerialScope;
        partial void OnSerialScopeChanging(global::System.String value);
        partial void OnSerialScopeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReleaseDate
        {
            get
            {
                return _ReleaseDate;
            }
            set
            {
                OnReleaseDateChanging(value);
                ReportPropertyChanging("ReleaseDate");
                _ReleaseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReleaseDate");
                OnReleaseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReleaseDate;
        partial void OnReleaseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReleaseDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpireDate
        {
            get
            {
                return _ExpireDate;
            }
            set
            {
                OnExpireDateChanging(value);
                ReportPropertyChanging("ExpireDate");
                _ExpireDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpireDate");
                OnExpireDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpireDate;
        partial void OnExpireDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpireDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IssuedBy
        {
            get
            {
                return _IssuedBy;
            }
            set
            {
                OnIssuedByChanging(value);
                ReportPropertyChanging("IssuedBy");
                _IssuedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssuedBy");
                OnIssuedByChanged();
            }
        }
        private Nullable<global::System.Int32> _IssuedBy;
        partial void OnIssuedByChanging(Nullable<global::System.Int32> value);
        partial void OnIssuedByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrintStatus
        {
            get
            {
                return _PrintStatus;
            }
            set
            {
                OnPrintStatusChanging(value);
                ReportPropertyChanging("PrintStatus");
                _PrintStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrintStatus");
                OnPrintStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _PrintStatus;
        partial void OnPrintStatusChanging(Nullable<global::System.Int32> value);
        partial void OnPrintStatusChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_VoucherBatch2Customer", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("FlamingoModel.FK_VoucherBatch2Customer", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("FlamingoModel.FK_VoucherBatch2Customer", "Customer").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("FlamingoModel.FK_VoucherBatch2Customer", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("FlamingoModel.FK_VoucherBatch2Customer", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_Voucher2VoucherBatch", "Voucher")]
        public EntityCollection<Voucher> Voucher
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Voucher>("FlamingoModel.FK_Voucher2VoucherBatch", "Voucher");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Voucher>("FlamingoModel.FK_Voucher2VoucherBatch", "Voucher", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_VoucherBatch2VoucherSubType", "VoucherSubType")]
        public VoucherSubType VoucherSubType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VoucherSubType>("FlamingoModel.FK_VoucherBatch2VoucherSubType", "VoucherSubType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VoucherSubType>("FlamingoModel.FK_VoucherBatch2VoucherSubType", "VoucherSubType").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VoucherSubType> VoucherSubTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VoucherSubType>("FlamingoModel.FK_VoucherBatch2VoucherSubType", "VoucherSubType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VoucherSubType>("FlamingoModel.FK_VoucherBatch2VoucherSubType", "VoucherSubType", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_VoucherBatch2VoucherType", "VoucherType")]
        public VoucherType VoucherType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VoucherType>("FlamingoModel.FK_VoucherBatch2VoucherType", "VoucherType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VoucherType>("FlamingoModel.FK_VoucherBatch2VoucherType", "VoucherType").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VoucherType> VoucherTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VoucherType>("FlamingoModel.FK_VoucherBatch2VoucherType", "VoucherType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VoucherType>("FlamingoModel.FK_VoucherBatch2VoucherType", "VoucherType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="VoucherSubType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VoucherSubType : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 VoucherSubType 对象。
        /// </summary>
        /// <param name="voucherSubTypeId">VoucherSubTypeId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static VoucherSubType CreateVoucherSubType(global::System.Int32 voucherSubTypeId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            VoucherSubType voucherSubType = new VoucherSubType();
            voucherSubType.VoucherSubTypeId = voucherSubTypeId;
            voucherSubType.Created = created;
            voucherSubType.Updated = updated;
            voucherSubType.ActiveFlag = activeFlag;
            return voucherSubType;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VoucherSubTypeId
        {
            get
            {
                return _VoucherSubTypeId;
            }
            set
            {
                if (_VoucherSubTypeId != value)
                {
                    OnVoucherSubTypeIdChanging(value);
                    ReportPropertyChanging("VoucherSubTypeId");
                    _VoucherSubTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VoucherSubTypeId");
                    OnVoucherSubTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _VoucherSubTypeId;
        partial void OnVoucherSubTypeIdChanging(global::System.Int32 value);
        partial void OnVoucherSubTypeIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VoucherSubTypeName
        {
            get
            {
                return _VoucherSubTypeName;
            }
            set
            {
                OnVoucherSubTypeNameChanging(value);
                ReportPropertyChanging("VoucherSubTypeName");
                _VoucherSubTypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VoucherSubTypeName");
                OnVoucherSubTypeNameChanged();
            }
        }
        private global::System.String _VoucherSubTypeName;
        partial void OnVoucherSubTypeNameChanging(global::System.String value);
        partial void OnVoucherSubTypeNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_VoucherBatch2VoucherSubType", "VoucherBatch")]
        public EntityCollection<VoucherBatch> VoucherBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VoucherBatch>("FlamingoModel.FK_VoucherBatch2VoucherSubType", "VoucherBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VoucherBatch>("FlamingoModel.FK_VoucherBatch2VoucherSubType", "VoucherBatch", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlamingoModel", Name="VoucherType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VoucherType : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 VoucherType 对象。
        /// </summary>
        /// <param name="voucherTypeId">VoucherTypeId 属性的初始值。</param>
        /// <param name="created">Created 属性的初始值。</param>
        /// <param name="updated">Updated 属性的初始值。</param>
        /// <param name="activeFlag">ActiveFlag 属性的初始值。</param>
        public static VoucherType CreateVoucherType(global::System.Int32 voucherTypeId, global::System.DateTime created, global::System.DateTime updated, global::System.Boolean activeFlag)
        {
            VoucherType voucherType = new VoucherType();
            voucherType.VoucherTypeId = voucherTypeId;
            voucherType.Created = created;
            voucherType.Updated = updated;
            voucherType.ActiveFlag = activeFlag;
            return voucherType;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VoucherTypeId
        {
            get
            {
                return _VoucherTypeId;
            }
            set
            {
                if (_VoucherTypeId != value)
                {
                    OnVoucherTypeIdChanging(value);
                    ReportPropertyChanging("VoucherTypeId");
                    _VoucherTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VoucherTypeId");
                    OnVoucherTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _VoucherTypeId;
        partial void OnVoucherTypeIdChanging(global::System.Int32 value);
        partial void OnVoucherTypeIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VoucherTypeName
        {
            get
            {
                return _VoucherTypeName;
            }
            set
            {
                OnVoucherTypeNameChanging(value);
                ReportPropertyChanging("VoucherTypeName");
                _VoucherTypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VoucherTypeName");
                OnVoucherTypeNameChanged();
            }
        }
        private global::System.String _VoucherTypeName;
        partial void OnVoucherTypeNameChanging(global::System.String value);
        partial void OnVoucherTypeNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private global::System.DateTime _Updated;
        partial void OnUpdatedChanging(global::System.DateTime value);
        partial void OnUpdatedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ActiveFlag
        {
            get
            {
                return _ActiveFlag;
            }
            set
            {
                OnActiveFlagChanging(value);
                ReportPropertyChanging("ActiveFlag");
                _ActiveFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActiveFlag");
                OnActiveFlagChanged();
            }
        }
        private global::System.Boolean _ActiveFlag;
        partial void OnActiveFlagChanging(global::System.Boolean value);
        partial void OnActiveFlagChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlamingoModel", "FK_VoucherBatch2VoucherType", "VoucherBatch")]
        public EntityCollection<VoucherBatch> VoucherBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VoucherBatch>("FlamingoModel.FK_VoucherBatch2VoucherType", "VoucherBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VoucherBatch>("FlamingoModel.FK_VoucherBatch2VoucherType", "VoucherBatch", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
